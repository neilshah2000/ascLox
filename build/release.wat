(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i64_i64_i32_i64_i32_=>_i32 (func (param i64 i64 i32 i64 i32) (result i32)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $none_=>_f64 (func (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 55560))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/vm/vm (mut i32) (i32.const 0))
 (global $assembly/compiler/current (mut i32) (i32.const 0))
 (global $assembly/compiler/parser (mut i32) (i32.const 0))
 (global $assembly/scanner/scanner (mut i32) (i32.const 0))
 (global $assembly/scanner/codestring (mut i32) (i32.const 1056))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $assembly/compiler/currentClass (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $assembly/index/outputstring (mut i32) (i32.const 1056))
 (global $assembly/index/debugFlag (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 22544))
 (memory $0 1)
 (data (i32.const 1036) "\1c")
 (data (i32.const 1048) "\02")
 (data (i32.const 1068) "<")
 (data (i32.const 1080) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 1132) "<")
 (data (i32.const 1144) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 1260) "<")
 (data (i32.const 1272) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 1324) ",")
 (data (i32.const 1336) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 1404) "<")
 (data (i32.const 1416) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 1468) "\1c")
 (data (i32.const 1480) "\14\00\00\00\08\00\00\00\01")
 (data (i32.const 1500) ",")
 (data (i32.const 1512) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 1548) "<")
 (data (i32.const 1560) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 1612) "\1c")
 (data (i32.const 1624) "\15\00\00\00\08\00\00\00\02")
 (data (i32.const 1644) "|")
 (data (i32.const 1656) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data (i32.const 1772) "\1c")
 (data (i32.const 1784) "\16\00\00\00\08\00\00\00\03")
 (data (i32.const 1804) "<")
 (data (i32.const 1816) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data (i32.const 1868) "<")
 (data (i32.const 1880) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 1932) "\1c")
 (data (i32.const 1944) "\17\00\00\00\08\00\00\00\04")
 (data (i32.const 1964) ",")
 (data (i32.const 1976) "\02\00\00\00\14\00\00\000\001\002\003\004\005\006\007\008\009")
 (data (i32.const 2012) ",")
 (data (i32.const 2024) "\02\00\00\00\14\00\00\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j")
 (data (i32.const 2060) "<")
 (data (i32.const 2072) "\02\00\00\00,\00\00\00m\00e\00m\00o\00r\00y\00 \00s\00t\00o\00r\00e\00d\00 \00s\00t\00r\00i\00n\00g\00:\00 ")
 (data (i32.const 2124) "|")
 (data (i32.const 2136) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 2252) "<")
 (data (i32.const 2264) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 2316) "\1c")
 (data (i32.const 2328) "\02\00\00\00\02\00\00\000")
 (data (i32.const 2348) "0\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009")
 (data (i32.const 2748) "\1c\04")
 (data (i32.const 2760) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data (i32.const 3804) "\\")
 (data (i32.const 3816) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 3900) "\1c")
 (data (i32.const 3912) "\18\00\00\00\08\00\00\00\05")
 (data (i32.const 3932) "\1c")
 (data (i32.const 3944) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data (i32.const 3964) "\1c")
 (data (i32.const 3976) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data (i32.const 3996) "\1c")
 (data (i32.const 4008) "\02\00\00\00\06\00\00\00n\00i\00l")
 (data (i32.const 4028) "\1c")
 (data (i32.const 4040) "\02\00\00\00\06\00\00\000\00.\000")
 (data (i32.const 4060) "\1c")
 (data (i32.const 4072) "\02\00\00\00\06\00\00\00N\00a\00N")
 (data (i32.const 4092) ",")
 (data (i32.const 4104) "\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 4140) ",")
 (data (i32.const 4152) "\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 4248) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 4944) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 5120) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 5164) "|")
 (data (i32.const 5176) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data (i32.const 5292) "<")
 (data (i32.const 5304) "\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00v\00a\00l\00u\00e\00.\00t\00s")
 (data (i32.const 5356) "<")
 (data (i32.const 5368) "\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t")
 (data (i32.const 5420) "<")
 (data (i32.const 5432) "\02\00\00\00$\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00o\00b\00j\00e\00c\00t\00.\00t\00s")
 (data (i32.const 5484) ",")
 (data (i32.const 5496) "\02\00\00\00\10\00\00\00<\00s\00c\00r\00i\00p\00t\00>")
 (data (i32.const 5532) "\1c")
 (data (i32.const 5544) "\02\00\00\00\08\00\00\00<\00f\00n\00 ")
 (data (i32.const 5564) "\1c")
 (data (i32.const 5576) "\02\00\00\00\02\00\00\00>")
 (data (i32.const 5596) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\b0\15\00\00\00\00\00\00\d0\15")
 (data (i32.const 5628) ",")
 (data (i32.const 5640) "\02\00\00\00\12\00\00\00 \00i\00n\00s\00t\00a\00n\00c\00e")
 (data (i32.const 5676) ",")
 (data (i32.const 5688) "\02\00\00\00\16\00\00\00<\00n\00a\00t\00i\00v\00e\00 \00f\00n\00>")
 (data (i32.const 5724) "\1c")
 (data (i32.const 5736) "\1d\00\00\00\08\00\00\00\06")
 (data (i32.const 5756) ",")
 (data (i32.const 5768) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 5804) "\1c")
 (data (i32.const 5816) "\1e\00\00\00\08\00\00\00\07")
 (data (i32.const 5836) "\1c")
 (data (i32.const 5848) "\02\00\00\00\02\00\00\00 ")
 (data (i32.const 5868) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\e0\16")
 (data (i32.const 5900) "\1c")
 (data (i32.const 5912) "\1f\00\00\00\08\00\00\00\08")
 (data (i32.const 5932) "\1c")
 (data (i32.const 5944) "\02\00\00\00\08\00\00\00 \00-\00>\00 ")
 (data (i32.const 5964) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\e0\16\00\00\00\00\00\00@\17")
 (data (i32.const 6012) "\1c")
 (data (i32.const 6024) " \00\00\00\08\00\00\00\t")
 (data (i32.const 6044) "\1c")
 (data (i32.const 6056) "\02\00\00\00\0c\00\00\00 \00\t\00\t\00\t\00\t\00\t")
 (data (i32.const 6076) ",")
 (data (i32.const 6088) "\02\00\00\00\0e\00\00\00 \00\t\00\t\00\t\00\t\00\t\00\'")
 (data (i32.const 6124) "\1c")
 (data (i32.const 6136) "\02\00\00\00\02\00\00\00\'")
 (data (i32.const 6156) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\18\00\00\00\00\00\00\00\b0\17\00\00\00\00\00\00\d0\17\00\00\00\00\00\00\00\18")
 (data (i32.const 6204) "\1c")
 (data (i32.const 6216) "\1f\00\00\00\08\00\00\00\n")
 (data (i32.const 6236) ",")
 (data (i32.const 6248) "\02\00\00\00\16\00\00\00 \00 \00\t\00\t\00\t\00|\00 \00 \00\t\00\t\00\t")
 (data (i32.const 6284) "\1c")
 (data (i32.const 6296) "\02\00\00\00\n\00\00\00 \00 \00\t\00\t\00\t")
 (data (i32.const 6316) "\1c")
 (data (i32.const 6328) "\02\00\00\00\06\00\00\00\t\00\t\00\t")
 (data (i32.const 6348) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\10\00\00\00\00\00\00\00\a0\18\00\00\00\00\00\00\c0\18")
 (data (i32.const 6396) ",")
 (data (i32.const 6408) "\02\00\00\00\18\00\00\00 \00O\00P\00_\00C\00O\00N\00S\00T\00A\00N\00T")
 (data (i32.const 6444) ",")
 (data (i32.const 6456) "\02\00\00\00\0e\00\00\00 \00O\00P\00_\00N\00I\00L")
 (data (i32.const 6492) ",")
 (data (i32.const 6504) "\02\00\00\00\10\00\00\00 \00O\00P\00_\00T\00R\00U\00E")
 (data (i32.const 6540) ",")
 (data (i32.const 6552) "\02\00\00\00\12\00\00\00 \00O\00P\00_\00F\00A\00L\00S\00E")
 (data (i32.const 6588) ",")
 (data (i32.const 6600) "\02\00\00\00\0e\00\00\00 \00O\00P\00_\00P\00O\00P")
 (data (i32.const 6636) ",")
 (data (i32.const 6648) "\02\00\00\00\1a\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00L\00O\00C\00A\00L")
 (data (i32.const 6684) ",")
 (data (i32.const 6696) "\02\00\00\00\1a\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00L\00O\00C\00A\00L")
 (data (i32.const 6732) ",")
 (data (i32.const 6744) "\02\00\00\00\1c\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00G\00L\00O\00B\00A\00L")
 (data (i32.const 6780) "<")
 (data (i32.const 6792) "\02\00\00\00\"\00\00\00 \00O\00P\00_\00D\00E\00F\00I\00N\00E\00_\00G\00L\00O\00B\00A\00L")
 (data (i32.const 6844) ",")
 (data (i32.const 6856) "\02\00\00\00\1c\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00G\00L\00O\00B\00A\00L")
 (data (i32.const 6892) "<")
 (data (i32.const 6904) "\02\00\00\00\1e\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00U\00P\00V\00A\00L\00U\00E")
 (data (i32.const 6956) "<")
 (data (i32.const 6968) "\02\00\00\00\1e\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00U\00P\00V\00A\00L\00U\00E")
 (data (i32.const 7020) "<")
 (data (i32.const 7032) "\02\00\00\00 \00\00\00 \00O\00P\00_\00G\00E\00T\00_\00P\00R\00O\00P\00E\00R\00T\00Y")
 (data (i32.const 7084) "<")
 (data (i32.const 7096) "\02\00\00\00 \00\00\00 \00O\00P\00_\00S\00E\00T\00_\00P\00R\00O\00P\00E\00R\00T\00Y")
 (data (i32.const 7148) ",")
 (data (i32.const 7160) "\02\00\00\00\1a\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00S\00U\00P\00E\00R")
 (data (i32.const 7196) ",")
 (data (i32.const 7208) "\02\00\00\00\12\00\00\00 \00O\00P\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 7244) ",")
 (data (i32.const 7256) "\02\00\00\00\16\00\00\00 \00O\00P\00_\00G\00R\00E\00A\00T\00E\00R")
 (data (i32.const 7292) ",")
 (data (i32.const 7304) "\02\00\00\00\10\00\00\00 \00O\00P\00_\00L\00E\00S\00S")
 (data (i32.const 7340) ",")
 (data (i32.const 7352) "\02\00\00\00\0e\00\00\00 \00O\00P\00_\00A\00D\00D")
 (data (i32.const 7388) ",")
 (data (i32.const 7400) "\02\00\00\00\18\00\00\00 \00O\00P\00_\00S\00U\00B\00T\00R\00A\00C\00T")
 (data (i32.const 7436) ",")
 (data (i32.const 7448) "\02\00\00\00\18\00\00\00 \00O\00P\00_\00M\00U\00L\00T\00I\00P\00L\00Y")
 (data (i32.const 7484) ",")
 (data (i32.const 7496) "\02\00\00\00\14\00\00\00 \00O\00P\00_\00D\00I\00V\00I\00D\00E")
 (data (i32.const 7532) ",")
 (data (i32.const 7544) "\02\00\00\00\0e\00\00\00 \00O\00P\00_\00N\00O\00T")
 (data (i32.const 7580) ",")
 (data (i32.const 7592) "\02\00\00\00\14\00\00\00 \00O\00P\00_\00N\00E\00G\00A\00T\00E")
 (data (i32.const 7628) ",")
 (data (i32.const 7640) "\02\00\00\00\12\00\00\00 \00O\00P\00_\00P\00R\00I\00N\00T")
 (data (i32.const 7676) ",")
 (data (i32.const 7688) "\02\00\00\00\10\00\00\00 \00O\00P\00_\00J\00U\00M\00P")
 (data (i32.const 7724) "<")
 (data (i32.const 7736) "\02\00\00\00\"\00\00\00 \00O\00P\00_\00J\00U\00M\00P\00_\00I\00F\00_\00F\00A\00L\00S\00E")
 (data (i32.const 7788) ",")
 (data (i32.const 7800) "\02\00\00\00\10\00\00\00 \00O\00P\00_\00L\00O\00O\00P")
 (data (i32.const 7836) ",")
 (data (i32.const 7848) "\02\00\00\00\10\00\00\00 \00O\00P\00_\00C\00A\00L\00L")
 (data (i32.const 7884) ",")
 (data (i32.const 7896) "\02\00\00\00\14\00\00\00 \00O\00P\00_\00I\00N\00V\00O\00K\00E")
 (data (i32.const 7932) "\1c")
 (data (i32.const 7944) "\02\00\00\00\08\00\00\00 \00\t\00\t\00\t")
 (data (i32.const 7964) "<\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00 \00\00\00\00\00\00\00\10\1f\00\00\00\00\00\00\b0\17\00\00\00\00\00\00\d0\17\00\00\00\00\00\00\00\18")
 (data (i32.const 8028) "<")
 (data (i32.const 8040) "\02\00\00\00 \00\00\00 \00O\00P\00_\00S\00U\00P\00E\00R\00_\00I\00N\00V\00O\00K\00E")
 (data (i32.const 8092) ",")
 (data (i32.const 8104) "\02\00\00\00\1a\00\00\00 \00O\00P\00_\00C\00L\00O\00S\00U\00R\00E\00 \00\t")
 (data (i32.const 8140) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\b0\1f\00\00\00\00\00\00\10\1f")
 (data (i32.const 8188) ",")
 (data (i32.const 8200) "\02\00\00\00\14\00\00\00\t\00\t\00\t\00\t\00\t\00\t\00|\00\t\00\t\00\t")
 (data (i32.const 8236) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\10 \00\00\00\00\00\00\e0\16")
 (data (i32.const 8284) "\1c")
 (data (i32.const 8296) "\02\00\00\00\n\00\00\00l\00o\00c\00a\00l")
 (data (i32.const 8316) ",")
 (data (i32.const 8328) "\02\00\00\00\0e\00\00\00u\00p\00v\00a\00l\00u\00e")
 (data (i32.const 8364) "<")
 (data (i32.const 8376) "\02\00\00\00\"\00\00\00 \00O\00P\00_\00C\00L\00O\00S\00E\00_\00U\00P\00V\00A\00L\00U\00E")
 (data (i32.const 8428) ",")
 (data (i32.const 8440) "\02\00\00\00\14\00\00\00 \00O\00P\00_\00R\00E\00T\00U\00R\00N")
 (data (i32.const 8476) ",")
 (data (i32.const 8488) "\02\00\00\00\12\00\00\00 \00O\00P\00_\00C\00L\00A\00S\00S")
 (data (i32.const 8524) ",")
 (data (i32.const 8536) "\02\00\00\00\16\00\00\00 \00O\00P\00_\00I\00N\00H\00E\00R\00I\00T")
 (data (i32.const 8572) ",")
 (data (i32.const 8584) "\02\00\00\00\14\00\00\00 \00O\00P\00_\00M\00E\00T\00H\00O\00D")
 (data (i32.const 8620) "<")
 (data (i32.const 8632) "\02\00\00\00 \00\00\00 \00U\00n\00k\00n\00o\00w\00n\00 \00o\00p\00c\00o\00d\00e\00 ")
 (data (i32.const 8684) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\c0!")
 (data (i32.const 8716) "\1c")
 (data (i32.const 8728) "!\00\00\00\08\00\00\00\0b")
 (data (i32.const 8748) "\1c")
 (data (i32.const 8760) "\02\00\00\00\06\00\00\00=\00=\00 ")
 (data (i32.const 8780) "\1c")
 (data (i32.const 8792) "\02\00\00\00\06\00\00\00 \00=\00=")
 (data (i32.const 8812) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00@\"\00\00\00\00\00\00`\"")
 (data (i32.const 8844) "\bc")
 (data (i32.const 8856) "\02\00\00\00\a0\00\00\00o\00f\00f\00s\00e\00t\00 \00 \00\t\00l\00i\00n\00e\00 \00n\00o\00.\00 \00 \00\t\00 \00b\00y\00t\00e\00c\00o\00d\00e\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00 \00 \00\t\00c\00o\00n\00s\00t\00a\00n\00t\00 \00i\00n\00d\00e\00x\00 \00 \00\t\00c\00o\00n\00s\00t\00a\00n\00t\00 \00v\00a\00l\00u\00e")
 (data (i32.const 9036) "\1c")
 (data (i32.const 9048) "\"\00\00\00\08\00\00\00\0c")
 (data (i32.const 9068) "<")
 (data (i32.const 9080) "\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00F\00T\00_\00P\00A\00R\00E\00N")
 (data (i32.const 9132) "<")
 (data (i32.const 9144) "\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00R\00I\00G\00H\00T\00_\00P\00A\00R\00E\00N")
 (data (i32.const 9196) "<")
 (data (i32.const 9208) "\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00F\00T\00_\00B\00R\00A\00C\00E")
 (data (i32.const 9260) "<")
 (data (i32.const 9272) "\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00R\00I\00G\00H\00T\00_\00B\00R\00A\00C\00E")
 (data (i32.const 9324) ",")
 (data (i32.const 9336) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00C\00O\00M\00M\00A")
 (data (i32.const 9372) ",")
 (data (i32.const 9384) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00D\00O\00T")
 (data (i32.const 9420) ",")
 (data (i32.const 9432) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00M\00I\00N\00U\00S")
 (data (i32.const 9468) ",")
 (data (i32.const 9480) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00P\00L\00U\00S")
 (data (i32.const 9516) "<")
 (data (i32.const 9528) "\02\00\00\00\1e\00\00\00T\00O\00K\00E\00N\00_\00S\00E\00M\00I\00C\00O\00L\00O\00N")
 (data (i32.const 9580) ",")
 (data (i32.const 9592) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00S\00L\00A\00S\00H")
 (data (i32.const 9628) ",")
 (data (i32.const 9640) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00S\00T\00A\00R")
 (data (i32.const 9676) ",")
 (data (i32.const 9688) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00B\00A\00N\00G")
 (data (i32.const 9724) "<")
 (data (i32.const 9736) "\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00B\00A\00N\00G\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 9788) ",")
 (data (i32.const 9800) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 9836) "<")
 (data (i32.const 9848) "\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00E\00Q\00U\00A\00L\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 9900) ",")
 (data (i32.const 9912) "\02\00\00\00\1a\00\00\00T\00O\00K\00E\00N\00_\00G\00R\00E\00A\00T\00E\00R")
 (data (i32.const 9948) "<")
 (data (i32.const 9960) "\02\00\00\00&\00\00\00T\00O\00K\00E\00N\00_\00G\00R\00E\00A\00T\00E\00R\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 10012) ",")
 (data (i32.const 10024) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00L\00E\00S\00S")
 (data (i32.const 10060) "<")
 (data (i32.const 10072) "\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00S\00S\00_\00E\00Q\00U\00A\00L")
 (data (i32.const 10124) "<")
 (data (i32.const 10136) "\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00I\00D\00E\00N\00T\00I\00F\00I\00E\00R")
 (data (i32.const 10188) ",")
 (data (i32.const 10200) "\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00S\00T\00R\00I\00N\00G")
 (data (i32.const 10236) ",")
 (data (i32.const 10248) "\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00N\00U\00M\00B\00E\00R")
 (data (i32.const 10284) ",")
 (data (i32.const 10296) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00A\00N\00D")
 (data (i32.const 10332) ",")
 (data (i32.const 10344) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00C\00L\00A\00S\00S")
 (data (i32.const 10380) ",")
 (data (i32.const 10392) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00E\00L\00S\00E")
 (data (i32.const 10428) ",")
 (data (i32.const 10440) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00F\00A\00L\00S\00E")
 (data (i32.const 10476) ",")
 (data (i32.const 10488) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00F\00O\00R")
 (data (i32.const 10524) ",")
 (data (i32.const 10536) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00F\00U\00N")
 (data (i32.const 10572) ",")
 (data (i32.const 10584) "\02\00\00\00\10\00\00\00T\00O\00K\00E\00N\00_\00I\00F")
 (data (i32.const 10620) ",")
 (data (i32.const 10632) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00N\00I\00L")
 (data (i32.const 10668) ",")
 (data (i32.const 10680) "\02\00\00\00\10\00\00\00T\00O\00K\00E\00N\00_\00O\00R")
 (data (i32.const 10716) ",")
 (data (i32.const 10728) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00P\00R\00I\00N\00T")
 (data (i32.const 10764) ",")
 (data (i32.const 10776) "\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00R\00E\00T\00U\00R\00N")
 (data (i32.const 10812) ",")
 (data (i32.const 10824) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00S\00U\00P\00E\00R")
 (data (i32.const 10860) ",")
 (data (i32.const 10872) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00T\00H\00I\00S")
 (data (i32.const 10908) ",")
 (data (i32.const 10920) "\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00T\00R\00U\00E")
 (data (i32.const 10956) ",")
 (data (i32.const 10968) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00V\00A\00R")
 (data (i32.const 11004) ",")
 (data (i32.const 11016) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00W\00H\00I\00L\00E")
 (data (i32.const 11052) ",")
 (data (i32.const 11064) "\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00E\00R\00R\00O\00R")
 (data (i32.const 11100) ",")
 (data (i32.const 11112) "\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00E\00O\00F")
 (data (i32.const 11148) "\bc")
 (data (i32.const 11160) "\01\00\00\00\a0\00\00\00\80#\00\00\c0#\00\00\00$\00\00@$\00\00\80$\00\00\b0$\00\00\e0$\00\00\10%\00\00@%\00\00\80%\00\00\b0%\00\00\e0%\00\00\10&\00\00P&\00\00\80&\00\00\c0&\00\00\f0&\00\000\'\00\00`\'\00\00\a0\'\00\00\e0\'\00\00\10(\00\00@(\00\00p(\00\00\a0(\00\00\d0(\00\00\00)\00\000)\00\00`)\00\00\90)\00\00\c0)\00\00\f0)\00\00 *\00\00P*\00\00\80*\00\00\b0*\00\00\e0*\00\00\10+\00\00@+\00\00p+")
 (data (i32.const 11340) ",")
 (data (i32.const 11352) "#\00\00\00\10\00\00\00\a0+\00\00\a0+\00\00\a0\00\00\00(")
 (data (i32.const 11388) "\1c")
 (data (i32.const 11400) "\01")
 (data (i32.const 11420) ",")
 (data (i32.const 11432) ".\00\00\00\10\00\00\00\90,\00\00\90,")
 (data (i32.const 11468) "\1c")
 (data (i32.const 11480) "\02\00\00\00\02\00\00\00\r")
 (data (i32.const 11500) "\1c")
 (data (i32.const 11512) "\02\00\00\00\02\00\00\00\t")
 (data (i32.const 11532) "\1c")
 (data (i32.const 11544) "\02\00\00\00\02\00\00\00\n")
 (data (i32.const 11564) "\1c")
 (data (i32.const 11576) "\02\00\00\00\02\00\00\00/")
 (data (i32.const 11596) "\1c")
 (data (i32.const 11608) "\02\00\00\00\02")
 (data (i32.const 11628) "\1c")
 (data (i32.const 11640) "\02\00\00\00\02\00\00\00a")
 (data (i32.const 11660) "\1c")
 (data (i32.const 11672) "\02\00\00\00\02\00\00\00z")
 (data (i32.const 11692) "\1c")
 (data (i32.const 11704) "\02\00\00\00\02\00\00\00A")
 (data (i32.const 11724) "\1c")
 (data (i32.const 11736) "\02\00\00\00\02\00\00\00Z")
 (data (i32.const 11756) "\1c")
 (data (i32.const 11768) "\02\00\00\00\02\00\00\00_")
 (data (i32.const 11788) "\1c")
 (data (i32.const 11800) "\02\00\00\00\02\00\00\009")
 (data (i32.const 11820) "\1c")
 (data (i32.const 11832) "\02\00\00\00\02\00\00\00c")
 (data (i32.const 11852) "\1c")
 (data (i32.const 11864) "\02\00\00\00\02\00\00\00e")
 (data (i32.const 11884) "\1c")
 (data (i32.const 11896) "\02\00\00\00\02\00\00\00f")
 (data (i32.const 11916) "\1c")
 (data (i32.const 11928) "\02\00\00\00\02\00\00\00i")
 (data (i32.const 11948) "\1c")
 (data (i32.const 11960) "\02\00\00\00\02\00\00\00n")
 (data (i32.const 11980) "\1c")
 (data (i32.const 11992) "\02\00\00\00\02\00\00\00o")
 (data (i32.const 12012) "\1c")
 (data (i32.const 12024) "\02\00\00\00\02\00\00\00p")
 (data (i32.const 12044) "\1c")
 (data (i32.const 12056) "\02\00\00\00\02\00\00\00r")
 (data (i32.const 12076) "\1c")
 (data (i32.const 12088) "\02\00\00\00\02\00\00\00s")
 (data (i32.const 12108) "\1c")
 (data (i32.const 12120) "\02\00\00\00\02\00\00\00t")
 (data (i32.const 12140) "\1c")
 (data (i32.const 12152) "\02\00\00\00\02\00\00\00v")
 (data (i32.const 12172) "\1c")
 (data (i32.const 12184) "\02\00\00\00\02\00\00\00w")
 (data (i32.const 12204) "\1c")
 (data (i32.const 12216) "\02\00\00\00\04\00\00\00n\00d")
 (data (i32.const 12236) "\1c")
 (data (i32.const 12248) "\02\00\00\00\08\00\00\00l\00a\00s\00s")
 (data (i32.const 12268) "\1c")
 (data (i32.const 12280) "\02\00\00\00\06\00\00\00l\00s\00e")
 (data (i32.const 12300) "\1c")
 (data (i32.const 12312) "\02\00\00\00\02\00\00\00u")
 (data (i32.const 12332) "\1c")
 (data (i32.const 12344) "\02\00\00\00\04\00\00\00i\00l")
 (data (i32.const 12364) "\1c")
 (data (i32.const 12376) "\02\00\00\00\08\00\00\00r\00i\00n\00t")
 (data (i32.const 12396) "\1c")
 (data (i32.const 12408) "\02\00\00\00\n\00\00\00e\00t\00u\00r\00n")
 (data (i32.const 12428) "\1c")
 (data (i32.const 12440) "\02\00\00\00\08\00\00\00u\00p\00e\00r")
 (data (i32.const 12460) "\1c")
 (data (i32.const 12472) "\02\00\00\00\02\00\00\00h")
 (data (i32.const 12492) "\1c")
 (data (i32.const 12504) "\02\00\00\00\04\00\00\00i\00s")
 (data (i32.const 12524) "\1c")
 (data (i32.const 12536) "\02\00\00\00\04\00\00\00u\00e")
 (data (i32.const 12556) "\1c")
 (data (i32.const 12568) "\02\00\00\00\04\00\00\00a\00r")
 (data (i32.const 12588) "\1c")
 (data (i32.const 12600) "\02\00\00\00\08\00\00\00h\00i\00l\00e")
 (data (i32.const 12620) "\1c")
 (data (i32.const 12632) "\02\00\00\00\02\00\00\00.")
 (data (i32.const 12652) "\1c")
 (data (i32.const 12664) "\02\00\00\00\02\00\00\00(")
 (data (i32.const 12684) "\1c")
 (data (i32.const 12696) "\02\00\00\00\02\00\00\00)")
 (data (i32.const 12716) "\1c")
 (data (i32.const 12728) "\02\00\00\00\02\00\00\00{")
 (data (i32.const 12748) "\1c")
 (data (i32.const 12760) "\02\00\00\00\02\00\00\00}")
 (data (i32.const 12780) "\1c")
 (data (i32.const 12792) "\02\00\00\00\02\00\00\00;")
 (data (i32.const 12812) "\1c")
 (data (i32.const 12824) "\02\00\00\00\02\00\00\00,")
 (data (i32.const 12844) "\1c")
 (data (i32.const 12856) "\02\00\00\00\02\00\00\00-")
 (data (i32.const 12876) "\1c")
 (data (i32.const 12888) "\02\00\00\00\02\00\00\00+")
 (data (i32.const 12908) "\1c")
 (data (i32.const 12920) "\02\00\00\00\02\00\00\00*")
 (data (i32.const 12940) "\1c")
 (data (i32.const 12952) "\02\00\00\00\02\00\00\00!")
 (data (i32.const 12972) "\1c")
 (data (i32.const 12984) "\02\00\00\00\02\00\00\00=")
 (data (i32.const 13004) "\1c")
 (data (i32.const 13016) "\02\00\00\00\02\00\00\00<")
 (data (i32.const 13036) "\1c")
 (data (i32.const 13048) "\02\00\00\00\02\00\00\00\"")
 (data (i32.const 13068) "<")
 (data (i32.const 13080) "\02\00\00\00(\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00.")
 (data (i32.const 13132) "<")
 (data (i32.const 13144) "\02\00\00\00*\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00.")
 (data (i32.const 13196) "\1c")
 (data (i32.const 13208) "\02\00\00\00\0c\00\00\00[\00l\00i\00n\00e\00 ")
 (data (i32.const 13228) ",")
 (data (i32.const 13240) "\02\00\00\00\0e\00\00\00]\00 \00E\00r\00r\00o\00r")
 (data (i32.const 13276) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\a03\00\00\00\00\00\00\c03")
 (data (i32.const 13308) ",")
 (data (i32.const 13320) "\02\00\00\00\0e\00\00\00 \00a\00t\00 \00e\00n\00d")
 (data (i32.const 13356) "\1c")
 (data (i32.const 13368) "\02\00\00\00\08\00\00\00 \00a\00t\00 ")
 (data (i32.const 13388) ",")
 (data (i32.const 13400) "\02\00\00\00\1a\00\00\00C\00O\00M\00P\00I\00L\00E\00 \00E\00R\00R\00O\00R")
 (data (i32.const 13436) "\1c")
 (data (i32.const 13448) "\02\00\00\00\04\00\00\00:\00 ")
 (data (i32.const 13468) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\904")
 (data (i32.const 13500) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\904")
 (data (i32.const 13532) "<")
 (data (i32.const 13544) "\02\00\00\00$\00\00\00E\00x\00p\00e\00c\00t\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.")
 (data (i32.const 13596) "L")
 (data (i32.const 13608) "\02\00\00\004\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00a\00s\00s\00i\00g\00n\00m\00e\00n\00t\00 \00t\00a\00r\00g\00e\00t\00.")
 (data (i32.const 13676) "L")
 (data (i32.const 13688) "\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.")
 (data (i32.const 13756) "\1c")
 (data (i32.const 13768) "/\00\00\00\08\00\00\00\r")
 (data (i32.const 13788) "\\")
 (data (i32.const 13800) "\02\00\00\00F\00\00\00C\00a\00n\00\'\00t\00 \00h\00a\00v\00e\00 \00m\00o\00r\00e\00 \00t\00h\00a\00n\00 \002\005\005\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00.")
 (data (i32.const 13884) "L")
 (data (i32.const 13896) "\02\00\00\006\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00.")
 (data (i32.const 13964) "\1c")
 (data (i32.const 13976) "/\00\00\00\08\00\00\00\0e")
 (data (i32.const 13996) "\\")
 (data (i32.const 14008) "\02\00\00\00>\00\00\00E\00x\00p\00e\00c\00t\00 \00p\00r\00o\00p\00e\00r\00t\00y\00 \00n\00a\00m\00e\00 \00a\00f\00t\00e\00r\00 \00\'\00.\00\'\00.")
 (data (i32.const 14092) ",")
 (data (i32.const 14104) "\02\00\00\00\1c\00\00\00s\00e\00a\00r\00c\00h\00i\00n\00g\00 \00f\00o\00r\00 ")
 (data (i32.const 14140) "\1c")
 (data (i32.const 14152) "\02\00\00\00\0c\00\00\00f\00o\00u\00n\00d\00 ")
 (data (i32.const 14172) "\\")
 (data (i32.const 14184) "\02\00\00\00>\00\00\00r\00e\00t\00u\00r\00n\00 \00i\00n\00t\00e\00r\00n\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00c\00o\00p\00y")
 (data (i32.const 14268) "\\")
 (data (i32.const 14280) "\02\00\00\00@\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00c\00o\00n\00s\00t\00a\00n\00t\00s\00 \00i\00n\00 \00o\00n\00e\00 \00c\00h\00u\00n\00k\00.")
 (data (i32.const 14364) "\1c")
 (data (i32.const 14376) "/\00\00\00\08\00\00\00\0f")
 (data (i32.const 14396) "\1c")
 (data (i32.const 14408) "/\00\00\00\08\00\00\00\10")
 (data (i32.const 14428) "\1c")
 (data (i32.const 14440) "/\00\00\00\08\00\00\00\11")
 (data (i32.const 14460) "|")
 (data (i32.const 14472) "\02\00\00\00d\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00a\00d\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00i\00n\00 \00i\00t\00\'\00s\00 \00o\00w\00n\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00r\00.")
 (data (i32.const 14588) "<")
 (data (i32.const 14600) "\02\00\00\00(\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00m\00p\00i\00l\00e\00r\00.\00t\00s")
 (data (i32.const 14652) "L")
 (data (i32.const 14664) "\02\00\00\002\00\00\00a\00d\00d\00i\00n\00g\00 \00l\00o\00c\00a\00l\00 \00u\00p\00v\00a\00l\00u\00e\00 \00f\00o\00r\00 ")
 (data (i32.const 14732) "l")
 (data (i32.const 14744) "\02\00\00\00N\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00c\00l\00o\00s\00u\00r\00e\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00i\00n\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.")
 (data (i32.const 14844) "\\")
 (data (i32.const 14856) "\02\00\00\00J\00\00\00a\00d\00d\00i\00n\00g\00 \00s\00u\00r\00r\00o\00u\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e\00 \00u\00p\00v\00a\00l\00u\00e\00 \00f\00o\00r\00 ")
 (data (i32.const 14940) "\1c")
 (data (i32.const 14952) "/\00\00\00\08\00\00\00\12")
 (data (i32.const 14972) "\1c")
 (data (i32.const 14984) "/\00\00\00\08\00\00\00\13")
 (data (i32.const 15014) "\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 15196) "\1c")
 (data (i32.const 15208) "/\00\00\00\08\00\00\00\14")
 (data (i32.const 15228) "L")
 (data (i32.const 15240) "\02\00\00\006\00\00\00T\00o\00o\00 \00m\00u\00c\00h\00 \00c\00o\00d\00e\00 \00t\00o\00 \00j\00u\00m\00p\00 \00o\00v\00e\00r\00.")
 (data (i32.const 15308) "\1c")
 (data (i32.const 15320) "/\00\00\00\08\00\00\00\15")
 (data (i32.const 15340) "\1c")
 (data (i32.const 15352) "/\00\00\00\08\00\00\00\16")
 (data (i32.const 15372) "\1c")
 (data (i32.const 15384) "/\00\00\00\08\00\00\00\17")
 (data (i32.const 15404) "\\")
 (data (i32.const 15416) "\02\00\00\00J\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00s\00u\00p\00e\00r\00\'\00 \00o\00u\00t\00s\00i\00d\00e\00 \00o\00f\00 \00a\00 \00c\00l\00a\00s\00s\00.")
 (data (i32.const 15500) "|")
 (data (i32.const 15512) "\02\00\00\00`\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00s\00u\00p\00e\00r\00\'\00 \00i\00n\00 \00a\00 \00c\00l\00a\00s\00s\00 \00w\00i\00t\00h\00 \00n\00o\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00.")
 (data (i32.const 15628) "L")
 (data (i32.const 15640) "\02\00\00\002\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00.\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00s\00u\00p\00e\00r\00\'\00.")
 (data (i32.const 15708) "L")
 (data (i32.const 15720) "\02\00\00\00<\00\00\00E\00x\00p\00e\00c\00t\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00m\00e\00t\00h\00o\00d\00 \00n\00a\00m\00e\00.")
 (data (i32.const 15788) "\1c")
 (data (i32.const 15800) "\02\00\00\00\08\00\00\00t\00h\00i\00s")
 (data (i32.const 15820) "\1c")
 (data (i32.const 15832) "\02\00\00\00\n\00\00\00s\00u\00p\00e\00r")
 (data (i32.const 15852) "\1c")
 (data (i32.const 15864) "/\00\00\00\08\00\00\00\18")
 (data (i32.const 15884) "\\")
 (data (i32.const 15896) "\02\00\00\00H\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00t\00h\00i\00s\00\'\00 \00o\00u\00t\00s\00i\00d\00e\00 \00o\00f\00 \00a\00 \00c\00l\00a\00s\00s\00.")
 (data (i32.const 15980) "\1c")
 (data (i32.const 15992) "/\00\00\00\08\00\00\00\19")
 (data (i32.const 16012) "<")
 (data (i32.const 16024) "\02\00\00\00,\00\00\00s\00e\00t\00t\00i\00n\00g\00 \00d\00e\00b\00u\00g\00 \00f\00l\00a\00g\00 \00t\00o\00 ")
 (data (i32.const 16076) "\\")
 (data (i32.const 16088) "\02\00\00\00B\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00 \00s\00o\00u\00r\00c\00e\00 \00c\00o\00d\00e\00 \00=\00=\00=\00=\00=\00=\00=\00=\00=\00=")
 (data (i32.const 16172) "\1c")
 (data (i32.const 16184) "\02\00\00\00\08\00\00\00i\00n\00i\00t")
 (data (i32.const 16204) "\1c")
 (data (i32.const 16216) "\02\00\00\00\n\00\00\00c\00l\00o\00c\00k")
 (data (i32.const 16236) "\1c")
 (data (i32.const 16248) "2\00\00\00\08\00\00\00\1a")
 (data (i32.const 16268) "\1c")
 (data (i32.const 16280) "2\00\00\00\08\00\00\00\1b")
 (data (i32.const 16300) "<")
 (data (i32.const 16312) "\02\00\00\00*\00\00\00=\00=\00 \00c\00o\00m\00p\00i\00l\00e\00d\00 \00t\00o\00k\00e\00n\00s\00 \00=\00=")
 (data (i32.const 16364) "\1c")
 (data (i32.const 16376) "\02\00\00\00\04\00\00\00|\00 ")
 (data (i32.const 16396) "\1c")
 (data (i32.const 16408) "\02\00\00\00\04\00\00\00\t\00 ")
 (data (i32.const 16428) "\1c")
 (data (i32.const 16440) "\02\00\00\00\06\00\00\00 \00\t\00 ")
 (data (i32.const 16460) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00 @\00\00\00\00\00\00@@\00\00\00\00\00\00 -")
 (data (i32.const 16508) "\\")
 (data (i32.const 16520) "\02\00\00\00F\00\00\00=\00=\00 \00s\00e\00t\00t\00i\00n\00g\00 \00u\00p\00 \00T\00O\00P\00 \00L\00E\00V\00E\00L\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=")
 (data (i32.const 16604) "<")
 (data (i32.const 16616) "\02\00\00\00\"\00\00\00=\00=\00 \00s\00e\00t\00t\00i\00n\00g\00 \00u\00p\00 \00f\00n\00 ")
 (data (i32.const 16668) ",")
 (data (i32.const 16680) "\02\00\00\00\18\00\00\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=")
 (data (i32.const 16716) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\f0@\00\00\00\00\00\000A")
 (data (i32.const 16748) "<")
 (data (i32.const 16760) "\02\00\00\00$\00\00\00E\00x\00p\00e\00c\00t\00 \00c\00l\00a\00s\00s\00 \00n\00a\00m\00e\00.")
 (data (i32.const 16812) "|")
 (data (i32.const 16824) "\02\00\00\00`\00\00\00A\00l\00r\00e\00a\00d\00y\00 \00a\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00w\00i\00t\00h\00 \00t\00h\00i\00s\00 \00n\00a\00m\00e\00 \00i\00n\00 \00t\00h\00i\00s\00 \00s\00c\00o\00p\00e\00.")
 (data (i32.const 16940) "\\")
 (data (i32.const 16952) "\02\00\00\00J\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00i\00n\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.")
 (data (i32.const 17036) "<")
 (data (i32.const 17048) "\02\00\00\00*\00\00\00=\00=\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00=\00=")
 (data (i32.const 17100) "\1c")
 (data (i32.const 17112) "\02\00\00\00\0c\00\00\00n\00a\00m\00e\00:\00 ")
 (data (i32.const 17132) ",")
 (data (i32.const 17144) "\02\00\00\00\12\00\00\00,\00 \00d\00e\00p\00t\00h\00:\00 ")
 (data (i32.const 17180) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\10\00\00\00\e0B\00\00\00\00\00\00\00C")
 (data (i32.const 17228) "L")
 (data (i32.const 17240) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00n\00a\00m\00e\00.")
 (data (i32.const 17308) "\\")
 (data (i32.const 17320) "\02\00\00\00D\00\00\00A\00 \00c\00l\00a\00s\00s\00 \00c\00a\00n\00\'\00t\00 \00i\00n\00h\00e\00r\00i\00t\00 \00f\00r\00o\00m\00 \00i\00t\00s\00e\00l\00f\00.")
 (data (i32.const 17404) "<")
 (data (i32.const 17416) "\02\00\00\00\1e\00\00\00b\00e\00g\00i\00n\00n\00i\00n\00g\00 \00s\00c\00o\00p\00e")
 (data (i32.const 17468) "L")
 (data (i32.const 17480) "\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00{\00\'\00 \00b\00e\00f\00o\00r\00e\00 \00c\00l\00a\00s\00s\00 \00b\00o\00d\00y\00.")
 (data (i32.const 17548) "<")
 (data (i32.const 17560) "\02\00\00\00&\00\00\00E\00x\00p\00e\00c\00t\00 \00m\00e\00t\00h\00o\00d\00 \00n\00a\00m\00e\00.")
 (data (i32.const 17612) "\\")
 (data (i32.const 17624) "\02\00\00\00>\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00.")
 (data (i32.const 17708) "\\")
 (data (i32.const 17720) "\02\00\00\00H\00\00\00C\00a\00n\00\'\00t\00 \00h\00a\00v\00e\00 \00m\00o\00r\00e\00 \00t\00h\00a\00n\00 \002\005\005\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00s\00.")
 (data (i32.const 17804) "<")
 (data (i32.const 17816) "\02\00\00\00,\00\00\00E\00x\00p\00e\00c\00t\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00 \00n\00a\00m\00e\00.")
 (data (i32.const 17868) "L")
 (data (i32.const 17880) "\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00s\00.")
 (data (i32.const 17948) "\\")
 (data (i32.const 17960) "\02\00\00\00@\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00{\00\'\00 \00b\00e\00f\00o\00r\00e\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00b\00o\00d\00y\00.")
 (data (i32.const 18044) "L")
 (data (i32.const 18056) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00}\00\'\00 \00a\00f\00t\00e\00r\00 \00b\00l\00o\00c\00k\00.")
 (data (i32.const 18124) "\\")
 (data (i32.const 18136) "\02\00\00\00B\00\00\00=\00=\00 \00e\00n\00d\00 \00e\00n\00c\00l\00o\00s\00i\00n\00g\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00f\00o\00r\00 \00f\00n\00 ")
 (data (i32.const 18220) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\e0F\00\00\00\00\00\00`\"")
 (data (i32.const 18252) "\\")
 (data (i32.const 18264) "\02\00\00\00>\00\00\00=\00=\00 \00e\00n\00d\00 \00o\00f\00 \00T\00O\00P\00 \00L\00E\00V\00E\00L\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=")
 (data (i32.const 18348) "<")
 (data (i32.const 18360) "\02\00\00\00\"\00\00\00a\00d\00d\00i\00n\00g\00 \00l\00o\00c\00a\00l\00 \00b\00y\00t\00e")
 (data (i32.const 18412) "L")
 (data (i32.const 18424) "\02\00\00\00:\00\00\00a\00d\00d\00i\00n\00g\00 \00s\00u\00r\00r\00o\00u\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e\00 \00b\00y\00t\00e")
 (data (i32.const 18492) "<")
 (data (i32.const 18504) "\02\00\00\00&\00\00\00a\00d\00d\00i\00n\00g\00 \00i\00n\00d\00e\00x\00 \00b\00y\00t\00e\00:\00 ")
 (data (i32.const 18556) "L")
 (data (i32.const 18568) "\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00}\00\'\00 \00a\00f\00t\00e\00r\00 \00c\00l\00a\00s\00s\00 \00b\00o\00d\00y\00.")
 (data (i32.const 18636) ",")
 (data (i32.const 18648) "\02\00\00\00\18\00\00\00e\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e")
 (data (i32.const 18684) "\\")
 (data (i32.const 18696) "\02\00\00\00L\00\00\00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00a\00t\00 \00a\00 \00h\00i\00g\00h\00e\00r\00 \00s\00c\00o\00p\00e\00 \00d\00e\00p\00t\00h")
 (data (i32.const 18780) "<")
 (data (i32.const 18792) "\02\00\00\00*\00\00\00E\00x\00p\00e\00c\00t\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00.")
 (data (i32.const 18844) "<")
 (data (i32.const 18856) "\02\00\00\00(\00\00\00E\00x\00p\00e\00c\00t\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00n\00a\00m\00e")
 (data (i32.const 18908) "\\")
 (data (i32.const 18920) "\02\00\00\00L\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00d\00e\00c\00l\00a\00r\00a\00t\00i\00o\00n\00.")
 (data (i32.const 19004) "L")
 (data (i32.const 19016) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00v\00a\00l\00u\00e\00.")
 (data (i32.const 19084) "L")
 (data (i32.const 19096) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00f\00o\00r\00\'\00.")
 (data (i32.const 19164) "L")
 (data (i32.const 19176) "\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.")
 (data (i32.const 19244) "\\")
 (data (i32.const 19256) "\02\00\00\00B\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00f\00t\00e\00r\00 \00l\00o\00o\00p\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00.")
 (data (i32.const 19340) "L")
 (data (i32.const 19352) "\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00f\00o\00r\00 \00c\00l\00a\00u\00s\00e\00s\00.")
 (data (i32.const 19420) "<")
 (data (i32.const 19432) "\02\00\00\00&\00\00\00L\00o\00o\00p\00 \00b\00o\00d\00y\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 19484) "<")
 (data (i32.const 19496) "\02\00\00\00,\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00i\00f\00\'\00.")
 (data (i32.const 19548) "L")
 (data (i32.const 19560) "\02\00\00\006\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00.")
 (data (i32.const 19628) "\\")
 (data (i32.const 19640) "\02\00\00\00B\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00t\00u\00r\00n\00 \00f\00r\00o\00m\00 \00t\00o\00p\00-\00l\00e\00v\00e\00l\00 \00c\00o\00d\00e\00.")
 (data (i32.const 19724) "l")
 (data (i32.const 19736) "\02\00\00\00R\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00t\00u\00r\00n\00 \00a\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00a\00n\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00r\00.")
 (data (i32.const 19836) "L")
 (data (i32.const 19848) "\02\00\00\00<\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00r\00e\00t\00u\00r\00n\00 \00v\00a\00l\00u\00e\00.")
 (data (i32.const 19916) "L")
 (data (i32.const 19928) "\02\00\00\002\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00w\00h\00i\00l\00e\00\'\00.")
 (data (i32.const 19996) ",")
 (data (i32.const 20008) "\02\00\00\00\12\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 ")
 (data (i32.const 20044) "<")
 (data (i32.const 20056) "\02\00\00\00&\00\00\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00 \00b\00u\00t\00 \00g\00o\00t\00 ")
 (data (i32.const 20108) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\000N\00\00\00\00\00\00`N\00\00\00\00\00\00`1")
 (data (i32.const 20156) "\1c")
 (data (i32.const 20168) "\02\00\00\00\n\00\00\00]\00 \00i\00n\00 ")
 (data (i32.const 20188) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\a03\00\00\00\00\00\00\d0N")
 (data (i32.const 20220) ",")
 (data (i32.const 20232) "\02\00\00\00\0e\00\00\00s\00c\00r\00i\00p\00t\00\n")
 (data (i32.const 20268) ",")
 (data (i32.const 20280) "\02\00\00\00\1a\00\00\00R\00U\00N\00T\00I\00M\00E\00 \00E\00R\00R\00O\00R")
 (data (i32.const 20316) "<")
 (data (i32.const 20328) "\02\00\00\00\1e\00\00\00S\00t\00a\00c\00k\00 \00o\00v\00e\00r\00f\00l\00o\00w\00.")
 (data (i32.const 20380) "\1c")
 (data (i32.const 20392) "4\00\00\00\08\00\00\00\1c")
 (data (i32.const 20412) "\1c")
 (data (i32.const 20424) "5\00\00\00\08\00\00\00\1d")
 (data (i32.const 20444) "\1c")
 (data (i32.const 20456) "6\00\00\00\08\00\00\00\1e")
 (data (i32.const 20476) "\1c")
 (data (i32.const 20488) "7\00\00\00\08\00\00\00\1f")
 (data (i32.const 20508) "L")
 (data (i32.const 20520) "\02\00\00\002\00\00\00O\00p\00e\00r\00a\00n\00d\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00m\00b\00e\00r\00s\00.")
 (data (i32.const 20588) "\1c")
 (data (i32.const 20600) "8\00\00\00\08\00\00\00 ")
 (data (i32.const 20620) "\1c")
 (data (i32.const 20632) "9\00\00\00\08\00\00\00!")
 (data (i32.const 20652) "L")
 (data (i32.const 20664) "\02\00\00\00<\00\00\00=\00=\00 \00e\00x\00e\00c\00u\00t\00i\00n\00g\00 \00b\00y\00t\00e\00c\00o\00d\00e\00 \00i\00n\00 \00V\00M\00 \00=\00=")
 (data (i32.const 20732) ",")
 (data (i32.const 20744) "\02\00\00\00\1a\00\00\00\t\00\t\00\t\00 \00 \00s\00t\00a\00c\00k\00-\00>\00\t")
 (data (i32.const 20780) "\1c")
 (data (i32.const 20792) "\02\00\00\00\02\00\00\00[")
 (data (i32.const 20812) "\1c")
 (data (i32.const 20824) "\02\00\00\00\02\00\00\00]")
 (data (i32.const 20844) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00@Q\00\00\00\00\00\00`Q")
 (data (i32.const 20876) "<")
 (data (i32.const 20888) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 20940) ",")
 (data (i32.const 20952) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data (i32.const 20988) "L")
 (data (i32.const 21000) "\02\00\00\00.\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00g\00e\00t\00 ")
 (data (i32.const 21068) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\10R\00\00\00\00\00\00`1")
 (data (i32.const 21100) "L")
 (data (i32.const 21112) "\02\00\00\00.\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00s\00e\00t\00 ")
 (data (i32.const 21180) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\80R\00\00\00\00\00\00`1")
 (data (i32.const 21212) "\\")
 (data (i32.const 21224) "\02\00\00\00>\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00p\00r\00o\00p\00e\00r\00t\00i\00e\00s\00.")
 (data (i32.const 21308) "<")
 (data (i32.const 21320) "\02\00\00\00(\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00p\00r\00o\00p\00e\00r\00t\00y\00 \00\'")
 (data (i32.const 21372) "\1c")
 (data (i32.const 21384) "\02\00\00\00\04\00\00\00\'\00.")
 (data (i32.const 21404) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00PS\00\00\00\00\00\00\90S")
 (data (i32.const 21436) "L")
 (data (i32.const 21448) "\02\00\00\006\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00f\00i\00e\00l\00d\00s\00.")
 (data (i32.const 21516) "\1c")
 (data (i32.const 21528) ":\00\00\00\08\00\00\00\"")
 (data (i32.const 21548) "\1c")
 (data (i32.const 21560) ":\00\00\00\08\00\00\00#")
 (data (i32.const 21580) "\\")
 (data (i32.const 21592) "\02\00\00\00>\00\00\00r\00e\00t\00u\00r\00n\00 \00i\00n\00t\00e\00r\00n\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00t\00a\00k\00e")
 (data (i32.const 21676) "l")
 (data (i32.const 21688) "\02\00\00\00X\00\00\00O\00p\00e\00r\00a\00n\00d\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00t\00w\00o\00 \00n\00u\00m\00b\00e\00r\00s\00 \00o\00r\00 \00t\00w\00o\00 \00s\00t\00r\00i\00n\00g\00s\00.")
 (data (i32.const 21788) "\1c")
 (data (i32.const 21800) ";\00\00\00\08\00\00\00$")
 (data (i32.const 21820) "\1c")
 (data (i32.const 21832) ";\00\00\00\08\00\00\00%")
 (data (i32.const 21852) "\1c")
 (data (i32.const 21864) ";\00\00\00\08\00\00\00&")
 (data (i32.const 21884) "L")
 (data (i32.const 21896) "\02\00\00\002\00\00\00O\00p\00e\00r\00a\00n\00d\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00 \00n\00u\00m\00b\00e\00r\00.")
 (data (i32.const 21964) "L")
 (data (i32.const 21976) "\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \000\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00 \00b\00u\00t\00 \00g\00o\00t\00 ")
 (data (i32.const 22044) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\e0U\00\00\00\00\00\00`1")
 (data (i32.const 22076) "\\")
 (data (i32.const 22088) "\02\00\00\00H\00\00\00C\00a\00n\00 \00o\00n\00l\00y\00 \00c\00a\00l\00l\00 \00f\00u\00n\00c\00t\00i\00o\00n\00s\00 \00a\00n\00d\00 \00c\00l\00a\00s\00s\00e\00s\00.")
 (data (i32.const 22172) "L")
 (data (i32.const 22184) "\02\00\00\008\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00m\00e\00t\00h\00o\00d\00s\00.")
 (data (i32.const 22252) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00PS\00\00\00\00\00\00\90S")
 (data (i32.const 22284) ",")
 (data (i32.const 22296) "\02\00\00\00\1c\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00v\00m\00.\00t\00s")
 (data (i32.const 22332) "L")
 (data (i32.const 22344) "\02\00\00\006\00\00\00S\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00 \00c\00l\00a\00s\00s\00.")
 (data (i32.const 22412) "<")
 (data (i32.const 22424) "\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 22476) "<")
 (data (i32.const 22488) "\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 22544) "=\00\00\00 \00\00\00 \00\00\00 ")
 (data (i32.const 22588) "d\00\00\00\81")
 (data (i32.const 22604) "\04A")
 (data (i32.const 22616) "\02A\00\00\04A\00\00\10A\82")
 (data (i32.const 22652) "\04A")
 (data (i32.const 22688) "\02A\00\00 ")
 (data (i32.const 22712) "\02A\00\00 \00\00\00\02A")
 (data (i32.const 22732) "\02A\00\00\00\00\00\00\02A\00\00\02A")
 (data (i32.const 22788) "\02\t")
 (table $0 39 39 funcref)
 (elem $0 (i32.const 1) $start:assembly/memory~anonymous|0 $start:assembly/memory~anonymous|1 $start:assembly/memory~anonymous|2 $start:assembly/memory~anonymous|3 $start:assembly/memory~anonymous|4 $start:assembly/value~anonymous|0 $start:assembly/debug~anonymous|0 $start:assembly/debug~anonymous|1 $start:assembly/debug~anonymous|2 $start:assembly/debug~anonymous|3 $start:assembly/debug~anonymous|4 $start:assembly/debug~anonymous|5 $assembly/compiler/grouping $assembly/compiler/call $assembly/compiler/dot $assembly/compiler/unary $assembly/compiler/binary $assembly/compiler/variable $assembly/compiler/mString $assembly/compiler/number $assembly/compiler/and_ $assembly/compiler/literal $assembly/compiler/or_ $assembly/compiler/super_ $assembly/compiler/this_ $assembly/vm/clockNative $assembly/object/ObjNative#constructor~anonymous|0 $assembly/vm/run~anonymous|0 $assembly/vm/run~anonymous|1 $assembly/vm/run~anonymous|2 $assembly/vm/run~anonymous|3 $assembly/vm/run~anonymous|4 $assembly/vm/run~anonymous|5 $assembly/vm/run~anonymous|6 $assembly/vm/run~anonymous|7 $assembly/vm/run~anonymous|8 $assembly/vm/run~anonymous|9 $assembly/vm/run~anonymous|10)
 (export "setDebugFlag" (func $assembly/index/setDebugFlag))
 (export "getDebugFlag" (func $assembly/index/getDebugFlag))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "printout" (func $export:assembly/index/printout))
 (export "debugLog" (func $export:assembly/index/debugLog))
 (export "main" (func $export:assembly/index/main))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  global.get $assembly/index/outputstring
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 1280
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1520
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1664
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 20896
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 22432
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 22496
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2768
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3824
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/vm/vm
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/parser
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/current
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/currentClass
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 11440
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11360
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/scanner/scanner
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/scanner/codestring
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1152
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   local.get $0
   i32.load $0 offset=8
   i32.eqz
   local.get $0
   i32.const 55560
   i32.lt_u
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 1152
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 22544
   i32.load $0
   i32.gt_u
   if
    i32.const 1280
    i32.const 1344
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 2
   i32.shl
   i32.const 22548
   i32.add
   i32.load $0
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load $0 offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  local.set $5
  local.get $1
  i32.load $0 offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store $0 offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store $0 offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store $0 offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load $0 offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load $0
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store $0
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load $0
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load $0
   local.tee $1
   i32.load $0
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1424
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store $0
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 1424
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store $0
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store $0 offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0 offset=96
  local.get $0
  local.get $0
  i32.load $0
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store $0
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load $0 offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1424
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load $0
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1424
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  local.tee $2
  i32.const 2
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size $0
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 55568
  i32.const 0
  i32.store $0
  i32.const 57136
  i32.const 0
  i32.store $0
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 55568
    i32.add
    i32.const 0
    i32.store $0 offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 55568
      i32.add
      i32.const 0
      i32.store $0 offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 55568
  i32.const 57140
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 55568
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load $0 offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store $0 offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load $0 offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 55560
      i32.lt_u
      if
       local.get $0
       i32.load $0
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load $0 offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load $0 offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load $0 offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store $0 offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load $0 offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 1152
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 55560
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load $0
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     i32.const 55560
     i32.ge_u
     if
      global.get $~lib/rt/tlsf/ROOT
      i32.eqz
      if
       call $~lib/rt/tlsf/initialize
      end
      global.get $~lib/rt/tlsf/ROOT
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.set $2
      local.get $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if (result i32)
       i32.const 1
      else
       local.get $2
       i32.load $0
       i32.const 1
       i32.and
      end
      if
       i32.const 0
       i32.const 1424
       i32.const 559
       i32.const 3
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      local.get $2
      i32.load $0
      i32.const 1
      i32.or
      i32.store $0
      local.get $1
      local.get $2
      call $~lib/rt/tlsf/insertBlock
     end
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.store $0 offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
  else
   local.get $0
   i32.load $0
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1424
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1088
   i32.const 1152
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    local.get $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $4
  local.get $0
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1088
   i32.const 1424
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 12
  local.get $2
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $2
  i32.const 12
  i32.le_u
  select
  local.tee $5
  call $~lib/rt/tlsf/searchBlock
  local.tee $2
  i32.eqz
  if
   memory.size $0
   local.tee $2
   i32.const 4
   local.get $4
   i32.load $0 offset=1568
   local.get $2
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   local.get $5
   i32.const 1
   i32.const 27
   local.get $5
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $5
   local.get $5
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $3
   local.get $2
   local.get $3
   i32.gt_s
   select
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow $0
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $4
   local.get $2
   i32.const 16
   i32.shl
   memory.size $0
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/searchBlock
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1424
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $5
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  call $~lib/rt/tlsf/removeBlock
  local.get $2
  i32.load $0
  local.set $3
  local.get $5
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1424
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $5
  i32.sub
  local.tee $6
  i32.const 16
  i32.ge_u
  if
   local.get $2
   local.get $5
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store $0
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.add
   local.tee $3
   local.get $6
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store $0
   local.get $4
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $2
   local.get $3
   i32.const -2
   i32.and
   i32.store $0
   local.get $2
   i32.const 4
   i32.add
   local.get $2
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   local.get $3
   i32.load $0
   i32.const -3
   i32.and
   i32.store $0
  end
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load $0 offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill $0
  local.get $1
 )
 (func $start:assembly/memory~anonymous|0 (param $0 i32) (result i32)
  i32.const 8
  local.get $0
  i32.const 1
  i32.shl
  local.get $0
  i32.const 8
  i32.lt_s
  select
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 2348
    i32.add
    i64.load32_u $0
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 2348
    i32.add
    i64.load32_u $0
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 2348
   i32.add
   i32.load $0
   i32.store $0
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 2348
   i32.add
   i32.load $0
   i32.store $0
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16 $0
  end
 )
 (func $~lib/util/number/genDigits (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  local.get $1
  local.get $0
  i64.sub
  local.set $10
  i64.const 1
  i32.const 0
  local.get $2
  i32.sub
  local.tee $11
  i64.extend_i32_s
  local.tee $0
  i64.shl
  local.tee $7
  i64.const 1
  i64.sub
  local.tee $12
  local.get $1
  i64.and
  local.set $9
  local.get $1
  local.get $0
  i64.shr_u
  i32.wrap_i64
  local.tee $5
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $5
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $5
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $5
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $5
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $5
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $8
  loop $while-continue|0
   local.get $8
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $8
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $5
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $5
               i32.const 1000000000
               i32.rem_u
               local.set $5
               br $break|1
              end
              local.get $5
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $5
              i32.const 100000000
              i32.rem_u
              local.set $5
              br $break|1
             end
             local.get $5
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $5
             i32.const 10000000
             i32.rem_u
             local.set $5
             br $break|1
            end
            local.get $5
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $5
            i32.const 1000000
            i32.rem_u
            local.set $5
            br $break|1
           end
           local.get $5
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $5
           i32.const 100000
           i32.rem_u
           local.set $5
           br $break|1
          end
          local.get $5
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $5
          i32.const 10000
          i32.rem_u
          local.set $5
          br $break|1
         end
         local.get $5
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $5
         i32.const 1000
         i32.rem_u
         local.set $5
         br $break|1
        end
        local.get $5
        i32.const 100
        i32.div_u
        local.set $6
        local.get $5
        i32.const 100
        i32.rem_u
        local.set $5
        br $break|1
       end
       local.get $5
       i32.const 10
       i32.div_u
       local.set $6
       local.get $5
       i32.const 10
       i32.rem_u
       local.set $5
       br $break|1
      end
      local.get $5
      local.set $6
      i32.const 0
      local.set $5
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $4
    local.get $6
    i32.or
    if
     local.get $4
     local.tee $2
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 1
     i32.shl
     i32.const 4192
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16 $0
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $8
    local.get $3
    local.get $5
    i64.extend_i32_u
    local.get $11
    i64.extend_i32_s
    i64.shl
    local.get $9
    i64.add
    local.tee $0
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $8
     i32.add
     global.set $~lib/util/number/_K
     local.get $8
     i32.const 2
     i32.shl
     i32.const 5120
     i32.add
     i64.load32_u $0
     local.get $11
     i64.extend_i32_s
     i64.shl
     local.set $7
     local.get $4
     i32.const 1
     i32.shl
     i32.const 4190
     i32.add
     local.tee $2
     i32.load16_u $0
     local.set $6
     loop $while-continue|3
      local.get $0
      local.get $10
      i64.lt_u
      local.get $3
      local.get $0
      i64.sub
      local.get $7
      i64.ge_u
      i32.and
      if (result i32)
       local.get $10
       local.get $0
       local.get $7
       i64.add
       local.tee $1
       i64.gt_u
       local.get $10
       local.get $0
       i64.sub
       local.get $1
       local.get $10
       i64.sub
       i64.gt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       local.get $0
       local.get $7
       i64.add
       local.set $0
       br $while-continue|3
      end
     end
     local.get $2
     local.get $6
     i32.store16 $0
     local.get $4
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $3
   i64.const 10
   i64.mul
   local.set $3
   local.get $9
   i64.const 10
   i64.mul
   local.tee $1
   local.get $11
   i64.extend_i32_s
   i64.shr_u
   local.tee $0
   local.get $4
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $4
    local.tee $2
    i32.const 1
    i32.add
    local.set $4
    local.get $2
    i32.const 1
    i32.shl
    i32.const 4192
    i32.add
    local.get $0
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16 $0
   end
   local.get $8
   i32.const 1
   i32.sub
   local.set $8
   local.get $1
   local.get $12
   i64.and
   local.tee $9
   local.get $3
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $8
  i32.add
  global.set $~lib/util/number/_K
  local.get $10
  i32.const 0
  local.get $8
  i32.sub
  i32.const 2
  i32.shl
  i32.const 5120
  i32.add
  i64.load32_u $0
  i64.mul
  local.set $1
  local.get $4
  i32.const 1
  i32.shl
  i32.const 4190
  i32.add
  local.tee $2
  i32.load16_u $0
  local.set $6
  loop $while-continue|6
   local.get $1
   local.get $9
   i64.gt_u
   local.get $3
   local.get $9
   i64.sub
   local.get $7
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $7
    local.get $9
    i64.add
    local.tee $0
    i64.gt_u
    local.get $1
    local.get $9
    i64.sub
    local.get $0
    local.get $1
    i64.sub
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    local.get $7
    local.get $9
    i64.add
    local.set $9
    br $while-continue|6
   end
  end
  local.get $2
  local.get $6
  i32.store16 $0
  local.get $4
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $0
    i32.const 46
    i32.store16 $0
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $0
     i32.const 3014704
     i32.store $0
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16 $0
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $0
      i32.const 46
      i32.store16 $0 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16 $0
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 f64) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  f64.const 0
  f64.lt
  local.tee $2
  if (result f64)
   i32.const 4192
   i32.const 45
   i32.store16 $0
   local.get $0
   f64.neg
  else
   local.get $0
  end
  i64.reinterpret_f64
  local.tee $1
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $7
  i32.const 1
  local.get $7
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $1
  i64.const 4503599627370495
  i64.and
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $1
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $3
  i64.clz
  i32.wrap_i64
  local.tee $7
  i32.sub
  local.set $9
  local.get $3
  local.get $7
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $1
  local.get $1
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $7
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $7
  i32.sub
  local.get $9
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $9
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  local.tee $7
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $0
  i32.trunc_sat_f64_s
  local.tee $8
  local.get $8
  f64.convert_i32_s
  local.get $0
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $8
  i32.const 3
  i32.shl
  local.tee $9
  i32.sub
  global.set $~lib/util/number/_K
  local.get $9
  i32.const 4248
  i32.add
  i64.load $0
  global.set $~lib/util/number/_frc_pow
  local.get $8
  i32.const 1
  i32.shl
  i32.const 4944
  i32.add
  i32.load16_s $0
  global.set $~lib/util/number/_exp_pow
  local.get $1
  local.get $1
  i64.clz
  i64.shl
  local.tee $1
  i64.const 4294967295
  i64.and
  local.set $4
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  local.get $1
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $4
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $5
  global.get $~lib/util/number/_frc_plus
  local.tee $3
  i64.const 4294967295
  i64.and
  local.set $12
  local.get $3
  i64.const 32
  i64.shr_u
  local.tee $3
  local.get $11
  i64.mul
  local.get $11
  local.get $12
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $6
  global.get $~lib/util/number/_frc_minus
  local.tee $13
  i64.const 4294967295
  i64.and
  local.set $14
  local.get $13
  i64.const 32
  i64.shr_u
  local.tee $13
  local.get $11
  i64.mul
  local.get $11
  local.get $14
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $2
  i32.const 1
  i32.shl
  i32.const 4192
  i32.add
  local.get $1
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $5
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $4
  i64.mul
  local.get $5
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $3
  i64.mul
  local.get $6
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $12
  i64.mul
  local.get $6
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.tee $3
  local.get $7
  global.get $~lib/util/number/_exp_pow
  i32.add
  i32.const -64
  i32.sub
  local.get $3
  local.get $1
  local.get $13
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $14
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $2
  call $~lib/util/number/genDigits
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $2
  i32.add
 )
 (func $~lib/number/I32#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $__inlined_func$~lib/util/number/itoa32
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 2336
    local.set $0
    br $__inlined_func$~lib/util/number/itoa32
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $1
   select
   local.tee $3
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $3
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $3
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $3
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $3
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $3
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $2
   i32.const 1
   i32.shl
   local.get $1
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   local.get $0
   local.get $1
   i32.add
   local.get $3
   local.get $2
   call $~lib/util/number/utoa32_dec_lut
   local.get $1
   if
    local.get $0
    i32.const 45
    i32.store16 $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $0
 )
 (func $assembly/compiler/call (param $0 i32)
  call $assembly/compiler/argumentList
  i32.const 255
  i32.and
  local.set $0
  i32.const 28
  call $assembly/compiler/emitByte
  local.get $0
  call $assembly/compiler/emitByte
 )
 (func $~lib/math/ipow32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5
  local.set $1
  i32.const 1
  local.set $2
  local.get $0
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.eqz
   return
  else
   local.get $0
   i32.const 1
   i32.eq
   if
    i32.const 5
    return
   else
    local.get $0
    i32.const 2
    i32.eq
    if
     i32.const 25
     return
    else
     local.get $0
     i32.const 32
     i32.lt_s
     if
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            i32.const 31
            local.get $0
            i32.clz
            i32.sub
            br_table $case4|0 $case3|0 $case2|0 $case1|0 $case0|0 $break|0
           end
           i32.const 5
           i32.const 1
           local.get $0
           i32.const 1
           i32.and
           select
           local.set $2
           local.get $0
           i32.const 1
           i32.shr_u
           local.set $0
           i32.const 25
           local.set $1
          end
          local.get $1
          local.get $2
          i32.mul
          local.get $2
          local.get $0
          i32.const 1
          i32.and
          select
          local.set $2
          local.get $0
          i32.const 1
          i32.shr_u
          local.set $0
          local.get $1
          local.get $1
          i32.mul
          local.set $1
         end
         local.get $1
         local.get $2
         i32.mul
         local.get $2
         local.get $0
         i32.const 1
         i32.and
         select
         local.set $2
         local.get $0
         i32.const 1
         i32.shr_u
         local.set $0
         local.get $1
         local.get $1
         i32.mul
         local.set $1
        end
        local.get $1
        local.get $2
        i32.mul
        local.get $2
        local.get $0
        i32.const 1
        i32.and
        select
        local.set $2
        local.get $0
        i32.const 1
        i32.shr_u
        local.set $0
        local.get $1
        local.get $1
        i32.mul
        local.set $1
       end
       local.get $1
       local.get $2
       i32.mul
       local.get $2
       local.get $0
       i32.const 1
       i32.and
       select
       local.set $2
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $0
   if
    local.get $1
    local.get $2
    i32.mul
    local.get $2
    local.get $0
    i32.const 1
    i32.and
    select
    local.set $2
    local.get $0
    i32.const 1
    i32.shr_u
    local.set $0
    local.get $1
    local.get $1
    i32.mul
    local.set $1
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  local.get $1
  i32.const 1023
  i32.gt_s
  if (result f64)
   local.get $0
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $0
   local.get $1
   i32.const 1023
   i32.sub
   local.tee $1
   i32.const 1023
   i32.gt_s
   if (result f64)
    i32.const 1023
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $1
    local.get $1
    i32.const 1023
    i32.ge_s
    select
    local.set $1
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
   else
    local.get $0
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if (result f64)
    local.get $0
    f64.const 2.004168360008973e-292
    f64.mul
    local.set $0
    local.get $1
    i32.const 969
    i32.add
    local.tee $1
    i32.const -1022
    i32.lt_s
    if (result f64)
     i32.const -1022
     local.get $1
     i32.const 969
     i32.add
     local.tee $1
     local.get $1
     i32.const -1022
     i32.le_s
     select
     local.set $1
     local.get $0
     f64.const 2.004168360008973e-292
     f64.mul
    else
     local.get $0
    end
   else
    local.get $0
   end
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $assembly/compiler/and_ (param $0 i32)
  i32.const 26
  call $assembly/compiler/emitJump
  local.set $0
  i32.const 4
  call $assembly/compiler/emitByte
  i32.const 3
  call $assembly/compiler/parsePrecedence
  local.get $0
  call $assembly/compiler/patchJump
 )
 (func $assembly/compiler/or_ (param $0 i32)
  (local $1 i32)
  i32.const 26
  call $assembly/compiler/emitJump
  local.set $0
  i32.const 25
  call $assembly/compiler/emitJump
  local.set $1
  local.get $0
  call $assembly/compiler/patchJump
  i32.const 4
  call $assembly/compiler/emitByte
  i32.const 2
  call $assembly/compiler/parsePrecedence
  local.get $1
  call $assembly/compiler/patchJump
 )
 (func $assembly/index/getDebugFlag (result i32)
  global.get $assembly/index/debugFlag
 )
 (func $assembly/vm/clockNative (param $0 i32) (result i32)
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  call $assembly/value/NUMBER_VAL
 )
 (func $assembly/object/ObjNative#constructor~anonymous|0 (param $0 i32) (result i32)
  call $assembly/value/Value#constructor
 )
 (func $assembly/compiler/statement
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner0
   i32.const 31
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store $0
    i32.const 1
    call $assembly/compiler/parsePrecedence
    global.get $~lib/memory/__stack_pointer
    i32.const 19024
    i32.store $0
    i32.const 8
    i32.const 19024
    call $assembly/compiler/consume
    i32.const 24
    call $assembly/compiler/emitByte
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 26
    call $assembly/compiler/check
    if (result i32)
     call $assembly/compiler/advance
     i32.const 1
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store $0
     call $assembly/compiler/beginScope
     global.get $~lib/memory/__stack_pointer
     i32.const 19104
     i32.store $0
     i32.const 0
     i32.const 19104
     call $assembly/compiler/consume
     i32.const 8
     call $assembly/compiler/check
     if (result i32)
      call $assembly/compiler/advance
      i32.const 1
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 36
      call $assembly/compiler/check
      if (result i32)
       call $assembly/compiler/advance
       i32.const 1
      else
       i32.const 0
      end
      if
       call $assembly/compiler/varDeclaration
      else
       call $assembly/compiler/expressionStatement
      end
     end
     call $assembly/compiler/currentChunk
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0
     local.set $0
     i32.const -1
     local.set $1
     i32.const 8
     call $assembly/compiler/check
     if (result i32)
      call $assembly/compiler/advance
      i32.const 1
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 1
      call $assembly/compiler/parsePrecedence
      global.get $~lib/memory/__stack_pointer
      i32.const 19264
      i32.store $0
      i32.const 8
      i32.const 19264
      call $assembly/compiler/consume
      i32.const 26
      call $assembly/compiler/emitJump
      local.set $1
      i32.const 4
      call $assembly/compiler/emitByte
     end
     i32.const 1
     call $assembly/compiler/check
     if (result i32)
      call $assembly/compiler/advance
      i32.const 1
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 25
      call $assembly/compiler/emitJump
      local.set $2
      call $assembly/compiler/currentChunk
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      i32.load $0
      local.set $3
      i32.const 1
      call $assembly/compiler/parsePrecedence
      i32.const 4
      call $assembly/compiler/emitByte
      global.get $~lib/memory/__stack_pointer
      i32.const 19360
      i32.store $0
      i32.const 1
      i32.const 19360
      call $assembly/compiler/consume
      local.get $0
      call $assembly/compiler/emitLoop
      local.get $2
      call $assembly/compiler/patchJump
      local.get $3
      local.set $0
     end
     call $assembly/compiler/statement
     local.get $0
     call $assembly/compiler/emitLoop
     local.get $1
     i32.const -1
     i32.ne
     if
      local.get $1
      call $assembly/compiler/patchJump
      i32.const 4
      call $assembly/compiler/emitByte
     end
     call $assembly/compiler/endScope
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     i32.const 28
     call $assembly/compiler/check
     if (result i32)
      call $assembly/compiler/advance
      i32.const 1
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22792
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      i32.const 0
      i32.store $0
      local.get $0
      i32.const 19504
      i32.store $0
      i32.const 0
      i32.const 19504
      call $assembly/compiler/consume
      i32.const 1
      call $assembly/compiler/parsePrecedence
      global.get $~lib/memory/__stack_pointer
      i32.const 19568
      i32.store $0
      i32.const 1
      i32.const 19568
      call $assembly/compiler/consume
      i32.const 26
      call $assembly/compiler/emitJump
      local.set $0
      i32.const 4
      call $assembly/compiler/emitByte
      call $assembly/compiler/statement
      i32.const 25
      call $assembly/compiler/emitJump
      local.set $1
      local.get $0
      call $assembly/compiler/patchJump
      i32.const 4
      call $assembly/compiler/emitByte
      i32.const 24
      call $assembly/compiler/check
      if (result i32)
       call $assembly/compiler/advance
       i32.const 1
      else
       i32.const 0
      end
      if
       call $assembly/compiler/statement
      end
      local.get $1
      call $assembly/compiler/patchJump
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      i32.const 32
      call $assembly/compiler/check
      if (result i32)
       call $assembly/compiler/advance
       i32.const 1
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22792
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i64.const 0
       i64.store $0
       local.get $0
       global.get $assembly/compiler/current
       local.tee $0
       i32.store $0
       local.get $0
       i32.load $0 offset=8
       i32.const 3
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 19648
        i32.store $0
        i32.const 19648
        call $assembly/compiler/error
       end
       i32.const 8
       call $assembly/compiler/check
       if (result i32)
        call $assembly/compiler/advance
        i32.const 1
       else
        i32.const 0
       end
       if
        call $assembly/compiler/emitReturn
       else
        global.get $~lib/memory/__stack_pointer
        global.get $assembly/compiler/current
        local.tee $0
        i32.store $0
        local.get $0
        i32.load $0 offset=8
        i32.const 1
        i32.eq
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 19744
         i32.store $0
         i32.const 19744
         call $assembly/compiler/error
        end
        i32.const 1
        call $assembly/compiler/parsePrecedence
        global.get $~lib/memory/__stack_pointer
        i32.const 19856
        i32.store $0 offset=4
        i32.const 8
        i32.const 19856
        call $assembly/compiler/consume
        i32.const 33
        call $assembly/compiler/emitByte
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       i32.const 37
       call $assembly/compiler/check
       if (result i32)
        call $assembly/compiler/advance
        i32.const 1
       else
        i32.const 0
       end
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 22792
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        i64.const 0
        i64.store $0
        call $assembly/compiler/currentChunk
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.load $0
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 19936
        i32.store $0 offset=4
        i32.const 0
        i32.const 19936
        call $assembly/compiler/consume
        i32.const 1
        call $assembly/compiler/parsePrecedence
        global.get $~lib/memory/__stack_pointer
        i32.const 19568
        i32.store $0 offset=4
        i32.const 1
        i32.const 19568
        call $assembly/compiler/consume
        i32.const 26
        call $assembly/compiler/emitJump
        local.set $1
        i32.const 4
        call $assembly/compiler/emitByte
        call $assembly/compiler/statement
        local.get $0
        call $assembly/compiler/emitLoop
        local.get $1
        call $assembly/compiler/patchJump
        i32.const 4
        call $assembly/compiler/emitByte
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        i32.const 2
        call $assembly/compiler/check
        if (result i32)
         call $assembly/compiler/advance
         i32.const 1
        else
         i32.const 0
        end
        if
         call $assembly/compiler/beginScope
         call $assembly/compiler/block
         call $assembly/compiler/endScope
        else
         call $assembly/compiler/expressionStatement
        end
       end
      end
     end
    end
   end
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/vm/run~anonymous|6 (param $0 f64) (param $1 f64) (result i32)
  local.get $0
  local.get $1
  f64.gt
 )
 (func $assembly/vm/run~anonymous|7 (param $0 f64) (param $1 f64) (result i32)
  local.get $0
  local.get $1
  f64.lt
 )
 (func $assembly/vm/run~anonymous|8 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $1
  f64.sub
 )
 (func $assembly/vm/run~anonymous|9 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $1
  f64.mul
 )
 (func $assembly/vm/run~anonymous|10 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $1
  f64.div
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 22432
    i32.const 1152
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 22496
   i32.const 1152
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $assembly/compiler/Parser~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner13
   block $folding-inner12
    block $folding-inner11
     block $folding-inner10
      block $folding-inner9
       block $folding-inner8
        block $folding-inner7
         block $folding-inner6
          block $folding-inner5
           block $folding-inner4
            block $folding-inner3
             block $folding-inner2
              block $folding-inner1
               block $folding-inner0
                block $invalid
                 block $~lib/array/Array<i32>
                  block $assembly/object/ObjNative
                   block $assembly/compiler/ParseRule
                    block $assembly/compiler/Upvalue
                     block $assembly/compiler/Compiler
                      block $assembly/compiler/Parser
                       block $assembly/scanner/Scanner
                        block $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>
                         block $assembly/object/ObjUpvalue
                          block $assembly/object/ObjString
                           block $~lib/staticarray/StaticArray<u8>
                            block $assembly/chunk/Chunk
                             block $assembly/object/ObjFunction
                              block $assembly/vm/VM
                               block $~lib/string/String
                                block $~lib/arraybuffer/ArrayBuffer
                                 block $~lib/object/Object
                                  local.get $0
                                  i32.const 8
                                  i32.sub
                                  i32.load $0
                                  br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner0 $assembly/vm/VM $folding-inner0 $folding-inner1 $folding-inner2 $assembly/object/ObjFunction $assembly/chunk/Chunk $~lib/staticarray/StaticArray<u8> $folding-inner0 $folding-inner8 $folding-inner9 $folding-inner3 $assembly/object/ObjString $assembly/object/ObjUpvalue $folding-inner5 $folding-inner3 $~lib/map/Map<assembly/object/ObjString,assembly/value/Value> $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner1 $folding-inner3 $folding-inner1 $folding-inner1 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner5 $assembly/scanner/Scanner $assembly/compiler/Parser $folding-inner2 $assembly/compiler/Compiler $folding-inner0 $folding-inner5 $assembly/compiler/Upvalue $folding-inner5 $folding-inner0 $assembly/compiler/ParseRule $folding-inner5 $folding-inner6 $folding-inner5 $folding-inner5 $folding-inner6 $assembly/object/ObjNative $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $folding-inner6 $~lib/array/Array<i32> $invalid
                                 end
                                 return
                                end
                                return
                               end
                               return
                              end
                              local.get $0
                              i32.load $0
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=8
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=16
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=20
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=24
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=28
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=32
                              local.tee $0
                              if
                               local.get $0
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              return
                             end
                             local.get $0
                             i32.load $0 offset=4
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             br $folding-inner7
                            end
                            local.get $0
                            i32.load $0 offset=8
                            local.tee $1
                            if
                             local.get $1
                             call $byn-split-outlined-A$~lib/rt/itcms/__visit
                            end
                            br $folding-inner7
                           end
                           return
                          end
                          local.get $0
                          i32.load $0 offset=4
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          br $folding-inner11
                         end
                         local.get $0
                         i32.load $0 offset=4
                         local.tee $1
                         if
                          local.get $1
                          call $byn-split-outlined-A$~lib/rt/itcms/__visit
                         end
                         local.get $0
                         i32.load $0 offset=8
                         local.tee $1
                         if
                          local.get $1
                          call $byn-split-outlined-A$~lib/rt/itcms/__visit
                         end
                         local.get $0
                         i32.load $0 offset=16
                         local.tee $1
                         if
                          local.get $1
                          call $byn-split-outlined-A$~lib/rt/itcms/__visit
                         end
                         br $folding-inner4
                        end
                        global.get $~lib/memory/__stack_pointer
                        i32.const 4
                        i32.sub
                        global.set $~lib/memory/__stack_pointer
                        global.get $~lib/memory/__stack_pointer
                        i32.const 22792
                        i32.lt_s
                        br_if $folding-inner10
                        global.get $~lib/memory/__stack_pointer
                        local.tee $1
                        i32.const 0
                        i32.store $0
                        local.get $1
                        local.get $0
                        local.tee $1
                        i32.store $0
                        local.get $0
                        i32.load $0
                        local.tee $0
                        if
                         local.get $0
                         call $byn-split-outlined-A$~lib/rt/itcms/__visit
                        end
                        global.get $~lib/memory/__stack_pointer
                        local.tee $2
                        local.get $1
                        i32.store $0
                        local.get $1
                        i32.load $0 offset=8
                        local.tee $3
                        local.set $0
                        local.get $2
                        local.get $1
                        i32.store $0
                        local.get $0
                        local.get $1
                        i32.load $0 offset=16
                        i32.const 12
                        i32.mul
                        i32.add
                        local.set $1
                        loop $while-continue|0
                         local.get $0
                         local.get $1
                         i32.lt_u
                         if
                          local.get $0
                          i32.load $0 offset=8
                          i32.const 1
                          i32.and
                          i32.eqz
                          if
                           local.get $0
                           i32.load $0
                           local.tee $2
                           if
                            local.get $2
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load $0 offset=4
                           local.tee $2
                           if
                            local.get $2
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                          end
                          local.get $0
                          i32.const 12
                          i32.add
                          local.set $0
                          br $while-continue|0
                         end
                        end
                        local.get $3
                        if
                         local.get $3
                         call $byn-split-outlined-A$~lib/rt/itcms/__visit
                        end
                        br $folding-inner13
                       end
                       return
                      end
                      local.get $0
                      call $assembly/compiler/Parser~visit
                      return
                     end
                     local.get $0
                     i32.load $0
                     local.tee $1
                     if
                      local.get $1
                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                     end
                     local.get $0
                     i32.load $0 offset=4
                     local.tee $1
                     if
                      local.get $1
                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                     end
                     local.get $0
                     i32.load $0 offset=12
                     local.tee $1
                     if
                      local.get $1
                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                     end
                     br $folding-inner4
                    end
                    return
                   end
                   local.get $0
                   call $assembly/compiler/Parser~visit
                   return
                  end
                  local.get $0
                  i32.load $0 offset=4
                  local.tee $1
                  if
                   local.get $1
                   call $byn-split-outlined-A$~lib/rt/itcms/__visit
                  end
                  br $folding-inner8
                 end
                 global.get $~lib/memory/__stack_pointer
                 i32.const 4
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 22792
                 i32.lt_s
                 br_if $folding-inner10
                 global.get $~lib/memory/__stack_pointer
                 local.tee $1
                 i32.const 0
                 i32.store $0
                 local.get $1
                 local.get $0
                 i32.store $0
                 br $folding-inner12
                end
                unreachable
               end
               local.get $0
               i32.load $0
               local.tee $0
               if
                local.get $0
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               return
              end
              local.get $0
              i32.load $0 offset=4
              local.tee $1
              if
               local.get $1
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              local.get $0
              i32.load $0 offset=8
              local.tee $1
              if
               local.get $1
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              br $folding-inner11
             end
             local.get $0
             i32.load $0 offset=4
             local.tee $0
             if
              local.get $0
              call $byn-split-outlined-A$~lib/rt/itcms/__visit
             end
             return
            end
            local.get $0
            local.get $0
            i32.const 20
            i32.sub
            i32.load $0 offset=16
            i32.add
            local.set $1
            loop $while-continue|00
             local.get $0
             local.get $1
             i32.lt_u
             if
              local.get $0
              i32.load $0
              local.tee $2
              if
               local.get $2
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              local.get $0
              i32.const 4
              i32.add
              local.set $0
              br $while-continue|00
             end
            end
            return
           end
           local.get $0
           i32.load $0 offset=20
           local.tee $0
           if
            local.get $0
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           return
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22792
          i32.lt_s
          br_if $folding-inner10
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          i32.const 0
          i32.store $0
          local.get $2
          local.get $0
          i32.store $0
          local.get $0
          i32.load $0 offset=4
          local.set $1
          local.get $2
          local.get $0
          i32.store $0
          local.get $1
          local.get $0
          i32.load $0 offset=12
          i32.const 2
          i32.shl
          i32.add
          local.set $2
          loop $while-continue|01
           local.get $1
           local.get $2
           i32.lt_u
           if
            local.get $1
            i32.load $0
            local.tee $3
            if
             local.get $3
             call $byn-split-outlined-A$~lib/rt/itcms/__visit
            end
            local.get $1
            i32.const 4
            i32.add
            local.set $1
            br $while-continue|01
           end
          end
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          br $folding-inner12
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22792
         i32.lt_s
         br_if $folding-inner10
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.store $0
         local.get $1
         local.get $0
         i32.store $0
         local.get $0
         i32.load $0 offset=4
         local.tee $0
         if
          local.get $0
          call $byn-split-outlined-A$~lib/rt/itcms/__visit
         end
         br $folding-inner13
        end
        local.get $0
        i32.load $0 offset=12
        local.tee $1
        if
         local.get $1
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        br $folding-inner9
       end
       local.get $0
       i32.load $0 offset=8
       local.tee $0
       if
        local.get $0
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       return
      end
      local.get $0
      i32.load $0 offset=16
      local.tee $0
      if
       local.get $0
       call $byn-split-outlined-A$~lib/rt/itcms/__visit
      end
      return
     end
     i32.const 55584
     i32.const 55632
     i32.const 1
     i32.const 1
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.load $0 offset=12
    local.tee $0
    if
     local.get $0
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    return
   end
   local.get $0
   i32.load $0
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~start
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 55560
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 1204
  i32.const 1200
  i32.store $0
  i32.const 1208
  i32.const 1200
  i32.store $0
  i32.const 1200
  global.set $~lib/rt/itcms/pinSpace
  i32.const 1236
  i32.const 1232
  i32.store $0
  i32.const 1240
  i32.const 1232
  i32.store $0
  i32.const 1232
  global.set $~lib/rt/itcms/toSpace
  i32.const 1380
  i32.const 1376
  i32.store $0
  i32.const 1384
  i32.const 1376
  i32.store $0
  i32.const 1376
  global.set $~lib/rt/itcms/fromSpace
  call $assembly/vm/VM#constructor
  global.set $assembly/vm/vm
  call $start:assembly/compiler
 )
 (func $~lib/staticarray/StaticArray<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.ge_u
  if
   i32.const 1280
   i32.const 1568
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.add
  i32.load8_u $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<u8>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.ge_u
  if
   i32.const 1280
   i32.const 1568
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  i32.add
  local.get $2
  i32.store8 $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  call $~lib/staticarray/StaticArray<u8>#constructor
  local.tee $1
  i32.store $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $3
    local.get $0
    local.get $3
    call $~lib/staticarray/StaticArray<u8>#__get
    call $~lib/staticarray/StaticArray<u8>#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 1280
   i32.const 1568
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 1664
   i32.const 1568
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 1280
   i32.const 1568
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $2
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
  local.tee $1
  i32.store $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 2
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $3
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $1
    local.get $3
    local.get $2
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/typedarray/Uint16Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 12
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 3
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 536870910
   i32.gt_u
   if
    i32.const 1520
    i32.const 1824
    i32.const 19
    i32.const 57
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   i32.shl
   local.tee $3
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=8
   local.get $4
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Uint16Array#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:assembly/memory~anonymous|3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $2
   call $~lib/typedarray/Uint16Array#constructor
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $~lib/typedarray/Uint16Array#get:length
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/typedarray/Uint16Array#get:length
   local.get $1
   i32.lt_s
   if
    i32.const 1280
    i32.const 1888
    i32.const 1902
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.load $0 offset=4
   local.set $4
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.load $0 offset=4
   local.get $1
   i32.const 1
   i32.shl
   memory.copy $0 $0
   local.get $2
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const -2
  i32.and
  local.set $2
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const -2
  i32.and
  local.tee $3
  local.get $2
  i32.add
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1056
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store $0 offset=4
  local.get $4
  local.get $0
  local.get $2
  memory.copy $0 $0
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/index/debugLog (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   global.get $assembly/index/debugFlag
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/bindings/dom/console.log
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/memory~anonymous|4 (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i64.const 0
  i64.store $0 offset=8
  i32.const 55560
  i32.const 1984
  i32.store $0
  local.get $0
  i32.const 55560
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $0
  i32.const 2080
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 2080
  local.get $1
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/index/debugLog
  i32.const 55560
  call $~lib/util/number/utoa32
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/value/AS_OBJ (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=16
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 5184
   i32.const 5312
   i32.const 57
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/OBJ_TYPE (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/value/AS_OBJ
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/AS_BOUND_METHOD (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjBoundMethod (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 25
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjBoundMethod
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 165
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $2
   local.get $1
   i32.store $0
   local.get $3
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.tee $2
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   local.get $3
   local.tee $0
   i32.const 4
   i32.ge_u
   i32.and
   if
    loop $do-loop|0
     local.get $2
     i64.load $0
     local.get $1
     i64.load $0
     i64.eq
     if
      local.get $2
      i32.const 8
      i32.add
      local.set $2
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.tee $0
      i32.const 4
      i32.ge_u
      br_if $do-loop|0
     end
    end
   end
   block $__inlined_func$~lib/util/string/compareImpl
    loop $while-continue|1
     local.get $0
     local.tee $3
     i32.const 1
     i32.sub
     local.set $0
     local.get $3
     if
      local.get $2
      i32.load16_u $0
      local.tee $5
      local.get $1
      i32.load16_u $0
      local.tee $4
      i32.sub
      local.set $3
      local.get $4
      local.get $5
      i32.ne
      br_if $__inlined_func$~lib/util/string/compareImpl
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $1
      i32.const 2
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    i32.const 0
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   i32.eqz
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $4
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1056
   return
  end
  local.get $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1056
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0 offset=4
    local.get $5
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $2
     local.get $5
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $2
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 1056
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.const 1052
  i32.load $0
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $4
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0 offset=12
  i32.const 0
  local.set $2
  loop $for-loop|1
   local.get $2
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $5
     local.get $3
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $6
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $6
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $3
     local.get $6
     i32.add
     local.set $3
    end
    local.get $1
    if
     local.get $5
     local.get $3
     i32.const 1
     i32.shl
     i32.add
     i32.const 1056
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $1
     local.get $3
     i32.add
     local.set $3
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $5
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 2
  i32.shr_u
  local.set $2
  local.get $1
  i32.const 1056
  i32.store $0
  local.get $0
  local.get $2
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/AS_CLASS (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjClass (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 27
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjClass
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 170
   i32.const 22
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/AS_INSTANCE (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjInstance (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 28
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjInstance
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 185
   i32.const 25
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/AS_CLOSURE (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjClosure (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 6
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjClosure
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 175
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/AS_FUNCTION (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjFunction (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 8
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjFunction
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 180
   i32.const 25
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/value/objectToString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner4
   block $folding-inner3
    block $folding-inner2
     block $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i32.const 22792
      i32.lt_s
      br_if $folding-inner4
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      i32.const 0
      i32.const 24
      memory.fill $0
      local.get $1
      local.get $0
      i32.store $0
      block $case7|0
       block $case6|0
        block $case5|0
         block $case4|0
          block $case3|0
           block $case2|0
            block $case1|0
             block $case0|0
              local.get $0
              call $assembly/object/OBJ_TYPE
              br_table $case0|0 $case1|0 $case4|0 $case5|0 $case2|0 $case6|0 $case3|0 $case7|0
             end
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0 offset=12
             local.get $0
             call $assembly/object/AS_BOUND_METHOD
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0 offset=8
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load $0 offset=12
             local.tee $0
             i32.store $0 offset=4
             local.get $0
             i32.load $0 offset=8
             local.set $0
             br $folding-inner1
            end
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0 offset=4
            local.get $0
            call $assembly/object/AS_CLASS
            local.set $0
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $0
            i32.load $0 offset=8
            local.set $0
            br $folding-inner3
           end
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=16
           local.get $0
           call $assembly/object/AS_INSTANCE
           local.set $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=8
           local.tee $0
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=8
           local.tee $0
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           i32.const 5648
           i32.store $0 offset=4
           local.get $0
           i32.const 5648
           call $~lib/string/String#concat
           local.set $0
           br $folding-inner3
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $0
          i32.store $0
          local.get $1
          i32.const 12
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22792
          i32.lt_s
          br_if $folding-inner4
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i64.const 0
          i64.store $0
          local.get $1
          i32.const 0
          i32.store $0 offset=8
          block $__inlined_func$~instanceof|assembly/object/ObjString (result i32)
           local.get $1
           local.get $0
           i32.store $0 offset=4
           local.get $1
           local.get $0
           call $assembly/value/AS_OBJ
           local.tee $0
           i32.store $0 offset=8
           i32.const 0
           local.get $0
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 15
           i32.ne
           br_if $__inlined_func$~instanceof|assembly/object/ObjString
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 5376
           i32.const 5440
           i32.const 200
           i32.const 24
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $0
          i32.store $0
          local.get $0
          i32.load $0 offset=12
          local.set $0
          local.get $1
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          br $folding-inner3
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $0
         i32.store $0
         local.get $1
         local.get $0
         call $assembly/object/AS_CLOSURE
         local.tee $0
         i32.store $0 offset=20
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=8
         local.tee $0
         i32.store $0
         br $folding-inner2
        end
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        local.get $0
        call $assembly/object/AS_FUNCTION
        local.set $0
        br $folding-inner1
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 5696
       return
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1056
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
    end
    block $__inlined_func$assembly/object/printFunction (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner4
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $1
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.load $0 offset=16
     local.tee $2
     i32.store $0 offset=8
     local.get $1
     local.get $2
     i32.load $0 offset=12
     local.tee $2
     i32.store $0
     local.get $1
     i32.const 1056
     i32.store $0 offset=4
     local.get $2
     i32.const 1056
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 5504
      br $__inlined_func$assembly/object/printFunction
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.load $0 offset=16
     local.tee $0
     i32.store $0
     local.get $1
     local.get $0
     i32.load $0 offset=12
     local.tee $0
     i32.store $0 offset=16
     local.get $1
     i32.const 5616
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=8
     i32.const 5616
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 5616
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 1056
     i32.store $0 offset=4
     i32.const 5616
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
    end
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/value~anonymous|0 (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   block $__inlined_func$assembly/value/valToString
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $0
         i32.load $0
         br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        local.get $0
        i32.store $0
        i32.const 3952
        i32.const 3984
        local.get $0
        i32.load8_u $0 offset=4
        select
        local.set $0
        local.get $2
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/value/valToString
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 4016
       local.set $0
       br $__inlined_func$assembly/value/valToString
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0
      local.get $0
      f64.load $0 offset=8
      local.set $1
      local.get $2
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22792
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store $0
      block $__inlined_func$~lib/util/number/dtoa
       local.get $1
       f64.const 0
       f64.eq
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 4048
        local.set $0
        br $__inlined_func$~lib/util/number/dtoa
       end
       local.get $1
       local.get $1
       f64.sub
       f64.const 0
       f64.ne
       if
        local.get $1
        local.get $1
        f64.ne
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 4080
         local.set $0
         br $__inlined_func$~lib/util/number/dtoa
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 4112
        i32.const 4160
        local.get $1
        f64.const 0
        f64.lt
        select
        local.set $0
        br $__inlined_func$~lib/util/number/dtoa
       end
       local.get $1
       call $~lib/util/number/dtoa_core
       i32.const 1
       i32.shl
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.const 2
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store $0
       local.get $0
       i32.const 4192
       local.get $2
       memory.copy $0 $0
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      br $__inlined_func$assembly/value/valToString
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/value/objectToString
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$assembly/value/valToString
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1056
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/object/Obj#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 6
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 17
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1520
   i32.const 5776
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/value/Value#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 20
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store8 $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  f64.const 0
  f64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/ObjUpvalue#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 16
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  call $assembly/value/Value#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const -1
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $assembly/object/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1520
    i32.const 5776
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.set $1
   local.get $2
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   block $__inlined_func$~lib/rt/itcms/__renew
    local.get $3
    i32.const 20
    i32.sub
    local.tee $4
    i32.load $0
    i32.const -4
    i32.and
    i32.const 16
    i32.sub
    local.get $1
    i32.ge_u
    if
     local.get $4
     local.get $1
     i32.store $0 offset=16
     local.get $3
     local.set $2
     br $__inlined_func$~lib/rt/itcms/__renew
    end
    local.get $1
    local.get $4
    i32.load $0 offset=12
    call $~lib/rt/itcms/__new
    local.tee $2
    local.get $3
    local.get $1
    local.get $4
    i32.load $0 offset=16
    local.tee $4
    local.get $1
    local.get $4
    i32.lt_u
    select
    memory.copy $0 $0
   end
   local.get $2
   local.get $3
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1280
    i32.const 5776
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/object/ObjClosure#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  i32.const 20
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=16
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $assembly/object/Obj#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 2
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $0
  i32.load8_u $0 offset=9
  call $~lib/array/Array<assembly/object/ObjUpvalue>#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load8_u $0 offset=9
   i32.lt_u
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $3
    i32.store $0 offset=12
    local.get $2
    local.get $3
    i32.load $0 offset=12
    local.tee $4
    i32.store $0 offset=4
    call $assembly/object/ObjUpvalue#constructor
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    local.get $4
    local.get $1
    local.get $2
    call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.load8_u $0 offset=9
  i32.store $0 offset=16
  local.get $1
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/object/ObjString#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 16
  i32.const 15
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/object/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=8
  local.get $0
  i32.const 1056
  i32.store $0 offset=12
  local.get $0
  i32.const 1056
  i32.const 0
  call $byn-split-outlined-A$~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/ObjFunction#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 20
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store8 $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store8 $0 offset=9
   local.get $1
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 20
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   call $~lib/typedarray/Uint16Array#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=12
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 12
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   i32.const 0
   call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=8
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=16
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=12
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   call $assembly/object/ObjString#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=16
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $assembly/object/Obj#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 19
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/VM#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $3
   i32.const 36
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $4
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   i32.const 256
   i32.const 18
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $4
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.store $0 offset=4
   i32.const 256
   call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   call $assembly/value/Value#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $2of2
    block $1of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $1of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 2147483647
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0
   local.get $6
   local.get $3
   i32.store $0 offset=4
   local.get $6
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i32.const 0
   i32.store $0
   local.get $6
   local.get $5
   i32.store $0
   local.get $2
   local.get $5
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 2
   i32.shr_u
   local.tee $6
   local.get $2
   local.get $6
   i32.lt_s
   select
   local.set $2
   block $__inlined_func$~lib/util/bytes/FILL<usize>
    local.get $3
    i32.eqz
    local.get $3
    i32.const -1
    i32.eq
    i32.or
    if
     local.get $2
     i32.const 0
     i32.gt_s
     if
      local.get $5
      local.get $3
      local.get $2
      i32.const 2
      i32.shl
      memory.fill $0
     end
     br $__inlined_func$~lib/util/bytes/FILL<usize>
    end
    loop $for-loop|0
     local.get $0
     local.get $2
     i32.lt_s
     if
      local.get $5
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      local.get $3
      i32.store $0
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
   end
   local.get $3
   if
    local.get $5
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=8
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   local.get $0
   local.get $4
   i32.store $0 offset=4
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.store $0 offset=16
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.store $0 offset=20
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   call $assembly/object/ObjString#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.store $0 offset=24
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=28
   local.get $0
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=32
   loop $for-loop|00
    local.get $1
    i32.const 64
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $4
     i32.store $0 offset=12
     local.get $0
     local.get $4
     i32.load $0
     local.tee $2
     i32.store $0 offset=4
     local.get $0
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     i64.const 0
     i64.store $0 offset=8
     local.get $0
     i32.const 12
     i32.const 5
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     call $~lib/object/Object#constructor
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     call $assembly/object/ObjFunction#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $3
     call $assembly/object/ObjClosure#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $0
     local.get $3
     i32.store $0
     local.get $3
     if
      local.get $0
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=8
     local.get $3
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     local.get $2
     local.get $1
     local.get $0
     call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/debug~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  i32.add
 )
 (func $start:assembly/debug~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0
  local.get $1
  local.get $2
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 255
  i32.and
  call $~lib/util/number/utoa32
  local.tee $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 5888
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  i32.const 5888
  i32.const 0
  local.get $0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 5888
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  i32.const 5888
  i32.const 2
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 5888
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=20
  i32.const 5888
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.add
 )
 (func $start:assembly/debug~anonymous|2 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.store $0
  local.get $4
  local.get $3
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  i32.const 255
  i32.and
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  local.get $3
  i32.const 2
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.get $4
  i32.or
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $~lib/util/number/utoa32
  local.tee $4
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 3
  i32.add
  local.tee $3
  local.get $1
  local.get $2
  i32.const 65535
  i32.and
  i32.mul
  i32.add
  call $~lib/util/number/utoa32
  local.tee $1
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 5984
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  i32.const 5984
  i32.const 0
  local.get $0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 5984
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  i32.const 5984
  i32.const 2
  local.get $4
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 5984
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  i32.const 5984
  i32.const 4
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 5984
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=24
  i32.const 5984
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $start:assembly/debug~anonymous|3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.load $0 offset=8
  local.tee $3
  i32.store $0
  local.get $3
  local.get $2
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=16
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  local.get $4
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  i32.const 1
  global.set $~argumentsLength
  local.get $3
  local.get $1
  i32.const 5744
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.tee $1
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 255
  i32.and
  call $~lib/util/number/utoa32
  local.tee $3
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 6176
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  i32.const 6176
  i32.const 0
  local.get $0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 6176
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  i32.const 6176
  i32.const 2
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 6176
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  i32.const 6176
  i32.const 4
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 6176
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=8
  i32.const 6176
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 1280
   i32.const 1888
   i32.const 594
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:assembly/debug~anonymous|4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner6
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner6
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 76
   memory.fill $0
   local.get $2
   i32.const 1056
   i32.store $0
   local.get $1
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $2
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $~lib/typedarray/Uint16Array#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $4
    i32.store $0 offset=4
    local.get $4
    local.get $1
    i32.const 1
    i32.sub
    call $~lib/typedarray/Uint16Array#__get
    local.get $2
    i32.eq
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.set $2
    local.get $1
    call $~lib/util/number/utoa32
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 6256
    i32.store $0 offset=8
    local.get $2
    local.get $4
    i32.const 6256
    call $~lib/string/String#concat
    local.tee $2
    i32.store $0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    call $~lib/util/number/utoa32
    local.tee $4
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $5
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.get $1
    call $~lib/typedarray/Uint16Array#__get
    i32.const 65535
    i32.and
    call $~lib/util/number/utoa32
    local.tee $5
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 6368
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    i32.const 6368
    i32.const 0
    local.get $4
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 6368
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    i32.const 6368
    i32.const 2
    local.get $5
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 6368
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=8
    local.get $2
    i32.const 6368
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.tee $2
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0 offset=4
   block $folding-inner5 (result i32)
    block $folding-inner4
     block $folding-inner3
      block $folding-inner2
       block $folding-inner1
        block $folding-inner0
         block $case37|0
          block $case36|0
           block $case35|0
            block $case34|0
             block $case33|0
              block $case32|0
               block $case31|0
                block $case30|0
                 block $case29|0
                  block $case28|0
                   block $case27|0
                    block $case26|0
                     block $case25|0
                      block $case24|0
                       block $case23|0
                        block $case22|0
                         block $case21|0
                          block $case20|0
                           block $case19|0
                            block $case18|0
                             block $case17|0
                              block $case16|0
                               block $case15|0
                                block $case14|0
                                 block $case13|0
                                  block $case12|0
                                   block $case11|0
                                    block $case10|0
                                     block $case9|0
                                      block $case8|0
                                       block $case7|0
                                        block $case6|0
                                         block $case5|0
                                          block $case4|0
                                           block $case3|0
                                            block $case2|0
                                             block $case1|0
                                              block $case0|0
                                               local.get $4
                                               local.get $1
                                               call $~lib/staticarray/StaticArray<u8>#__get
                                               local.tee $4
                                               br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0 $case5|0 $case6|0 $case7|0 $case8|0 $case9|0 $case10|0 $case11|0 $case12|0 $case13|0 $case14|0 $case15|0 $case16|0 $case17|0 $case18|0 $case19|0 $case20|0 $case21|0 $case22|0 $case23|0 $case24|0 $case25|0 $case26|0 $case27|0 $case28|0 $case29|0 $case30|0 $case31|0 $case32|0 $case33|0 $case34|0 $case35|0 $case36|0 $case37|0
                                              end
                                              global.get $~lib/memory/__stack_pointer
                                              local.tee $3
                                              local.get $2
                                              i32.store $0 offset=20
                                              local.get $3
                                              i32.const 6416
                                              i32.store $0 offset=24
                                              local.get $2
                                              i32.const 6416
                                              call $~lib/string/String#concat
                                              local.set $2
                                              br $folding-inner0
                                             end
                                             global.get $~lib/memory/__stack_pointer
                                             local.tee $0
                                             local.get $2
                                             i32.store $0 offset=8
                                             local.get $0
                                             i32.const 6464
                                             i32.store $0 offset=20
                                             local.get $2
                                             i32.const 6464
                                             call $~lib/string/String#concat
                                             local.set $2
                                             br $folding-inner1
                                            end
                                            global.get $~lib/memory/__stack_pointer
                                            local.tee $0
                                            local.get $2
                                            i32.store $0 offset=8
                                            local.get $0
                                            i32.const 6512
                                            i32.store $0 offset=20
                                            local.get $2
                                            i32.const 6512
                                            call $~lib/string/String#concat
                                            local.set $2
                                            br $folding-inner1
                                           end
                                           global.get $~lib/memory/__stack_pointer
                                           local.tee $0
                                           local.get $2
                                           i32.store $0 offset=8
                                           local.get $0
                                           i32.const 6560
                                           i32.store $0 offset=20
                                           local.get $2
                                           i32.const 6560
                                           call $~lib/string/String#concat
                                           local.set $2
                                           br $folding-inner1
                                          end
                                          global.get $~lib/memory/__stack_pointer
                                          local.tee $0
                                          local.get $2
                                          i32.store $0 offset=8
                                          local.get $0
                                          i32.const 6608
                                          i32.store $0 offset=20
                                          local.get $2
                                          i32.const 6608
                                          call $~lib/string/String#concat
                                          local.set $2
                                          br $folding-inner1
                                         end
                                         global.get $~lib/memory/__stack_pointer
                                         local.tee $3
                                         local.get $2
                                         i32.store $0 offset=20
                                         local.get $3
                                         i32.const 6656
                                         i32.store $0 offset=24
                                         local.get $2
                                         i32.const 6656
                                         call $~lib/string/String#concat
                                         local.set $2
                                         br $folding-inner2
                                        end
                                        global.get $~lib/memory/__stack_pointer
                                        local.tee $3
                                        local.get $2
                                        i32.store $0 offset=20
                                        local.get $3
                                        i32.const 6704
                                        i32.store $0 offset=24
                                        local.get $2
                                        i32.const 6704
                                        call $~lib/string/String#concat
                                        local.set $2
                                        br $folding-inner2
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       local.tee $3
                                       local.get $2
                                       i32.store $0 offset=20
                                       local.get $3
                                       i32.const 6752
                                       i32.store $0 offset=24
                                       local.get $2
                                       i32.const 6752
                                       call $~lib/string/String#concat
                                       local.set $2
                                       br $folding-inner0
                                      end
                                      global.get $~lib/memory/__stack_pointer
                                      local.tee $3
                                      local.get $2
                                      i32.store $0 offset=20
                                      local.get $3
                                      i32.const 6800
                                      i32.store $0 offset=24
                                      local.get $2
                                      i32.const 6800
                                      call $~lib/string/String#concat
                                      local.set $2
                                      br $folding-inner0
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     local.tee $3
                                     local.get $2
                                     i32.store $0 offset=20
                                     local.get $3
                                     i32.const 6864
                                     i32.store $0 offset=24
                                     local.get $2
                                     i32.const 6864
                                     call $~lib/string/String#concat
                                     local.set $2
                                     br $folding-inner0
                                    end
                                    global.get $~lib/memory/__stack_pointer
                                    local.tee $3
                                    local.get $2
                                    i32.store $0 offset=20
                                    local.get $3
                                    i32.const 6912
                                    i32.store $0 offset=24
                                    local.get $2
                                    i32.const 6912
                                    call $~lib/string/String#concat
                                    local.set $2
                                    br $folding-inner2
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   local.tee $3
                                   local.get $2
                                   i32.store $0 offset=20
                                   local.get $3
                                   i32.const 6976
                                   i32.store $0 offset=24
                                   local.get $2
                                   i32.const 6976
                                   call $~lib/string/String#concat
                                   local.set $2
                                   br $folding-inner2
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  local.tee $3
                                  local.get $2
                                  i32.store $0 offset=20
                                  local.get $3
                                  i32.const 7040
                                  i32.store $0 offset=24
                                  local.get $2
                                  i32.const 7040
                                  call $~lib/string/String#concat
                                  local.set $2
                                  br $folding-inner0
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.tee $3
                                 local.get $2
                                 i32.store $0 offset=20
                                 local.get $3
                                 i32.const 7104
                                 i32.store $0 offset=24
                                 local.get $2
                                 i32.const 7104
                                 call $~lib/string/String#concat
                                 local.set $2
                                 br $folding-inner0
                                end
                                global.get $~lib/memory/__stack_pointer
                                local.tee $3
                                local.get $2
                                i32.store $0 offset=20
                                local.get $3
                                i32.const 7168
                                i32.store $0 offset=24
                                local.get $2
                                i32.const 7168
                                call $~lib/string/String#concat
                                local.set $2
                                br $folding-inner0
                               end
                               global.get $~lib/memory/__stack_pointer
                               local.tee $0
                               local.get $2
                               i32.store $0 offset=8
                               local.get $0
                               i32.const 7216
                               i32.store $0 offset=20
                               local.get $2
                               i32.const 7216
                               call $~lib/string/String#concat
                               local.set $2
                               br $folding-inner1
                              end
                              global.get $~lib/memory/__stack_pointer
                              local.tee $0
                              local.get $2
                              i32.store $0 offset=8
                              local.get $0
                              i32.const 7264
                              i32.store $0 offset=20
                              local.get $2
                              i32.const 7264
                              call $~lib/string/String#concat
                              local.set $2
                              br $folding-inner1
                             end
                             global.get $~lib/memory/__stack_pointer
                             local.tee $0
                             local.get $2
                             i32.store $0 offset=8
                             local.get $0
                             i32.const 7312
                             i32.store $0 offset=20
                             local.get $2
                             i32.const 7312
                             call $~lib/string/String#concat
                             local.set $2
                             br $folding-inner1
                            end
                            global.get $~lib/memory/__stack_pointer
                            local.tee $0
                            local.get $2
                            i32.store $0 offset=8
                            local.get $0
                            i32.const 7360
                            i32.store $0 offset=20
                            local.get $2
                            i32.const 7360
                            call $~lib/string/String#concat
                            local.set $2
                            br $folding-inner1
                           end
                           global.get $~lib/memory/__stack_pointer
                           local.tee $0
                           local.get $2
                           i32.store $0 offset=8
                           local.get $0
                           i32.const 7408
                           i32.store $0 offset=20
                           local.get $2
                           i32.const 7408
                           call $~lib/string/String#concat
                           local.set $2
                           br $folding-inner1
                          end
                          global.get $~lib/memory/__stack_pointer
                          local.tee $0
                          local.get $2
                          i32.store $0 offset=8
                          local.get $0
                          i32.const 7456
                          i32.store $0 offset=20
                          local.get $2
                          i32.const 7456
                          call $~lib/string/String#concat
                          local.set $2
                          br $folding-inner1
                         end
                         global.get $~lib/memory/__stack_pointer
                         local.tee $0
                         local.get $2
                         i32.store $0 offset=8
                         local.get $0
                         i32.const 7504
                         i32.store $0 offset=20
                         local.get $2
                         i32.const 7504
                         call $~lib/string/String#concat
                         local.set $2
                         br $folding-inner1
                        end
                        global.get $~lib/memory/__stack_pointer
                        local.tee $0
                        local.get $2
                        i32.store $0 offset=8
                        local.get $0
                        i32.const 7552
                        i32.store $0 offset=20
                        local.get $2
                        i32.const 7552
                        call $~lib/string/String#concat
                        local.set $2
                        br $folding-inner1
                       end
                       global.get $~lib/memory/__stack_pointer
                       local.tee $0
                       local.get $2
                       i32.store $0 offset=8
                       local.get $0
                       i32.const 7600
                       i32.store $0 offset=20
                       local.get $2
                       i32.const 7600
                       call $~lib/string/String#concat
                       local.set $2
                       br $folding-inner1
                      end
                      global.get $~lib/memory/__stack_pointer
                      local.tee $0
                      local.get $2
                      i32.store $0 offset=8
                      local.get $0
                      i32.const 7648
                      i32.store $0 offset=20
                      local.get $2
                      i32.const 7648
                      call $~lib/string/String#concat
                      local.set $2
                      br $folding-inner1
                     end
                     global.get $~lib/memory/__stack_pointer
                     local.tee $3
                     local.get $2
                     i32.store $0 offset=20
                     local.get $3
                     i32.const 7696
                     i32.store $0 offset=24
                     local.get $2
                     i32.const 7696
                     call $~lib/string/String#concat
                     local.set $2
                     br $folding-inner3
                    end
                    global.get $~lib/memory/__stack_pointer
                    local.tee $3
                    local.get $2
                    i32.store $0 offset=20
                    local.get $3
                    i32.const 7744
                    i32.store $0 offset=24
                    local.get $2
                    i32.const 7744
                    call $~lib/string/String#concat
                    local.set $2
                    br $folding-inner3
                   end
                   global.get $~lib/memory/__stack_pointer
                   local.tee $3
                   local.get $2
                   i32.store $0 offset=20
                   local.get $3
                   i32.const 7808
                   i32.store $0 offset=24
                   local.get $2
                   i32.const 7808
                   call $~lib/string/String#concat
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0 offset=4
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store $0 offset=20
                   i32.const 4
                   global.set $~argumentsLength
                   local.get $2
                   i32.const -1
                   local.get $0
                   local.get $1
                   i32.const 6032
                   i32.load $0
                   call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
                   br $folding-inner5
                  end
                  global.get $~lib/memory/__stack_pointer
                  local.tee $3
                  local.get $2
                  i32.store $0 offset=20
                  local.get $3
                  i32.const 7856
                  i32.store $0 offset=24
                  local.get $2
                  i32.const 7856
                  call $~lib/string/String#concat
                  local.set $2
                  br $folding-inner2
                 end
                 global.get $~lib/memory/__stack_pointer
                 local.tee $3
                 local.get $2
                 i32.store $0 offset=20
                 local.get $3
                 i32.const 7904
                 i32.store $0 offset=24
                 local.get $2
                 i32.const 7904
                 call $~lib/string/String#concat
                 local.set $2
                 br $folding-inner4
                end
                global.get $~lib/memory/__stack_pointer
                local.tee $3
                local.get $2
                i32.store $0 offset=20
                local.get $3
                i32.const 8048
                i32.store $0 offset=24
                local.get $2
                i32.const 8048
                call $~lib/string/String#concat
                local.set $2
                br $folding-inner4
               end
               global.get $~lib/memory/__stack_pointer
               local.tee $4
               local.get $0
               i32.store $0 offset=8
               local.get $4
               local.get $0
               i32.load $0 offset=8
               local.tee $4
               i32.store $0 offset=4
               local.get $1
               i32.const 1
               i32.add
               local.tee $5
               i32.const 1
               i32.add
               local.set $1
               local.get $4
               local.get $5
               call $~lib/staticarray/StaticArray<u8>#__get
               local.set $4
               global.get $~lib/memory/__stack_pointer
               local.set $5
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0 offset=28
               global.get $~lib/memory/__stack_pointer
               local.get $4
               i32.const 255
               i32.and
               call $~lib/util/number/utoa32
               local.tee $6
               i32.store $0 offset=32
               global.get $~lib/memory/__stack_pointer
               local.set $7
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=24
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0 offset=16
               local.tee $8
               i32.store $0 offset=20
               global.get $~lib/memory/__stack_pointer
               local.get $8
               i32.load $0 offset=8
               local.tee $8
               i32.store $0 offset=8
               local.get $8
               local.get $4
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
               local.set $8
               global.get $~lib/memory/__stack_pointer
               local.get $8
               i32.store $0 offset=4
               i32.const 1
               global.set $~argumentsLength
               local.get $7
               local.get $8
               i32.const 5744
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.tee $7
               i32.store $0 offset=36
               global.get $~lib/memory/__stack_pointer
               i32.const 8160
               i32.store $0 offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0 offset=20
               i32.const 8160
               i32.const 0
               local.get $2
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
               global.get $~lib/memory/__stack_pointer
               i32.const 8160
               i32.store $0 offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store $0 offset=20
               i32.const 8160
               i32.const 2
               local.get $6
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
               global.get $~lib/memory/__stack_pointer
               i32.const 8160
               i32.store $0 offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $7
               i32.store $0 offset=20
               i32.const 8160
               i32.const 4
               local.get $7
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
               global.get $~lib/memory/__stack_pointer
               i32.const 8160
               i32.store $0 offset=4
               global.get $~lib/memory/__stack_pointer
               i32.const 1056
               i32.store $0 offset=8
               local.get $5
               i32.const 8160
               call $~lib/staticarray/StaticArray<~lib/string/String>#join
               local.tee $2
               i32.store $0 offset=40
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0 offset=4
               local.get $2
               call $assembly/index/debugLog
               global.get $~lib/memory/__stack_pointer
               local.set $2
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=24
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0 offset=16
               local.tee $5
               i32.store $0 offset=20
               global.get $~lib/memory/__stack_pointer
               local.get $5
               i32.load $0 offset=8
               local.tee $5
               i32.store $0 offset=8
               local.get $5
               local.get $4
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
               local.set $4
               global.get $~lib/memory/__stack_pointer
               local.get $4
               i32.store $0 offset=4
               local.get $2
               local.get $4
               call $assembly/object/AS_FUNCTION
               local.tee $2
               i32.store $0 offset=44
               loop $for-loop|1
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store $0 offset=4
                local.get $3
                local.get $2
                i32.load8_u $0 offset=9
                i32.lt_u
                if
                 global.get $~lib/memory/__stack_pointer
                 local.tee $4
                 i32.const 1056
                 i32.store $0 offset=48
                 local.get $4
                 local.get $0
                 i32.store $0 offset=8
                 local.get $4
                 local.get $0
                 i32.load $0 offset=8
                 local.tee $4
                 i32.store $0 offset=4
                 local.get $4
                 local.get $1
                 call $~lib/staticarray/StaticArray<u8>#__get
                 local.set $4
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.store $0 offset=8
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.load $0 offset=8
                 local.tee $5
                 i32.store $0 offset=4
                 local.get $1
                 i32.const 1
                 i32.add
                 local.tee $6
                 i32.const 1
                 i32.add
                 local.set $1
                 local.get $5
                 local.get $6
                 call $~lib/staticarray/StaticArray<u8>#__get
                 local.set $5
                 global.get $~lib/memory/__stack_pointer
                 i32.const 1056
                 i32.store $0 offset=4
                 global.get $~lib/memory/__stack_pointer
                 local.set $6
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.const 2
                 i32.sub
                 call $~lib/util/number/utoa32
                 local.tee $7
                 i32.store $0 offset=52
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8304
                 i32.const 8336
                 local.get $4
                 select
                 local.tee $4
                 i32.store $0 offset=56
                 global.get $~lib/memory/__stack_pointer
                 local.get $5
                 call $~lib/number/I32#toString
                 local.tee $5
                 i32.store $0 offset=60
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8256
                 i32.store $0 offset=20
                 global.get $~lib/memory/__stack_pointer
                 local.get $7
                 i32.store $0 offset=64
                 i32.const 8256
                 i32.const 0
                 local.get $7
                 call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8256
                 i32.store $0 offset=20
                 global.get $~lib/memory/__stack_pointer
                 local.get $4
                 i32.store $0 offset=64
                 i32.const 8256
                 i32.const 2
                 local.get $4
                 call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8256
                 i32.store $0 offset=20
                 global.get $~lib/memory/__stack_pointer
                 local.get $5
                 i32.store $0 offset=64
                 i32.const 8256
                 i32.const 4
                 local.get $5
                 call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8256
                 i32.store $0 offset=20
                 global.get $~lib/memory/__stack_pointer
                 i32.const 1056
                 i32.store $0 offset=24
                 i32.const 8256
                 call $~lib/staticarray/StaticArray<~lib/string/String>#join
                 local.set $4
                 global.get $~lib/memory/__stack_pointer
                 local.get $4
                 i32.store $0 offset=8
                 local.get $6
                 i32.const 1056
                 local.get $4
                 call $~lib/string/String.__concat
                 local.tee $4
                 i32.store $0 offset=48
                 global.get $~lib/memory/__stack_pointer
                 local.get $4
                 i32.store $0 offset=4
                 local.get $4
                 call $assembly/index/debugLog
                 local.get $3
                 i32.const 1
                 i32.add
                 local.set $3
                 br $for-loop|1
                end
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 76
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $1
               return
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              local.get $2
              i32.store $0 offset=8
              local.get $0
              i32.const 8384
              i32.store $0 offset=20
              local.get $2
              i32.const 8384
              call $~lib/string/String#concat
              local.set $2
              br $folding-inner1
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $0
             local.get $2
             i32.store $0 offset=8
             local.get $0
             i32.const 8448
             i32.store $0 offset=20
             local.get $2
             i32.const 8448
             call $~lib/string/String#concat
             local.set $2
             br $folding-inner1
            end
            global.get $~lib/memory/__stack_pointer
            local.tee $3
            local.get $2
            i32.store $0 offset=20
            local.get $3
            i32.const 8496
            i32.store $0 offset=24
            local.get $2
            i32.const 8496
            call $~lib/string/String#concat
            local.set $2
            br $folding-inner0
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           local.get $2
           i32.store $0 offset=8
           local.get $0
           i32.const 8544
           i32.store $0 offset=20
           local.get $2
           i32.const 8544
           call $~lib/string/String#concat
           local.set $2
           br $folding-inner1
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $2
          i32.store $0 offset=20
          local.get $3
          i32.const 8592
          i32.store $0 offset=24
          local.get $2
          i32.const 8592
          call $~lib/string/String#concat
          local.set $2
          br $folding-inner0
         end
         global.get $~lib/memory/__stack_pointer
         local.get $1
         call $~lib/util/number/utoa32
         local.tee $0
         i32.store $0 offset=68
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.const 255
         i32.and
         call $~lib/util/number/utoa32
         local.tee $2
         i32.store $0 offset=72
         global.get $~lib/memory/__stack_pointer
         i32.const 8704
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=24
         i32.const 8704
         i32.const 0
         local.get $0
         call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
         global.get $~lib/memory/__stack_pointer
         i32.const 8704
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0 offset=24
         i32.const 8704
         i32.const 2
         local.get $2
         call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
         global.get $~lib/memory/__stack_pointer
         i32.const 8704
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         i32.const 1056
         i32.store $0 offset=20
         i32.const 8704
         call $~lib/staticarray/StaticArray<~lib/string/String>#join
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         local.get $0
         call $assembly/index/debugLog
         global.get $~lib/memory/__stack_pointer
         i32.const 76
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $1
         i32.const 1
         i32.add
         return
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0 offset=4
        local.get $3
        local.get $0
        i32.store $0 offset=8
        i32.const 3
        global.set $~argumentsLength
        local.get $2
        local.get $0
        local.get $1
        i32.const 6224
        i32.load $0
        call_indirect $0 (type $i32_i32_i32_=>_i32)
        br $folding-inner5
       end
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=4
       i32.const 2
       global.set $~argumentsLength
       local.get $2
       local.get $1
       i32.const 5824
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       br $folding-inner5
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.store $0 offset=8
      i32.const 3
      global.set $~argumentsLength
      local.get $2
      local.get $0
      local.get $1
      i32.const 5920
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br $folding-inner5
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=20
     i32.const 4
     global.set $~argumentsLength
     local.get $2
     i32.const 1
     local.get $0
     local.get $1
     i32.const 6032
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     br $folding-inner5
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.store $0 offset=8
    local.get $3
    i32.const 36
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner6
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 0
    i32.const 36
    memory.fill $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=8
    local.tee $3
    i32.store $0
    local.get $3
    local.get $1
    i32.const 1
    i32.add
    call $~lib/staticarray/StaticArray<u8>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $4
    i32.store $0
    local.get $4
    local.get $1
    i32.const 2
    i32.add
    call $~lib/staticarray/StaticArray<u8>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=16
    local.tee $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    local.get $3
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 1
    global.set $~argumentsLength
    local.get $5
    local.get $0
    i32.const 5744
    i32.load $0
    call_indirect $0 (type $i32_=>_i32)
    local.tee $0
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 255
    i32.and
    call $~lib/util/number/utoa32
    local.tee $4
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 255
    i32.and
    call $~lib/util/number/utoa32
    local.tee $3
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=32
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    i32.const 7984
    i32.const 0
    local.get $2
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    i32.const 7984
    i32.const 2
    local.get $4
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    i32.const 7984
    i32.const 4
    local.get $3
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 7984
    i32.const 6
    local.get $0
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=8
    i32.const 7984
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    i32.const 3
    i32.add
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/debug~anonymous|5 (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  i32.const 1056
  i32.store $0
  i32.const 1056
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8832
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  i32.const 8832
  i32.const 1
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8832
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=16
  i32.const 8832
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 8864
  i32.store $0
  i32.const 8864
  call $assembly/index/debugLog
  i32.const 0
  local.set $1
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $1
    i32.const 8736
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/scanner/Token#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 10
  i32.const 38
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 38
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=8
  local.get $0
  i32.const 1056
  i32.store $0 offset=4
  local.get $0
  i32.const 1056
  i32.const 0
  call $byn-split-outlined-A$~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store16 $0 offset=8
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/Local#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 9
  i32.const 40
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  call $assembly/scanner/Token#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const -1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store8 $0 offset=8
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/compiler/Local>#fill@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $2of2
    block $1of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $1of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 2147483647
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   i32.const 0
   local.get $5
   i32.const 0
   i32.le_s
   select
   local.set $2
   local.get $3
   local.get $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   local.set $3
   block $__inlined_func$~lib/util/bytes/FILL<usize>
    local.get $1
    i32.eqz
    local.get $1
    i32.const -1
    i32.eq
    i32.or
    if
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $4
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      local.get $1
      local.get $3
      local.get $2
      i32.sub
      i32.const 2
      i32.shl
      memory.fill $0
     end
     br $__inlined_func$~lib/util/bytes/FILL<usize>
    end
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $4
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      local.get $1
      i32.store $0
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
   end
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/Upvalue#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 2
  i32.const 42
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store8 $0 offset=1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/Compiler#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $0
   i32.const 28
   i32.const 39
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   call $assembly/object/ObjFunction#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $2
   i32.const 1024
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 1024
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 256
   i32.store $0 offset=12
   local.get $3
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   call $assembly/compiler/Local#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   local.get $2
   call $~lib/array/Array<assembly/compiler/Local>#fill@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=12
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $2
   i32.const 1024
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 1024
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 256
   i32.store $0 offset=12
   local.get $3
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   call $assembly/compiler/Upvalue#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   local.get $2
   call $~lib/array/Array<assembly/compiler/Local>#fill@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=20
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=24
   local.get $1
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/ParseRule#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 12
  i32.const 45
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $0
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/peek (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  global.get $assembly/scanner/codestring
  local.tee $1
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/advance (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/scanner/scanner
  local.tee $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $1
  i32.load $0 offset=4
  i32.const 1
  i32.add
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/codestring
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.load $0 offset=4
  i32.const 1
  i32.sub
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/isAtEnd (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.tee $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $0
  global.get $assembly/scanner/codestring
  local.tee $1
  i32.store $0
  local.get $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.eq
  local.set $1
  local.get $0
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/scanner/peekNext (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/scanner/isAtEnd
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 11616
   i32.store $0
   i32.const 11616
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  global.get $assembly/scanner/codestring
  local.tee $1
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  i32.add
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $1
  local.get $3
  i32.lt_s
  select
  local.tee $1
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $3
  local.get $2
  local.get $3
  i32.lt_s
  select
  local.tee $2
  local.get $1
  local.get $2
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $4
  local.get $1
  local.get $2
  local.get $1
  local.get $2
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.tee $1
  local.get $4
  i32.sub
  local.tee $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1056
   return
  end
  local.get $4
  i32.eqz
  local.get $1
  local.get $3
  i32.const 1
  i32.shl
  i32.eq
  i32.and
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  local.get $4
  i32.add
  local.get $2
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/scanner/makeToken (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  call $assembly/scanner/Token#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/codestring
  local.tee $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/scanner
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.load $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $0
  local.get $3
  i32.load $0 offset=4
  call $~lib/string/String#substring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  global.get $assembly/scanner/scanner
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.load16_u $0 offset=8
  i32.store16 $0 offset=8
  local.get $0
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/scanner/isAlpha (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 11648
  i32.store $0
  i32.const 11648
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.get $0
  i32.le_s
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 11680
   i32.store $0
   i32.const 11680
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $0
   i32.ge_s
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 11712
   i32.store $0
   i32.const 11712
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $0
   i32.le_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 11744
    i32.store $0
    i32.const 11744
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $0
    i32.ge_s
   else
    i32.const 0
   end
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 11776
   i32.store $0
   i32.const 11776
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $0
   i32.eq
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/isDigit (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2336
  i32.store $0
  i32.const 2336
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.get $0
  i32.le_s
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 11808
   i32.store $0
   i32.const 11808
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $0
   i32.ge_s
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1056
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/scanner/checkKeyword (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store $0
  local.get $5
  i32.const 0
  i32.store $0 offset=8
  local.get $5
  global.get $assembly/scanner/scanner
  local.tee $4
  i32.store $0
  local.get $0
  local.get $4
  i32.load $0
  i32.add
  local.set $6
  local.get $5
  local.get $4
  i32.store $0
  local.get $4
  i32.load $0 offset=4
  local.set $7
  local.get $5
  global.get $assembly/scanner/codestring
  local.tee $4
  i32.store $0
  local.get $5
  local.get $4
  local.get $6
  local.get $7
  call $~lib/string/String#substring
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/scanner
  local.tee $5
  i32.store $0
  local.get $5
  i32.load $0 offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/scanner
  local.tee $6
  i32.store $0
  local.get $0
  local.get $1
  i32.add
  local.get $5
  local.get $6
  i32.load $0
  i32.sub
  i32.eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   local.get $0
   local.get $4
   i32.store $0 offset=8
   local.get $2
   local.get $4
   call $~lib/string/String.__eq
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 19
   local.set $3
  end
  local.get $3
 )
 (func $assembly/scanner/identifierType (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $0
  global.get $assembly/scanner/codestring
  local.tee $1
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.tee $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $2
  i32.load $0
  call $~lib/string/String#charAt
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 11648
  i32.store $0
  block $folding-inner0
   block $break|0
    block $case12|0
     block $case11|0
      block $case10|0
       block $case9|0
        block $case8|0
         block $case7|0
          block $case6|0
           block $case5|0
            block $case4|0
             block $case3|0
              block $case2|0
               block $case1|0
                i32.const 11648
                i32.const 0
                call $~lib/string/String#charCodeAt
                local.get $0
                i32.ne
                if
                 global.get $~lib/memory/__stack_pointer
                 i32.const 11840
                 i32.store $0
                 i32.const 11840
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case1|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 11872
                 i32.store $0
                 i32.const 11872
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case2|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 11904
                 i32.store $0
                 i32.const 11904
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case3|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 11936
                 i32.store $0
                 i32.const 11936
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case4|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 11968
                 i32.store $0
                 i32.const 11968
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case5|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12000
                 i32.store $0
                 i32.const 12000
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case6|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12032
                 i32.store $0
                 i32.const 12032
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case7|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12064
                 i32.store $0
                 i32.const 12064
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case8|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12096
                 i32.store $0
                 i32.const 12096
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case9|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12128
                 i32.store $0
                 i32.const 12128
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case10|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12160
                 i32.store $0
                 i32.const 12160
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case11|0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12192
                 i32.store $0
                 i32.const 12192
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.eq
                 br_if $case12|0
                 br $break|0
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 12224
                i32.store $0 offset=12
                i32.const 1
                i32.const 2
                i32.const 12224
                i32.const 22
                call $assembly/scanner/checkKeyword
                local.set $0
                br $folding-inner0
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 12256
               i32.store $0 offset=12
               i32.const 1
               i32.const 4
               i32.const 12256
               i32.const 23
               call $assembly/scanner/checkKeyword
               local.set $0
               br $folding-inner0
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 12288
              i32.store $0 offset=12
              i32.const 1
              i32.const 3
              i32.const 12288
              i32.const 24
              call $assembly/scanner/checkKeyword
              local.set $0
              br $folding-inner0
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $0
             global.get $assembly/scanner/scanner
             local.tee $1
             i32.store $0
             local.get $1
             i32.load $0 offset=4
             local.set $2
             local.get $0
             local.get $1
             i32.store $0
             local.get $2
             local.get $1
             i32.load $0
             i32.sub
             i32.const 1
             i32.gt_u
             if
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              global.get $assembly/scanner/codestring
              local.tee $1
              i32.store $0
              local.get $0
              global.get $assembly/scanner/scanner
              local.tee $2
              i32.store $0 offset=4
              local.get $0
              local.get $1
              local.get $2
              i32.load $0
              i32.const 1
              i32.add
              call $~lib/string/String#charAt
              local.tee $0
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store $0
              local.get $0
              i32.const 0
              call $~lib/string/String#charCodeAt
              local.set $0
              global.get $~lib/memory/__stack_pointer
              i32.const 11648
              i32.store $0
              block $break|1
               block $case2|1
                block $case1|1
                 i32.const 11648
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 local.get $0
                 i32.ne
                 if
                  global.get $~lib/memory/__stack_pointer
                  i32.const 12000
                  i32.store $0
                  i32.const 12000
                  i32.const 0
                  call $~lib/string/String#charCodeAt
                  local.get $0
                  i32.eq
                  br_if $case1|1
                  global.get $~lib/memory/__stack_pointer
                  i32.const 12320
                  i32.store $0
                  i32.const 12320
                  i32.const 0
                  call $~lib/string/String#charCodeAt
                  local.get $0
                  i32.eq
                  br_if $case2|1
                  br $break|1
                 end
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12288
                 i32.store $0 offset=12
                 i32.const 2
                 i32.const 3
                 i32.const 12288
                 i32.const 25
                 call $assembly/scanner/checkKeyword
                 local.set $0
                 br $folding-inner0
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 12064
                i32.store $0 offset=12
                i32.const 2
                i32.const 1
                i32.const 12064
                i32.const 26
                call $assembly/scanner/checkKeyword
                local.set $0
                br $folding-inner0
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 11968
               i32.store $0 offset=12
               i32.const 2
               i32.const 1
               i32.const 11968
               i32.const 27
               call $assembly/scanner/checkKeyword
               local.set $0
               br $folding-inner0
              end
             end
             br $break|0
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 11904
            i32.store $0 offset=12
            i32.const 1
            i32.const 1
            i32.const 11904
            i32.const 28
            call $assembly/scanner/checkKeyword
            local.set $0
            br $folding-inner0
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 12352
           i32.store $0 offset=12
           i32.const 1
           i32.const 2
           i32.const 12352
           i32.const 29
           call $assembly/scanner/checkKeyword
           local.set $0
           br $folding-inner0
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12064
          i32.store $0 offset=12
          i32.const 1
          i32.const 1
          i32.const 12064
          i32.const 30
          call $assembly/scanner/checkKeyword
          local.set $0
          br $folding-inner0
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 12384
         i32.store $0 offset=12
         i32.const 1
         i32.const 4
         i32.const 12384
         i32.const 31
         call $assembly/scanner/checkKeyword
         local.set $0
         br $folding-inner0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 12416
        i32.store $0 offset=12
        i32.const 1
        i32.const 5
        i32.const 12416
        i32.const 32
        call $assembly/scanner/checkKeyword
        local.set $0
        br $folding-inner0
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12448
       i32.store $0 offset=12
       i32.const 1
       i32.const 4
       i32.const 12448
       i32.const 33
       call $assembly/scanner/checkKeyword
       local.set $0
       br $folding-inner0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      global.get $assembly/scanner/scanner
      local.tee $1
      i32.store $0
      local.get $1
      i32.load $0 offset=4
      local.set $2
      local.get $0
      local.get $1
      i32.store $0
      local.get $2
      local.get $1
      i32.load $0
      i32.sub
      i32.const 1
      i32.gt_u
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       global.get $assembly/scanner/codestring
       local.tee $1
       i32.store $0
       local.get $0
       global.get $assembly/scanner/scanner
       local.tee $2
       i32.store $0 offset=4
       local.get $0
       local.get $1
       local.get $2
       i32.load $0
       i32.const 1
       i32.add
       call $~lib/string/String#charAt
       local.tee $0
       i32.store $0 offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.const 0
       call $~lib/string/String#charCodeAt
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 12480
       i32.store $0
       block $break|2
        block $case1|2
         i32.const 12480
         i32.const 0
         call $~lib/string/String#charCodeAt
         local.get $0
         i32.ne
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 12064
          i32.store $0
          i32.const 12064
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case1|2
          br $break|2
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 12512
         i32.store $0 offset=12
         i32.const 2
         i32.const 2
         i32.const 12512
         i32.const 34
         call $assembly/scanner/checkKeyword
         local.set $0
         br $folding-inner0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 12544
        i32.store $0 offset=12
        i32.const 2
        i32.const 2
        i32.const 12544
        i32.const 35
        call $assembly/scanner/checkKeyword
        local.set $0
        br $folding-inner0
       end
      end
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12576
     i32.store $0 offset=12
     i32.const 1
     i32.const 2
     i32.const 12576
     i32.const 36
     call $assembly/scanner/checkKeyword
     local.set $0
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12608
    i32.store $0 offset=12
    i32.const 1
    i32.const 4
    i32.const 12608
    i32.const 37
    call $assembly/scanner/checkKeyword
    local.set $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 19
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/match (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $folding-inner0
   call $assembly/scanner/isAtEnd
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/scanner/codestring
   local.tee $2
   i32.store $0
   local.get $1
   global.get $assembly/scanner/scanner
   local.tee $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.load $0 offset=4
   call $~lib/string/String#charCodeAt
   local.get $0
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $assembly/scanner/scanner
   local.tee $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $1
   i32.load $0 offset=4
   i32.const 1
   i32.add
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/scanner/errorToken (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  call $assembly/scanner/Token#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 38
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/scanner
  local.tee $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load16_u $0 offset=8
  i32.store16 $0 offset=8
  local.get $2
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/scanner/scanToken (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    loop $while-continue|0
     block $__inlined_func$assembly/scanner/skipWhitespace
      call $assembly/scanner/peek
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 5856
      i32.store $0
      block $case5|1
       block $case4|1
        block $case3|1
         block $case0|1
          i32.const 5856
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case0|1
          global.get $~lib/memory/__stack_pointer
          i32.const 11488
          i32.store $0
          i32.const 11488
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case0|1
          global.get $~lib/memory/__stack_pointer
          i32.const 11520
          i32.store $0
          i32.const 11520
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case0|1
          global.get $~lib/memory/__stack_pointer
          i32.const 11552
          i32.store $0
          i32.const 11552
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case3|1
          global.get $~lib/memory/__stack_pointer
          i32.const 11584
          i32.store $0
          i32.const 11584
          i32.const 0
          call $~lib/string/String#charCodeAt
          local.get $0
          i32.eq
          br_if $case4|1
          br $case5|1
         end
         call $assembly/scanner/advance
         drop
         br $while-continue|0
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        global.get $assembly/scanner/scanner
        local.tee $1
        i32.store $0
        local.get $0
        local.get $1
        i32.store $0 offset=4
        local.get $1
        local.get $1
        i32.load16_u $0 offset=8
        i32.const 1
        i32.add
        i32.store16 $0 offset=8
        call $assembly/scanner/advance
        drop
        br $while-continue|0
       end
       call $assembly/scanner/peekNext
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 11584
       i32.store $0
       i32.const 11584
       i32.const 0
       call $~lib/string/String#charCodeAt
       local.get $0
       i32.ne
       br_if $__inlined_func$assembly/scanner/skipWhitespace
       loop $while-continue|2
        call $assembly/scanner/peek
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 11552
        i32.store $0
        i32.const 11552
        i32.const 0
        call $~lib/string/String#charCodeAt
        local.get $0
        i32.ne
        if (result i32)
         call $assembly/scanner/isAtEnd
        else
         i32.const 1
        end
        i32.eqz
        if
         call $assembly/scanner/advance
         drop
         br $while-continue|2
        end
       end
       br $while-continue|0
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/scanner/scanner
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=4
    i32.store $0
    call $assembly/scanner/isAtEnd
    if
     i32.const 39
     call $assembly/scanner/makeToken
     local.set $0
     br $folding-inner1
    end
    call $assembly/scanner/advance
    local.tee $0
    call $assembly/scanner/isAlpha
    if
     loop $while-continue|02
      call $assembly/scanner/peek
      call $assembly/scanner/isAlpha
      if (result i32)
       i32.const 1
      else
       call $assembly/scanner/peek
       call $assembly/scanner/isDigit
      end
      if
       call $assembly/scanner/advance
       drop
       br $while-continue|02
      end
     end
     call $assembly/scanner/identifierType
     call $assembly/scanner/makeToken
     local.set $0
     br $folding-inner1
    end
    local.get $0
    call $assembly/scanner/isDigit
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store $0
     loop $while-continue|05
      call $assembly/scanner/peek
      call $assembly/scanner/isDigit
      if
       call $assembly/scanner/advance
       drop
       br $while-continue|05
      end
     end
     call $assembly/scanner/peek
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12640
     i32.store $0
     i32.const 12640
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $0
     i32.eq
     if (result i32)
      call $assembly/scanner/peekNext
      call $assembly/scanner/isDigit
     else
      i32.const 0
     end
     if
      call $assembly/scanner/advance
      drop
      loop $while-continue|1
       call $assembly/scanner/peek
       call $assembly/scanner/isDigit
       if
        call $assembly/scanner/advance
        drop
        br $while-continue|1
       end
      end
     end
     i32.const 21
     call $assembly/scanner/makeToken
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12672
    i32.store $0
    block $break|0
     block $case15|0
      block $case14|0
       block $case13|0
        block $case12|0
         block $case11|0
          block $case10|0
           block $case9|0
            block $case8|0
             block $case7|0
              block $case6|0
               block $case5|0
                block $case4|0
                 block $case3|0
                  block $case2|0
                   block $case1|0
                    i32.const 12672
                    i32.const 0
                    call $~lib/string/String#charCodeAt
                    local.get $0
                    i32.ne
                    if
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12704
                     i32.store $0
                     i32.const 12704
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case1|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12736
                     i32.store $0
                     i32.const 12736
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case2|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12768
                     i32.store $0
                     i32.const 12768
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case3|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12800
                     i32.store $0
                     i32.const 12800
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case4|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12832
                     i32.store $0
                     i32.const 12832
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case5|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12640
                     i32.store $0
                     i32.const 12640
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case6|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12864
                     i32.store $0
                     i32.const 12864
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case7|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12896
                     i32.store $0
                     i32.const 12896
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case8|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 11584
                     i32.store $0
                     i32.const 11584
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case9|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12928
                     i32.store $0
                     i32.const 12928
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case10|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12960
                     i32.store $0
                     i32.const 12960
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case11|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 12992
                     i32.store $0
                     i32.const 12992
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case12|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 13024
                     i32.store $0
                     i32.const 13024
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case13|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 5584
                     i32.store $0
                     i32.const 5584
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case14|0
                     global.get $~lib/memory/__stack_pointer
                     i32.const 13056
                     i32.store $0
                     i32.const 13056
                     i32.const 0
                     call $~lib/string/String#charCodeAt
                     local.get $0
                     i32.eq
                     br_if $case15|0
                     br $break|0
                    end
                    i32.const 0
                    call $assembly/scanner/makeToken
                    local.set $0
                    br $folding-inner1
                   end
                   i32.const 1
                   call $assembly/scanner/makeToken
                   local.set $0
                   br $folding-inner1
                  end
                  i32.const 2
                  call $assembly/scanner/makeToken
                  local.set $0
                  br $folding-inner1
                 end
                 i32.const 3
                 call $assembly/scanner/makeToken
                 local.set $0
                 br $folding-inner1
                end
                i32.const 8
                call $assembly/scanner/makeToken
                local.set $0
                br $folding-inner1
               end
               i32.const 4
               call $assembly/scanner/makeToken
               local.set $0
               br $folding-inner1
              end
              i32.const 5
              call $assembly/scanner/makeToken
              local.set $0
              br $folding-inner1
             end
             i32.const 6
             call $assembly/scanner/makeToken
             local.set $0
             br $folding-inner1
            end
            i32.const 7
            call $assembly/scanner/makeToken
            local.set $0
            br $folding-inner1
           end
           i32.const 9
           call $assembly/scanner/makeToken
           local.set $0
           br $folding-inner1
          end
          i32.const 10
          call $assembly/scanner/makeToken
          local.set $0
          br $folding-inner1
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 12992
         i32.store $0
         i32.const 12
         i32.const 11
         i32.const 12992
         i32.const 0
         call $~lib/string/String#charCodeAt
         call $assembly/scanner/match
         select
         call $assembly/scanner/makeToken
         local.set $0
         br $folding-inner1
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 12992
        i32.store $0
        i32.const 14
        i32.const 13
        i32.const 12992
        i32.const 0
        call $~lib/string/String#charCodeAt
        call $assembly/scanner/match
        select
        call $assembly/scanner/makeToken
        local.set $0
        br $folding-inner1
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12992
       i32.store $0
       i32.const 18
       i32.const 17
       i32.const 12992
       i32.const 0
       call $~lib/string/String#charCodeAt
       call $assembly/scanner/match
       select
       call $assembly/scanner/makeToken
       local.set $0
       br $folding-inner1
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12992
      i32.store $0
      i32.const 16
      i32.const 15
      i32.const 12992
      i32.const 0
      call $~lib/string/String#charCodeAt
      call $assembly/scanner/match
      select
      call $assembly/scanner/makeToken
      local.set $0
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store $0
     loop $while-continue|08
      call $assembly/scanner/peek
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 13056
      i32.store $0
      i32.const 13056
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $0
      i32.ne
      if (result i32)
       call $assembly/scanner/isAtEnd
      else
       i32.const 1
      end
      i32.eqz
      if
       call $assembly/scanner/peek
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 11552
       i32.store $0
       i32.const 11552
       i32.const 0
       call $~lib/string/String#charCodeAt
       local.get $0
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        global.get $assembly/scanner/scanner
        local.tee $1
        i32.store $0
        local.get $0
        local.get $1
        i32.store $0 offset=4
        local.get $1
        local.get $1
        i32.load16_u $0 offset=8
        i32.const 1
        i32.add
        i32.store16 $0 offset=8
       end
       call $assembly/scanner/advance
       drop
       br $while-continue|08
      end
     end
     block $__inlined_func$assembly/scanner/mString (result i32)
      call $assembly/scanner/isAtEnd
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 13088
       i32.store $0
       i32.const 13088
       call $assembly/scanner/errorToken
       br $__inlined_func$assembly/scanner/mString
      end
      call $assembly/scanner/advance
      drop
      i32.const 20
      call $assembly/scanner/makeToken
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 13152
    i32.store $0
    i32.const 13152
    call $assembly/scanner/errorToken
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/index/printout (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  global.get $assembly/index/outputstring
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $2
  local.get $0
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 11552
  i32.store $0 offset=4
  local.get $0
  i32.const 11552
  call $~lib/string/String.__concat
  global.set $assembly/index/outputstring
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/errorAt (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $2
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0
  local.get $2
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  global.get $assembly/compiler/parser
  local.tee $3
  i32.store $0
  local.get $3
  i32.const 1
  i32.store8 $0 offset=9
  local.get $2
  i32.const 1056
  i32.store $0 offset=4
  local.get $2
  i32.const 1056
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.load16_u $0 offset=8
  call $~lib/util/number/utoa32
  local.tee $3
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 13296
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  i32.const 13296
  i32.const 1
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 13296
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=24
  i32.const 13296
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  i32.const 1056
  local.get $3
  call $~lib/string/String.__concat
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 39
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   local.get $0
   i32.const 13328
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.const 13328
   call $~lib/string/String.__concat
   local.tee $2
   i32.store $0 offset=4
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 38
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0
    local.get $3
    i32.const 13376
    i32.store $0 offset=12
    local.get $3
    local.get $0
    i32.store $0 offset=20
    local.get $3
    local.get $0
    i32.load $0 offset=4
    local.tee $0
    i32.store $0 offset=24
    i32.const 13376
    local.get $0
    call $~lib/string/String#concat
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $3
    local.get $2
    local.get $0
    call $~lib/string/String.__concat
    local.tee $2
    i32.store $0 offset=4
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13408
  i32.store $0
  i32.const 13408
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 13488
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=24
  i32.const 13488
  i32.const 0
  local.get $2
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 13488
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=24
  i32.const 13488
  i32.const 2
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 13488
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=12
  i32.const 13488
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 13520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=24
  i32.const 13520
  i32.const 0
  local.get $2
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 13520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=24
  i32.const 13520
  i32.const 2
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 13520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store $0 offset=12
  i32.const 13520
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 1
  i32.store8 $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/errorAtCurrent (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $assembly/compiler/errorAt
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/advance
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $0
   i32.store $0
   call $assembly/scanner/scanToken
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $assembly/compiler/parser
   local.tee $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 38
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $assembly/compiler/parser
    local.tee $1
    i32.store $0 offset=8
    local.get $0
    local.get $1
    i32.load $0
    local.tee $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.load $0 offset=4
    local.tee $0
    i32.store $0
    local.get $0
    call $assembly/compiler/errorAtCurrent
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1280
   i32.const 5776
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 1664
   i32.const 5776
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/getRule (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 11440
  i32.store $0
  i32.const 11440
  local.get $0
  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/error (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.load $0 offset=4
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $assembly/compiler/errorAt
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/check (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $0
  local.get $2
  i32.load $0
  i32.eq
  local.set $0
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/parsePrecedence (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  call $assembly/compiler/advance
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  i32.load $0
  call $assembly/compiler/getRule
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $1
  local.get $2
  i32.load $0
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 13552
   i32.store $0
   i32.const 13552
   call $assembly/compiler/error
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 1
  i32.le_s
  local.tee $2
  local.get $1
  i32.load $0
  call_indirect $0 (type $i32_=>_none)
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/compiler/parser
   local.tee $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   i32.load $0
   call $assembly/compiler/getRule
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.load $0 offset=8
   i32.le_s
   if
    call $assembly/compiler/advance
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/compiler/parser
    local.tee $3
    i32.store $0 offset=8
    local.get $1
    local.get $3
    i32.load $0 offset=4
    local.tee $3
    i32.store $0 offset=4
    local.get $3
    i32.load $0
    call $assembly/compiler/getRule
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $1
    local.get $3
    i32.load $0 offset=4
    local.tee $1
    i32.store $0 offset=16
    local.get $1
    if
     i32.const 1
     global.set $~argumentsLength
     local.get $2
     local.get $1
     i32.load $0
     call_indirect $0 (type $i32_=>_none)
    end
    br $while-continue|0
   end
  end
  local.get $2
  if (result i32)
   i32.const 13
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 13616
   i32.store $0
   i32.const 13616
   call $assembly/compiler/error
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/consume (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $0
  local.get $2
  i32.load $0
  i32.eq
  if
   call $assembly/compiler/advance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/errorAtCurrent
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/grouping (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  call $assembly/compiler/parsePrecedence
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store $0
  i32.const 1
  i32.const 13696
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/argumentList (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1
  call $assembly/compiler/check
  i32.eqz
  if
   loop $do-loop|1
    i32.const 1
    call $assembly/compiler/parsePrecedence
    local.get $0
    i32.const 255
    i32.and
    i32.const 255
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 13808
     i32.store $0
     i32.const 13808
     call $assembly/compiler/error
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    i32.const 4
    call $assembly/compiler/check
    if (result i32)
     call $assembly/compiler/advance
     i32.const 1
    else
     i32.const 0
    end
    br_if $do-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13904
  i32.store $0 offset=4
  i32.const 1
  i32.const 13904
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/currentChunk (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  global.get $assembly/compiler/current
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0
  local.get $1
  i32.load $0 offset=12
  local.set $1
  local.get $0
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/chunk/Chunk#writeChunk (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $3
   local.get $0
   i32.store $0
   local.get $4
   local.get $0
   i32.load $0
   i32.const 1
   i32.add
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $4
    local.get $3
    local.get $0
    i32.store $0
    i32.const 1
    global.set $~argumentsLength
    local.get $0
    local.get $4
    i32.const 1488
    i32.load $0
    call_indirect $0 (type $i32_=>_i32)
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    local.get $0
    i32.load $0 offset=4
    local.set $5
    i32.const 3
    global.set $~argumentsLength
    local.get $3
    local.get $4
    local.get $5
    i32.const 1632
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $0
    local.get $3
    i32.store $0 offset=8
    local.get $3
    if
     local.get $0
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=12
    local.get $3
    local.get $0
    i32.load $0 offset=12
    local.tee $5
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.store $0 offset=12
    local.get $0
    i32.load $0 offset=4
    local.set $3
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $4
    local.get $3
    i32.const 1952
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $0
    local.get $3
    i32.store $0 offset=12
    local.get $3
    if
     local.get $0
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.load $0
   local.get $1
   call $~lib/staticarray/StaticArray<u8>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=12
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store $0
   local.get $4
   local.get $1
   i32.store $0
   local.get $3
   local.get $1
   i32.load $0 offset=8
   i32.const 1
   i32.shr_u
   i32.ge_u
   if
    i32.const 1280
    i32.const 1888
    i32.const 605
    i32.const 64
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   local.get $2
   i32.store16 $0
   local.get $4
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0
   i32.const 1
   i32.add
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/emitByte (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  call $assembly/compiler/currentChunk
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  local.get $2
  i32.load16_u $0 offset=8
  call $assembly/chunk/Chunk#writeChunk
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store $0
   local.get $6
   i32.const 0
   i32.store $0 offset=8
   local.get $6
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $3
   local.get $6
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $0
   local.get $6
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i64.const 0
   i64.store $0 offset=8
   local.get $4
   i32.const 16
   i32.const 48
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0 offset=4
   local.get $4
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   local.get $7
   i32.store $0 offset=4
   local.get $7
   i32.const 0
   i32.store $0 offset=12
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1520
    i32.const 5776
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $8
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $7
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $7
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $8
   i32.store $0 offset=8
   local.get $5
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $0
   i32.store $0 offset=12
   local.get $5
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   local.get $7
   i32.store $0 offset=4
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $3
     local.get $2
     i32.const 12
     i32.mul
     i32.add
     local.tee $4
     i32.load $0 offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $7
      i32.store $0
      local.get $5
      local.get $4
      i32.load $0
      local.tee $4
      i32.store $0 offset=8
      local.get $7
      local.get $1
      local.get $4
      call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $7
   i32.store $0
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   local.get $7
   local.get $1
   i32.const 0
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<assembly/object/ObjString>#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/table/tableFindString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $4
  i32.const 14112
  i32.store $0 offset=4
  local.get $4
  local.get $1
  i32.store $0 offset=8
  i32.const 14112
  local.get $1
  call $~lib/string/String#concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys
  local.tee $0
  i32.store $0 offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<assembly/object/ObjString>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=16
    local.get $0
    local.get $2
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load $0 offset=12
    local.tee $4
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $4
    local.get $1
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 14160
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=20
     local.get $0
     local.get $2
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load $0 offset=12
     local.tee $3
     i32.store $0 offset=8
     i32.const 14160
     local.get $3
     call $~lib/string/String#concat
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $assembly/index/debugLog
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $2
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.tee $3
     i32.store $0 offset=24
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/object/ALLOCATE_OBJ (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 0
  call $assembly/object/Obj#constructor
  local.tee $1
  i32.store $0
  block $break|0
   block $case1|0
    local.get $0
    i32.const 6
    i32.ne
    if
     local.get $0
     i32.const 7
     i32.eq
     br_if $case1|0
     br $break|0
    end
    global.get $~lib/memory/__stack_pointer
    call $assembly/object/ObjString#constructor
    local.tee $1
    i32.store $0
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   call $assembly/object/ObjUpvalue#constructor
   local.tee $1
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  global.get $assembly/vm/vm
  local.tee $2
  i32.store $0 offset=12
  local.get $0
  local.get $2
  i32.load $0 offset=32
  local.tee $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  global.get $assembly/vm/vm
  local.tee $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=32
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 5440
   i32.const 284
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/value/NIL_VAL (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  call $assembly/value/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load $0 offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load $0
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $8
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  i32.load $0 offset=8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $9
  local.get $0
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $5
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $5
   local.get $9
   i32.ne
   if
    local.get $9
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $9
     i32.load $0
     local.tee $10
     i32.store $0 offset=12
     local.get $7
     local.get $10
     i32.store $0 offset=16
     local.get $2
     local.get $10
     i32.store $0
     local.get $7
     local.get $9
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=16
     local.get $2
     local.get $4
     i32.store $0 offset=4
     local.get $7
     local.get $10
     i32.store $0 offset=8
     local.get $2
     local.get $8
     local.get $1
     local.get $10
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $4
     i32.const 15
     i32.shr_u
     local.get $4
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $4
     i32.const 13
     i32.shr_u
     local.get $4
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $4
     i32.const 16
     i32.shr_u
     local.get $4
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load $0
     i32.store $0 offset=8
     local.get $4
     local.get $2
     i32.store $0
     local.get $2
     i32.const 12
     i32.add
     local.set $2
    end
    local.get $9
    i32.const 12
    i32.add
    local.set $9
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $8
  i32.store $0 offset=16
  local.get $0
  local.get $8
  i32.store $0
  local.get $8
  if
   local.get $0
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $0
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $6
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $0
  local.get $0
  i32.load $0 offset=20
  i32.store $0 offset=16
  local.get $1
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $3
  i32.const 15
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $3
  i32.const 13
  i32.shr_u
  local.get $3
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $3
  i32.const 16
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $4
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  local.tee $3
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $5
   local.get $3
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=12
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=20
    local.set $5
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $5
    local.get $0
    i32.load $0 offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=16
   local.tee $6
   i32.const 1
   i32.add
   i32.store $0 offset=16
   local.get $5
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $6
   i32.const 12
   i32.mul
   i32.add
   local.tee $3
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=20
   i32.const 1
   i32.add
   i32.store $0 offset=20
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $2
   local.get $1
   local.get $0
   i32.store $0
   local.get $3
   local.get $2
   local.get $4
   local.get $0
   i32.load $0 offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load $0
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/table/tableSet (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  i32.eqz
 )
 (func $assembly/object/allocateString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  block $__inlined_func$~instanceof|assembly/object/ObjString (result i32)
   local.get $2
   i32.const 6
   call $assembly/object/ALLOCATE_OBJ
   local.tee $1
   i32.store $0
   i32.const 0
   local.get $1
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 15
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjString
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 258
   i32.const 51
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  global.get $assembly/vm/vm
  local.tee $2
  i32.store $0 offset=20
  local.get $0
  local.get $2
  i32.load $0 offset=20
  local.tee $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=12
  call $assembly/value/NIL_VAL
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $2
  local.get $1
  local.get $0
  call $assembly/table/tableSet
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/object/copyString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   global.get $assembly/vm/vm
   local.tee $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.load $0 offset=20
   local.tee $3
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $3
   local.get $0
   call $assembly/table/tableFindString
   local.tee $2
   i32.store $0 offset=12
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 14192
    i32.store $0
    i32.const 14192
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 2147483647
    local.set $1
   end
   block $__inlined_func$~lib/string/String#slice (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store $0
    local.get $3
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    local.tee $3
    local.get $1
    local.get $3
    i32.lt_s
    select
    local.tee $1
    i32.const 0
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1056
     br $__inlined_func$~lib/string/String#slice
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 1
    i32.shl
    local.tee $1
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0 offset=4
    local.get $3
    local.get $0
    local.get $1
    memory.copy $0 $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/object/allocateString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/value/OBJ_VAL (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  call $assembly/value/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/makeConstant (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   call $assembly/compiler/currentChunk
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.load $0 offset=16
   local.tee $1
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.set $4
   local.get $3
   local.get $1
   i32.store $0
   local.get $4
   local.get $1
   i32.load $0
   i32.const 1
   i32.add
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0 offset=4
    local.set $4
    local.get $3
    local.get $1
    i32.store $0
    i32.const 1
    global.set $~argumentsLength
    local.get $1
    local.get $4
    i32.const 1488
    i32.load $0
    call_indirect $0 (type $i32_=>_i32)
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load $0 offset=8
    local.tee $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=12
    local.get $1
    i32.load $0 offset=4
    local.set $5
    i32.const 3
    global.set $~argumentsLength
    local.get $3
    local.get $4
    local.get $5
    i32.const 1792
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $1
    local.get $3
    i32.store $0 offset=8
    local.get $3
    if
     local.get $1
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.load $0 offset=8
   local.tee $4
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.load $0
   local.set $5
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $5
   local.get $0
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $1
   i32.load $0
   i32.const 1
   i32.add
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.load $0 offset=16
   local.tee $1
   i32.store $0
   local.get $1
   i32.load $0
   i32.const 1
   i32.sub
   local.set $1
   local.get $0
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   i32.const 255
   i32.and
   i32.const 255
   i32.gt_u
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 14288
    i32.store $0
    i32.const 14288
    call $assembly/compiler/error
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/identifierConstant (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/object/copyString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/value/OBJ_VAL
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/makeConstant
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/dot (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 14016
  i32.store $0
  i32.const 19
  i32.const 14016
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/identifierConstant
  local.set $1
  local.get $0
  if (result i32)
   i32.const 13
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   i32.const 1
   call $assembly/compiler/parsePrecedence
   i32.const 13
   call $assembly/compiler/emitByte
   local.get $1
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
  else
   i32.const 0
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
   if
    call $assembly/compiler/argumentList
    local.set $0
    i32.const 29
    call $assembly/compiler/emitByte
    local.get $1
    i32.const 255
    i32.and
    call $assembly/compiler/emitByte
    local.get $0
    i32.const 255
    i32.and
    call $assembly/compiler/emitByte
   else
    i32.const 12
    call $assembly/compiler/emitByte
    local.get $1
    i32.const 255
    i32.and
    call $assembly/compiler/emitByte
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/unary (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/compiler/parser
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  i32.const 8
  call $assembly/compiler/parsePrecedence
  block $break|0
   block $case2|0
    block $case1|0
     local.get $0
     i32.const 11
     i32.ne
     if
      local.get $0
      i32.const 6
      i32.eq
      br_if $case1|0
      br $case2|0
     end
     i32.const 22
     call $assembly/compiler/emitByte
     br $break|0
    end
    i32.const 23
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/binary (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.load $0
  local.tee $0
  call $assembly/compiler/getRule
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=8
  i32.const 1
  i32.add
  call $assembly/compiler/parsePrecedence
  block $break|0
   block $case10|0
    block $case9|0
     block $case8|0
      block $case7|0
       block $case6|0
        block $case5|0
         block $case4|0
          block $case3|0
           block $case2|0
            block $case1|0
             block $case0|0
              local.get $0
              i32.const 6
              i32.sub
              br_table $case7|0 $case6|0 $case10|0 $case9|0 $case8|0 $case10|0 $case0|0 $case10|0 $case1|0 $case2|0 $case3|0 $case4|0 $case5|0 $case10|0
             end
             i32.const 15
             call $assembly/compiler/emitByte
             i32.const 22
             call $assembly/compiler/emitByte
             br $break|0
            end
            i32.const 15
            call $assembly/compiler/emitByte
            br $break|0
           end
           i32.const 16
           call $assembly/compiler/emitByte
           br $break|0
          end
          i32.const 17
          call $assembly/compiler/emitByte
          i32.const 22
          call $assembly/compiler/emitByte
          br $break|0
         end
         i32.const 17
         call $assembly/compiler/emitByte
         br $break|0
        end
        i32.const 16
        call $assembly/compiler/emitByte
        i32.const 22
        call $assembly/compiler/emitByte
        br $break|0
       end
       i32.const 18
       call $assembly/compiler/emitByte
       br $break|0
      end
      i32.const 19
      call $assembly/compiler/emitByte
      br $break|0
     end
     i32.const 20
     call $assembly/compiler/emitByte
     br $break|0
    end
    i32.const 21
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/identifiersEqual (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/resolveLocal (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=16
  i32.const 1
  i32.sub
  local.set $2
  loop $for-loop|0
   local.get $2
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=12
    local.tee $4
    i32.store $0
    local.get $3
    local.get $4
    local.get $2
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.tee $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0
    local.tee $4
    i32.store $0 offset=4
    local.get $1
    local.get $4
    call $assembly/compiler/identifiersEqual
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.load $0 offset=4
     i32.const -1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 14480
      i32.store $0
      i32.const 14480
      call $assembly/compiler/error
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $assembly/compiler/addUpvalue (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $4
  i32.const 3952
  i32.const 3984
  local.get $2
  select
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.load $0 offset=4
  local.tee $4
  i32.store $0 offset=4
  local.get $4
  i32.load8_u $0 offset=9
  local.set $4
  loop $for-loop|0
   local.get $3
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=8
    local.get $6
    local.get $0
    i32.load $0 offset=20
    local.tee $5
    i32.store $0 offset=4
    local.get $6
    local.get $5
    local.get $3
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.tee $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.load8_u $0
    local.get $1
    i32.const 255
    i32.and
    i32.eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     i32.load8_u $0 offset=1
     i32.const 0
     i32.ne
     local.get $2
     i32.const 0
     i32.ne
     i32.eq
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=16
  local.get $3
  local.get $0
  i32.load $0 offset=20
  local.tee $3
  i32.store $0 offset=4
  call $assembly/compiler/Upvalue#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $3
  local.get $4
  local.get $5
  call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=20
  local.tee $3
  i32.store $0 offset=8
  local.get $3
  local.get $4
  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store8 $0 offset=1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  local.get $4
  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load8_u $0 offset=9
  local.tee $0
  i32.const 1
  i32.add
  i32.store8 $0 offset=9
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/resolveUpvalue (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  block $folding-inner1
   local.get $0
   i32.load $0
   i32.eqz
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=12
   local.get $2
   i32.eqz
   if
    i32.const 5184
    i32.const 14608
    i32.const 655
    i32.const 47
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   block $folding-inner0
    local.get $2
    local.get $1
    call $assembly/compiler/resolveLocal
    local.tee $2
    i32.const -1
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 14672
     i32.store $0 offset=4
     local.get $3
     local.get $1
     i32.store $0 offset=16
     local.get $3
     local.get $1
     i32.load $0 offset=4
     local.tee $1
     i32.store $0 offset=8
     i32.const 14672
     local.get $1
     call $~lib/string/String.__concat
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $assembly/index/debugLog
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $1
     i32.store $0 offset=20
     local.get $1
     i32.eqz
     if
      i32.const 5184
      i32.const 14608
      i32.const 658
      i32.const 20
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $1
     i32.store $0 offset=8
     local.get $3
     local.get $1
     i32.load $0 offset=12
     local.tee $1
     i32.store $0 offset=4
     local.get $1
     local.get $2
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     i32.const 1
     i32.store8 $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $2
     i32.const 1
     call $assembly/compiler/addUpvalue
     local.set $0
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.load $0
    local.tee $2
    i32.store $0 offset=24
    local.get $2
    i32.eqz
    if
     i32.const 5184
     i32.const 14608
     i32.const 663
     i32.const 51
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/compiler/resolveUpvalue
    local.tee $2
    i32.const -1
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 14864
     i32.store $0 offset=4
     local.get $3
     local.get $1
     i32.store $0 offset=16
     local.get $3
     local.get $1
     i32.load $0 offset=4
     local.tee $1
     i32.store $0 offset=8
     i32.const 14864
     local.get $1
     call $~lib/string/String.__concat
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $assembly/index/debugLog
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $2
     i32.const 0
     call $assembly/compiler/addUpvalue
     local.set $0
     br $folding-inner0
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $assembly/compiler/namedVariable (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/compiler/current
  local.tee $3
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $0
  call $assembly/compiler/resolveLocal
  local.tee $2
  i32.const -1
  i32.ne
  if (result i32)
   i32.const 6
   local.set $0
   i32.const 5
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   global.get $assembly/compiler/current
   local.tee $3
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   call $assembly/compiler/resolveUpvalue
   local.tee $2
   i32.const -1
   i32.ne
   if (result i32)
    i32.const 11
    local.set $0
    i32.const 10
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/compiler/identifierConstant
    i32.const 255
    i32.and
    local.set $2
    i32.const 9
    local.set $0
    i32.const 7
   end
  end
  local.set $3
  local.get $1
  if (result i32)
   i32.const 13
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   i32.const 1
   call $assembly/compiler/parsePrecedence
   local.get $0
   call $assembly/compiler/emitByte
  else
   local.get $3
   call $assembly/compiler/emitByte
  end
  local.get $2
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/variable (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0
  local.get $1
  local.get $0
  call $assembly/compiler/namedVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitConstant (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/makeConstant
  i32.const 255
  i32.and
  local.set $0
  i32.const 0
  call $assembly/compiler/emitByte
  local.get $0
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/mString (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $0
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.load $0 offset=4
  local.tee $2
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.const 1
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.sub
  call $~lib/string/String#substring
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/object/copyString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/value/OBJ_VAL
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/emitConstant
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 f64)
  (local $9 i32)
  (local $10 f64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.eqz
    br_if $folding-inner0
    local.get $0
    i32.load16_u $0
    local.set $4
    f64.const 1
    local.set $10
    loop $while-continue|0
     local.get $5
     if (result i32)
      block $__inlined_func$~lib/util/string/isSpace (result i32)
       local.get $4
       i32.const 128
       i32.or
       i32.const 160
       i32.eq
       local.get $4
       i32.const 9
       i32.sub
       i32.const 4
       i32.le_u
       i32.or
       local.get $4
       i32.const 5760
       i32.lt_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       i32.const 1
       local.get $4
       i32.const -8192
       i32.add
       i32.const 10
       i32.le_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       block $break|0
        block $case0|0
         local.get $4
         i32.const 5760
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8232
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8233
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8239
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 8287
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 12288
         i32.eq
         br_if $case0|0
         local.get $4
         i32.const 65279
         i32.eq
         br_if $case0|0
         br $break|0
        end
        i32.const 1
        br $__inlined_func$~lib/util/string/isSpace
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|0
     end
    end
    local.get $5
    i32.eqz
    br_if $folding-inner0
    local.get $4
    i32.const 45
    i32.eq
    if (result i32)
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     br_if $folding-inner0
     f64.const -1
     local.set $10
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u $0
    else
     local.get $4
     i32.const 43
     i32.eq
     if (result i32)
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $folding-inner0
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
     else
      local.get $4
     end
    end
    local.tee $4
    i32.const 73
    i32.eq
    local.get $5
    i32.const 8
    i32.ge_s
    i32.and
    if
     local.get $0
     i64.load $0
     i64.const 29555310648492105
     i64.eq
     if (result i32)
      local.get $0
      i64.load $0 offset=8
      i64.const 34058970405077102
      i64.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $10
      f64.const inf
      f64.mul
      return
     end
     br $folding-inner0
    end
    local.get $4
    i32.const 46
    i32.ne
    local.get $4
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
    i32.and
    br_if $folding-inner0
    local.get $0
    local.set $3
    loop $while-continue|1
     local.get $4
     i32.const 48
     i32.eq
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|1
     end
    end
    local.get $5
    i32.const 0
    i32.le_s
    br_if $folding-inner1
    local.get $4
    i32.const 46
    i32.eq
    if
     local.get $0
     local.get $3
     i32.eq
     local.set $3
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     local.get $3
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     i32.and
     br_if $folding-inner0
     i32.const 1
     local.set $9
     loop $for-loop|2
      local.get $0
      i32.load16_u $0
      local.tee $4
      i32.const 48
      i32.eq
      if
       local.get $5
       i32.const 1
       i32.sub
       local.set $5
       local.get $2
       i32.const 1
       i32.sub
       local.set $2
       local.get $0
       i32.const 2
       i32.add
       local.set $0
       br $for-loop|2
      end
     end
     local.get $5
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     local.get $3
     local.get $2
     i32.eqz
     i32.and
     local.get $4
     i32.const 48
     i32.sub
     i32.const 10
     i32.ge_u
     i32.and
     br_if $folding-inner0
    end
    local.get $4
    i32.const 48
    i32.sub
    local.set $3
    loop $for-loop|3
     local.get $9
     i32.eqz
     local.get $4
     i32.const 46
     i32.eq
     i32.and
     local.get $3
     i32.const 10
     i32.lt_u
     i32.or
     if
      block $for-break3
       local.get $3
       i32.const 10
       i32.lt_u
       if
        local.get $1
        i32.const 19
        i32.lt_s
        if (result i64)
         local.get $3
         i64.extend_i32_u
         local.get $6
         i64.const 10
         i64.mul
         i64.add
        else
         local.get $6
         local.get $3
         i32.const 0
         i32.ne
         i64.extend_i32_u
         i64.or
        end
        local.set $6
        local.get $1
        i32.const 1
        i32.add
        local.set $1
       else
        local.get $1
        local.set $2
        i32.const 1
        local.set $9
       end
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $for-break3
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
       local.tee $4
       i32.const 48
       i32.sub
       local.set $3
       br $for-loop|3
      end
     end
    end
    block $~lib/util/string/scientific|inlined.0
     local.get $6
     i64.eqz
     local.get $2
     local.get $1
     local.get $9
     select
     i32.const 19
     local.get $1
     local.get $1
     i32.const 19
     i32.gt_s
     select
     i32.sub
     block $~lib/util/string/parseExp|inlined.0 (result i32)
      i32.const 1
      local.set $9
      i32.const 0
      local.set $3
      i32.const 0
      local.get $0
      i32.load16_u $0
      i32.const 32
      i32.or
      i32.const 101
      i32.ne
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      i32.const 0
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.tee $1
      i32.const 45
      i32.eq
      if (result i32)
       i32.const 0
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       i32.const -1
       local.set $9
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
      else
       local.get $1
       i32.const 43
       i32.eq
       if (result i32)
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
       else
        local.get $1
       end
      end
      local.set $4
      loop $while-continue|4
       local.get $4
       i32.const 48
       i32.eq
       if
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        local.set $4
        br $while-continue|4
       end
      end
      local.get $4
      i32.const 48
      i32.sub
      local.set $4
      loop $for-loop|5
       local.get $4
       i32.const 10
       i32.lt_u
       i32.const 0
       local.get $5
       select
       if
        local.get $9
        i32.const 3200
        i32.mul
        local.get $3
        i32.const 3200
        i32.ge_s
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $3
        i32.const 10
        i32.mul
        local.get $4
        i32.add
        local.set $3
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        i32.const 48
        i32.sub
        local.set $4
        br $for-loop|5
       end
      end
      local.get $3
      local.get $9
      i32.mul
     end
     i32.add
     local.tee $0
     i32.const -342
     i32.lt_s
     i32.or
     br_if $~lib/util/string/scientific|inlined.0
     f64.const inf
     local.set $8
     local.get $0
     i32.const 308
     i32.gt_s
     br_if $~lib/util/string/scientific|inlined.0
     local.get $6
     f64.convert_i64_u
     local.set $8
     local.get $0
     i32.eqz
     br_if $~lib/util/string/scientific|inlined.0
     local.get $0
     i32.const 37
     i32.le_s
     local.get $0
     i32.const 22
     i32.gt_s
     i32.and
     if
      local.get $8
      local.get $0
      i32.const 3
      i32.shl
      i32.const 14832
      i32.add
      f64.load $0
      f64.mul
      local.set $8
      i32.const 22
      local.set $0
     end
     local.get $6
     i64.const 9007199254740991
     i64.le_u
     if (result i32)
      local.get $0
      i32.const 31
      i32.shr_s
      local.tee $1
      local.get $0
      local.get $1
      i32.add
      i32.xor
      i32.const 22
      i32.le_s
     else
      i32.const 0
     end
     if (result f64)
      local.get $0
      i32.const 0
      i32.gt_s
      if
       local.get $8
       local.get $0
       i32.const 3
       i32.shl
       i32.const 15008
       i32.add
       f64.load $0
       f64.mul
       local.set $8
       br $~lib/util/string/scientific|inlined.0
      end
      local.get $8
      i32.const 0
      local.get $0
      i32.sub
      i32.const 3
      i32.shl
      i32.const 15008
      i32.add
      f64.load $0
      f64.div
     else
      local.get $0
      i32.const 0
      i32.lt_s
      if (result f64)
       local.get $6
       local.get $6
       i64.clz
       local.tee $7
       i64.shl
       local.set $6
       local.get $0
       i64.extend_i32_s
       local.get $7
       i64.sub
       local.set $7
       loop $for-loop|6
        local.get $0
        i32.const -14
        i32.le_s
        if
         local.get $6
         i64.const 6103515625
         i64.rem_u
         local.get $6
         i64.const 6103515625
         i64.div_u
         local.tee $6
         i64.clz
         local.tee $11
         i64.const 18
         i64.sub
         i64.shl
         f64.convert_i64_u
         f64.const 0.00004294967296
         f64.mul
         f64.nearest
         i64.trunc_sat_f64_u
         local.get $6
         local.get $11
         i64.shl
         i64.add
         local.set $6
         local.get $7
         local.get $11
         i64.sub
         local.set $7
         local.get $0
         i32.const 14
         i32.add
         local.set $0
         br $for-loop|6
        end
       end
       local.get $6
       i32.const 0
       local.get $0
       i32.sub
       call $~lib/math/ipow32
       i64.extend_i32_s
       local.tee $12
       i64.div_u
       local.tee $13
       i64.clz
       local.set $11
       local.get $6
       local.get $12
       i64.rem_u
       f64.convert_i64_u
       i64.reinterpret_f64
       local.get $11
       i64.const 52
       i64.shl
       i64.add
       f64.reinterpret_i64
       local.get $12
       f64.convert_i64_u
       f64.div
       i64.trunc_sat_f64_u
       local.get $13
       local.get $11
       i64.shl
       i64.add
       f64.convert_i64_u
       local.get $7
       local.get $11
       i64.sub
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      else
       local.get $6
       local.get $6
       i64.ctz
       local.tee $7
       i64.shr_u
       local.set $6
       local.get $7
       local.get $0
       i64.extend_i32_s
       i64.add
       global.set $~lib/util/string/__fixmulShift
       loop $for-loop|7
        local.get $0
        i32.const 13
        i32.ge_s
        if
         i64.const 32
         local.get $6
         i64.const 32
         i64.shr_u
         i64.const 1220703125
         i64.mul
         local.get $6
         i64.const 4294967295
         i64.and
         i64.const 1220703125
         i64.mul
         local.tee $6
         i64.const 32
         i64.shr_u
         i64.add
         local.tee $7
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         i32.clz
         i64.extend_i32_u
         local.tee $11
         i64.sub
         local.tee $12
         global.get $~lib/util/string/__fixmulShift
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $6
         local.get $11
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         local.get $7
         local.get $11
         i64.shl
         local.get $6
         i64.const 4294967295
         i64.and
         local.get $12
         i64.shr_u
         i64.or
         i64.add
         local.set $6
         local.get $0
         i32.const 13
         i32.sub
         local.set $0
         br $for-loop|7
        end
       end
       local.get $0
       call $~lib/math/ipow32
       i64.extend_i32_u
       local.tee $7
       local.get $6
       i64.const 4294967295
       i64.and
       i64.mul
       local.set $11
       i64.const 32
       local.get $6
       i64.const 32
       i64.shr_u
       local.get $7
       i64.mul
       local.get $11
       i64.const 32
       i64.shr_u
       i64.add
       local.tee $6
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       i32.clz
       i64.extend_i32_u
       local.tee $7
       i64.sub
       local.tee $12
       global.get $~lib/util/string/__fixmulShift
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $11
       local.get $7
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       local.get $6
       local.get $7
       i64.shl
       local.get $11
       i64.const 4294967295
       i64.and
       local.get $12
       i64.shr_u
       i64.or
       i64.add
       f64.convert_i64_u
       global.get $~lib/util/string/__fixmulShift
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      end
     end
     local.set $8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $8
    local.get $10
    f64.copysign
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  f64.const 0
  f64.mul
 )
 (func $assembly/value/NUMBER_VAL (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  call $assembly/value/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  f64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/number (param $0 i32)
  (local $1 f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   global.get $assembly/compiler/parser
   local.tee $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.load $0 offset=4
   local.tee $2
   i32.store $0
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store $0
   local.get $0
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/util/string/strtod
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/value/NUMBER_VAL
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/compiler/emitConstant
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/emitJump (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  i32.const 255
  call $assembly/compiler/emitByte
  i32.const 255
  call $assembly/compiler/emitByte
  call $assembly/compiler/currentChunk
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 2
  i32.sub
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/patchJump (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/compiler/currentChunk
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0
  local.get $0
  i32.sub
  i32.const 2
  i32.sub
  local.tee $1
  i32.const 65535
  i32.and
  i32.const 65535
  i32.gt_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 15248
   i32.store $0
   i32.const 15248
   call $assembly/compiler/error
  end
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  local.get $0
  local.get $1
  i32.const 8
  i32.shr_s
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<u8>#__set
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  local.get $0
  i32.const 1
  i32.add
  local.get $1
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<u8>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/literal (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/compiler/parser
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0
  block $break|0
   block $case3|0
    block $case2|0
     block $case1|0
      local.get $0
      i32.load $0
      local.tee $0
      i32.const 25
      i32.ne
      if
       local.get $0
       i32.const 29
       i32.eq
       br_if $case1|0
       local.get $0
       i32.const 35
       i32.eq
       br_if $case2|0
       br $case3|0
      end
      i32.const 3
      call $assembly/compiler/emitByte
      br $break|0
     end
     i32.const 1
     call $assembly/compiler/emitByte
     br $break|0
    end
    i32.const 2
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/syntheticToken (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  call $assembly/scanner/Token#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/super_ (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/currentClass
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/currentClass
   local.tee $0
   i32.store $0 offset=4
   local.get $0
   i32.eqz
   if
    i32.const 5184
    i32.const 14608
    i32.const 491
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=4
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 15520
    i32.store $0
    i32.const 15520
    call $assembly/compiler/error
   end
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 15424
   i32.store $0
   i32.const 15424
   call $assembly/compiler/error
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15648
  i32.store $0 offset=8
  i32.const 5
  i32.const 15648
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 15728
  i32.store $0 offset=8
  i32.const 19
  i32.const 15728
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/compiler/identifierConstant
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 15808
  i32.store $0 offset=8
  i32.const 15808
  call $assembly/compiler/syntheticToken
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $assembly/compiler/namedVariable
  i32.const 0
  call $assembly/compiler/check
  if (result i32)
   call $assembly/compiler/advance
   i32.const 1
  else
   i32.const 0
  end
  if
   call $assembly/compiler/argumentList
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 15840
   i32.store $0 offset=8
   i32.const 15840
   call $assembly/compiler/syntheticToken
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $assembly/compiler/namedVariable
   i32.const 30
   call $assembly/compiler/emitByte
   local.get $0
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
   local.get $2
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 15840
   i32.store $0 offset=8
   i32.const 15840
   call $assembly/compiler/syntheticToken
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $assembly/compiler/namedVariable
   i32.const 14
   call $assembly/compiler/emitByte
   local.get $0
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/this_ (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/compiler/currentClass
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 15904
   i32.store $0
   i32.const 15904
   call $assembly/compiler/error
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 0
  call $assembly/compiler/variable
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/compiler
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 10
   i32.const 36
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store16 $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/scanner/scanner
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 10
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   call $assembly/scanner/Token#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   call $assembly/scanner/Token#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store8 $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store8 $0 offset=9
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/compiler/parser
   call $assembly/compiler/Compiler#constructor
   global.set $assembly/compiler/current
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13776
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 13984
   i32.store $0 offset=12
   i32.const 13776
   i32.const 13984
   i32.const 9
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 0
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 1
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 2
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 3
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 4
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14384
   i32.store $0 offset=12
   i32.const 0
   i32.const 14384
   i32.const 9
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 5
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14416
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 14416
   i32.const 14448
   i32.const 6
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 6
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 6
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 7
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 8
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 7
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 9
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 7
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 10
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14416
   i32.store $0 offset=8
   i32.const 14416
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 11
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 4
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 12
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 13
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 4
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 14
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 5
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 15
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 5
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 16
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 5
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 17
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=12
   i32.const 0
   i32.const 14448
   i32.const 5
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 18
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14960
   i32.store $0 offset=8
   i32.const 14960
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 19
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14992
   i32.store $0 offset=8
   i32.const 14992
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 20
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15216
   i32.store $0 offset=8
   i32.const 15216
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 21
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15328
   i32.store $0 offset=12
   i32.const 0
   i32.const 15328
   i32.const 3
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 22
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 23
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 24
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15360
   i32.store $0 offset=8
   i32.const 15360
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 25
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 26
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 27
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 28
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15360
   i32.store $0 offset=8
   i32.const 15360
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 29
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15392
   i32.store $0 offset=12
   i32.const 0
   i32.const 15392
   i32.const 2
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 30
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 31
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 32
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15872
   i32.store $0 offset=8
   i32.const 15872
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 33
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16000
   i32.store $0 offset=8
   i32.const 16000
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 34
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15360
   i32.store $0 offset=8
   i32.const 15360
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 35
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 36
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 37
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 38
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 11440
   i32.store $0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/compiler/ParseRule#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 11440
   i32.const 39
   local.get $0
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/index/setDebugFlag (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 0
  i32.ne
  global.set $assembly/index/debugFlag
  local.get $1
  i32.const 16032
  i32.store $0 offset=4
  local.get $1
  i32.const 3952
  i32.const 3984
  local.get $0
  select
  local.tee $0
  i32.store $0 offset=8
  i32.const 16032
  local.get $0
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/resetStack
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  global.get $assembly/vm/vm
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=32
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=28
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/push (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  global.get $assembly/vm/vm
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $3
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.load $0 offset=12
  local.set $2
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $2
  local.get $0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.tee $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.add
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/object/AS_STRING (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|assembly/object/ObjString (result i32)
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/value/AS_OBJ
   local.tee $0
   i32.store $0 offset=4
   i32.const 0
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 15
   i32.ne
   br_if $__inlined_func$~instanceof|assembly/object/ObjString
   drop
   i32.const 1
  end
  i32.eqz
  if
   i32.const 5376
   i32.const 5440
   i32.const 195
   i32.const 23
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/pop (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  global.get $assembly/vm/vm
  local.tee $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  i32.store $0 offset=12
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.load $0 offset=8
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.load $0 offset=12
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/scanner/initScanner (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  global.get $assembly/scanner/scanner
  local.tee $1
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.const 1
  i32.store16 $0 offset=8
  local.get $0
  global.set $assembly/scanner/codestring
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/initCompiler (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $1
  i32.const 3
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16528
   i32.store $0
   i32.const 16528
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   i32.store $0
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   global.get $assembly/compiler/current
   local.tee $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  local.get $0
  i32.store $0
  call $assembly/object/ObjFunction#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=4
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  global.set $assembly/compiler/current
  local.get $1
  i32.const 3
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $assembly/compiler/current
   local.tee $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0 offset=4
   local.tee $2
   i32.store $0
   local.get $0
   global.get $assembly/compiler/parser
   local.tee $3
   i32.store $0 offset=16
   local.get $0
   local.get $3
   i32.load $0 offset=4
   local.tee $3
   i32.store $0 offset=12
   local.get $0
   local.get $3
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=8
   local.get $0
   call $assembly/object/copyString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $assembly/compiler/current
   local.tee $2
   i32.store $0 offset=12
   local.get $0
   local.get $2
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0 offset=16
   local.tee $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=20
   local.get $0
   i32.const 16736
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=12
   i32.const 16736
   i32.const 1
   local.get $2
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16736
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 1056
   i32.store $0 offset=8
   i32.const 16736
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/index/debugLog
  end
  global.get $~lib/memory/__stack_pointer
  call $assembly/compiler/Local#constructor
  local.tee $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=12
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.load $0 offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $2
  local.get $0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $3
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.load $0 offset=16
  i32.const 1
  i32.add
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store8 $0 offset=8
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 15808
   i32.store $0 offset=4
   local.get $0
   i32.const 15808
   i32.store $0 offset=4
   local.get $0
   i32.const 15808
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 1056
   i32.store $0 offset=4
   local.get $0
   i32.const 1056
   i32.store $0 offset=4
   local.get $0
   i32.const 1056
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/addLocal (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   global.get $assembly/compiler/current
   local.tee $2
   i32.store $0
   local.get $2
   i32.load $0 offset=16
   i32.const 256
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16960
    i32.store $0
    i32.const 16960
    call $assembly/compiler/error
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   call $assembly/compiler/Local#constructor
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0 offset=12
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.load $0 offset=16
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $3
   local.get $2
   call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $4
   i32.store $0 offset=12
   local.get $3
   local.get $4
   i32.load $0 offset=16
   i32.const 1
   i32.add
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   local.get $2
   i32.const -1
   i32.store $0 offset=4
   local.get $0
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $0
   i32.const 17056
   i32.store $0
   i32.const 17056
   call $assembly/index/debugLog
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0 offset=16
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     global.get $assembly/compiler/current
     local.tee $2
     i32.store $0 offset=16
     local.get $0
     local.get $2
     i32.load $0 offset=12
     local.tee $2
     i32.store $0 offset=12
     local.get $2
     local.get $1
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0
     local.tee $2
     i32.store $0 offset=4
     local.get $0
     local.get $2
     i32.load $0 offset=4
     local.tee $0
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.set $2
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/compiler/current
     local.tee $3
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load $0 offset=12
     local.tee $3
     i32.store $0 offset=8
     local.get $3
     local.get $1
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $2
     local.get $3
     i32.load $0 offset=4
     call $~lib/number/I32#toString
     local.tee $2
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     i32.const 17200
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     i32.const 17200
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 17200
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=12
     i32.const 17200
     i32.const 3
     local.get $2
     call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 17200
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 1056
     i32.store $0 offset=8
     i32.const 17200
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/index/debugLog
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/declareVariable
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $0
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0
  local.get $0
  i32.load $0 offset=24
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $0
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0
  local.get $0
  i32.load $0 offset=16
  i32.const 1
  i32.sub
  local.set $0
  loop $for-loop|0
   local.get $0
   i32.const 0
   i32.ge_s
   if
    block $for-break0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     global.get $assembly/compiler/current
     local.tee $3
     i32.store $0 offset=8
     local.get $1
     local.get $3
     i32.load $0 offset=12
     local.tee $3
     i32.store $0
     local.get $1
     local.get $3
     local.get $0
     call $~lib/array/Array<assembly/compiler/ParseRule>#__get
     local.tee $3
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.load $0 offset=4
     i32.const -1
     i32.ne
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $3
      i32.store $0
      local.get $3
      i32.load $0 offset=4
      local.set $1
      local.get $4
      global.get $assembly/compiler/current
      local.tee $4
      i32.store $0
      local.get $1
      local.get $4
      i32.load $0 offset=24
      i32.lt_s
     else
      i32.const 0
     end
     br_if $for-break0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $2
     i32.store $0
     local.get $1
     local.get $3
     i32.store $0 offset=16
     local.get $1
     local.get $3
     i32.load $0
     local.tee $1
     i32.store $0 offset=8
     local.get $2
     local.get $1
     call $assembly/compiler/identifiersEqual
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 16832
      i32.store $0
      i32.const 16832
      call $assembly/compiler/error
     end
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/addLocal
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/markInitialized
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0
  local.get $0
  i32.load $0 offset=24
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=16
  i32.const 1
  i32.sub
  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.load $0 offset=24
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/defineVariable (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  global.get $assembly/compiler/current
  local.tee $1
  i32.store $0
  local.get $1
  i32.load $0 offset=24
  i32.const 0
  i32.gt_s
  if
   call $assembly/compiler/markInitialized
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 8
  call $assembly/compiler/emitByte
  local.get $0
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/beginScope
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 17424
  i32.store $0
  i32.const 17424
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $0
  i32.load $0 offset=24
  i32.const 1
  i32.add
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/parseVariable (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  i32.const 19
  local.get $0
  call $assembly/compiler/consume
  call $assembly/compiler/declareVariable
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=24
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  global.get $assembly/compiler/parser
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/identifierConstant
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/compiler/block
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  loop $while-continue|0
   i32.const 3
   call $assembly/compiler/check
   if (result i32)
    i32.const 1
   else
    i32.const 39
    call $assembly/compiler/check
   end
   i32.eqz
   if
    call $assembly/compiler/declaration
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18064
  i32.store $0
  i32.const 3
  i32.const 18064
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitReturn
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store $0
  local.get $0
  global.get $assembly/compiler/current
  local.tee $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  i32.const 1
  i32.eq
  if
   i32.const 5
   call $assembly/compiler/emitByte
   i32.const 0
   call $assembly/compiler/emitByte
  else
   i32.const 1
   call $assembly/compiler/emitByte
  end
  i32.const 33
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/endCompiler (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill $0
   call $assembly/compiler/emitReturn
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $1
   i32.store $0
   local.get $1
   i32.load8_u $0 offset=8
   i32.eqz
   if
    call $assembly/compiler/currentChunk
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=24
    local.get $2
    local.get $0
    i32.load $0 offset=16
    local.tee $3
    i32.store $0 offset=20
    local.get $2
    local.get $3
    i32.load $0 offset=12
    local.tee $3
    i32.store $0 offset=12
    local.get $2
    i32.const 1056
    i32.store $0 offset=16
    local.get $2
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    local.get $3
    i32.store $0
    local.get $2
    i32.const 1056
    i32.store $0 offset=4
    local.get $3
    i32.const 1056
    call $~lib/string/String.__eq
    i32.eqz
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $2
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=16
     local.get $2
     local.get $0
     i32.load $0 offset=16
     local.tee $2
     i32.store $0 offset=12
     local.get $2
     i32.load $0 offset=12
    else
     i32.const 5504
    end
    local.tee $2
    i32.store $0 offset=8
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    local.get $2
    i32.const 9056
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_none)
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $1
   i32.store $0
   local.get $1
   i32.load $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/compiler/current
    local.tee $2
    i32.store $0 offset=16
    local.get $1
    local.get $2
    i32.load $0 offset=4
    local.tee $2
    i32.store $0 offset=12
    local.get $1
    local.get $2
    i32.load $0 offset=16
    local.tee $2
    i32.store $0 offset=8
    local.get $1
    local.get $2
    i32.load $0 offset=12
    local.tee $2
    i32.store $0 offset=28
    local.get $1
    i32.const 18240
    i32.store $0 offset=8
    local.get $1
    local.get $2
    i32.store $0 offset=16
    i32.const 18240
    i32.const 1
    local.get $2
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 18240
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=12
    i32.const 18240
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load $0
    local.tee $1
    i32.store $0 offset=32
    local.get $1
    i32.eqz
    if
     i32.const 5184
     i32.const 14608
     i32.const 312
     i32.const 29
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    global.set $assembly/compiler/current
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 18272
    i32.store $0
    i32.const 18272
    call $assembly/index/debugLog
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/funCompile (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $2
  call $assembly/compiler/Compiler#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $0
  call $assembly/compiler/initCompiler
  call $assembly/compiler/beginScope
  global.get $~lib/memory/__stack_pointer
  i32.const 17632
  i32.store $0 offset=8
  i32.const 0
  i32.const 17632
  call $assembly/compiler/consume
  i32.const 1
  call $assembly/compiler/check
  i32.eqz
  if
   loop $do-loop|0
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    global.get $assembly/compiler/current
    local.tee $0
    i32.store $0 offset=8
    local.get $4
    local.get $0
    i32.load $0 offset=4
    local.tee $2
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.store $0 offset=12
    local.get $4
    local.get $0
    i32.load $0 offset=4
    local.tee $5
    i32.store $0 offset=8
    local.get $2
    local.get $5
    i32.load8_u $0 offset=8
    i32.const 1
    i32.add
    i32.store8 $0 offset=8
    local.get $4
    local.get $0
    i32.store $0 offset=8
    local.get $4
    local.get $0
    i32.load $0 offset=4
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    i32.load8_u $0 offset=8
    i32.const 255
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 17728
     i32.store $0 offset=4
     i32.const 17728
     call $assembly/compiler/errorAtCurrent
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 17824
    i32.store $0 offset=4
    i32.const 17824
    call $assembly/compiler/parseVariable
    call $assembly/compiler/defineVariable
    i32.const 4
    call $assembly/compiler/check
    if (result i32)
     call $assembly/compiler/advance
     i32.const 1
    else
     i32.const 0
    end
    br_if $do-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17888
  i32.store $0 offset=8
  i32.const 1
  i32.const 17888
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 17968
  i32.store $0 offset=8
  i32.const 2
  i32.const 17968
  call $assembly/compiler/consume
  call $assembly/compiler/block
  global.get $~lib/memory/__stack_pointer
  call $assembly/compiler/endCompiler
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/value/OBJ_VAL
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/compiler/makeConstant
  i32.const 255
  i32.and
  local.set $2
  i32.const 31
  call $assembly/compiler/emitByte
  local.get $2
  call $assembly/compiler/emitByte
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load8_u $0 offset=9
   i32.lt_u
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $3
    i32.store $0 offset=12
    local.get $2
    local.get $3
    i32.load $0 offset=20
    local.tee $2
    i32.store $0 offset=8
    local.get $2
    local.get $1
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.load8_u $0 offset=1
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 18368
     i32.store $0 offset=4
     i32.const 18368
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 18432
     i32.store $0 offset=4
     i32.const 18432
    end
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 18512
    i32.store $0 offset=8
    local.get $2
    local.get $3
    i32.store $0 offset=28
    local.get $2
    local.get $3
    i32.load $0 offset=20
    local.tee $2
    i32.store $0 offset=24
    local.get $2
    local.get $1
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=20
    local.get $2
    i32.load8_u $0
    call $~lib/util/number/utoa32
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    i32.const 18512
    local.get $2
    call $~lib/string/String.__concat
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=20
    local.tee $2
    i32.store $0 offset=8
    local.get $2
    local.get $1
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.load8_u $0 offset=1
    i32.const 0
    i32.ne
    call $assembly/compiler/emitByte
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=20
    local.tee $2
    i32.store $0 offset=8
    local.get $2
    local.get $1
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.load8_u $0
    call $assembly/compiler/emitByte
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/endScope
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  global.get $assembly/compiler/current
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $1
  i32.load $0 offset=24
  i32.const 1
  i32.sub
  i32.store $0 offset=24
  local.get $0
  i32.const 18656
  i32.store $0
  i32.const 18656
  call $assembly/index/debugLog
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.tee $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/compiler/current
    local.tee $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0 offset=12
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.load $0 offset=16
    i32.const 1
    i32.sub
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $1
    i32.store $0
    local.get $0
    local.get $1
    i32.load $0 offset=24
    i32.gt_s
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 18704
    i32.store $0
    i32.const 18704
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0 offset=16
    i32.const 1
    i32.sub
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 32
    i32.const 4
    local.get $0
    i32.load8_u $0 offset=8
    select
    call $assembly/compiler/emitByte
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.tee $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.load $0 offset=16
    i32.const 1
    i32.sub
    i32.store $0 offset=16
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/classDeclaration
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $0
   i32.const 16768
   i32.store $0
   i32.const 19
   i32.const 16768
   call $assembly/compiler/consume
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/compiler/identifierConstant
   local.set $0
   call $assembly/compiler/declareVariable
   i32.const 34
   call $assembly/compiler/emitByte
   local.get $0
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
   local.get $0
   call $assembly/compiler/defineVariable
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 5
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store8 $0 offset=4
   local.get $0
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/currentClass
   local.tee $0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $3
   global.set $assembly/compiler/currentClass
   i32.const 17
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 17248
    i32.store $0
    i32.const 19
    i32.const 17248
    call $assembly/compiler/consume
    i32.const 0
    call $assembly/compiler/variable
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/parser
    local.tee $0
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=4
    local.tee $0
    i32.store $0
    local.get $1
    local.get $0
    call $assembly/compiler/identifiersEqual
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 17328
     i32.store $0 offset=4
     i32.const 17328
     call $assembly/compiler/error
    end
    call $assembly/compiler/beginScope
    global.get $~lib/memory/__stack_pointer
    i32.const 15840
    i32.store $0
    i32.const 15840
    call $assembly/compiler/syntheticToken
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $assembly/compiler/addLocal
    i32.const 0
    call $assembly/compiler/defineVariable
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    call $assembly/compiler/namedVariable
    i32.const 35
    call $assembly/compiler/emitByte
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 1
    i32.store8 $0 offset=4
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   call $assembly/compiler/namedVariable
   global.get $~lib/memory/__stack_pointer
   i32.const 17488
   i32.store $0
   i32.const 2
   i32.const 17488
   call $assembly/compiler/consume
   loop $while-continue|0
    i32.const 3
    call $assembly/compiler/check
    if (result i32)
     i32.const 1
    else
     i32.const 39
     call $assembly/compiler/check
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store $0
     local.get $0
     i64.const 0
     i64.store $0 offset=8
     local.get $0
     i32.const 17568
     i32.store $0
     i32.const 19
     i32.const 17568
     call $assembly/compiler/consume
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/compiler/parser
     local.tee $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0 offset=4
     local.tee $0
     i32.store $0 offset=4
     local.get $0
     call $assembly/compiler/identifierConstant
     local.set $0
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/compiler/parser
     local.tee $1
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load $0 offset=4
     local.tee $1
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load $0 offset=4
     local.tee $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.store $0
     i32.const 1
     i32.const 2
     local.get $1
     i32.const 16192
     call $~lib/string/String.__eq
     select
     call $assembly/compiler/funCompile
     i32.const 36
     call $assembly/compiler/emitByte
     local.get $0
     i32.const 255
     i32.and
     call $assembly/compiler/emitByte
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 18576
   i32.store $0
   i32.const 3
   i32.const 18576
   call $assembly/compiler/consume
   i32.const 4
   call $assembly/compiler/emitByte
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.load8_u $0 offset=4
   if
    call $assembly/compiler/endScope
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/currentClass
   local.tee $0
   i32.store $0 offset=20
   local.get $0
   i32.eqz
   if
    i32.const 5184
    i32.const 14608
    i32.const 879
    i32.const 36
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   global.set $assembly/compiler/currentClass
   local.get $1
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/compiler/varDeclaration
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 18864
  i32.store $0
  i32.const 18864
  call $assembly/compiler/parseVariable
  local.set $0
  i32.const 13
  call $assembly/compiler/check
  if (result i32)
   call $assembly/compiler/advance
   i32.const 1
  else
   i32.const 0
  end
  if
   i32.const 1
   call $assembly/compiler/parsePrecedence
  else
   i32.const 1
   call $assembly/compiler/emitByte
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18928
  i32.store $0 offset=4
  i32.const 8
  i32.const 18928
  call $assembly/compiler/consume
  local.get $0
  call $assembly/compiler/defineVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/expressionStatement
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  call $assembly/compiler/parsePrecedence
  global.get $~lib/memory/__stack_pointer
  i32.const 19184
  i32.store $0
  i32.const 8
  i32.const 19184
  call $assembly/compiler/consume
  i32.const 4
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitLoop (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 27
  call $assembly/compiler/emitByte
  call $assembly/compiler/currentChunk
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0
  local.get $0
  i32.sub
  i32.const 2
  i32.add
  local.tee $0
  i32.const 65535
  i32.and
  i32.const 65535
  i32.gt_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 19440
   i32.store $0
   i32.const 19440
   call $assembly/compiler/error
  end
  local.get $0
  i32.const 65535
  i32.and
  i32.const 8
  i32.shr_u
  call $assembly/compiler/emitByte
  local.get $0
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/declaration
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   i32.const 23
   call $assembly/compiler/check
   if (result i32)
    call $assembly/compiler/advance
    i32.const 1
   else
    i32.const 0
   end
   if
    call $assembly/compiler/classDeclaration
   else
    i32.const 27
    call $assembly/compiler/check
    if (result i32)
     call $assembly/compiler/advance
     i32.const 1
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22792
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.store $0
     local.get $0
     i32.const 18800
     i32.store $0
     i32.const 18800
     call $assembly/compiler/parseVariable
     local.set $0
     call $assembly/compiler/markInitialized
     i32.const 0
     call $assembly/compiler/funCompile
     local.get $0
     call $assembly/compiler/defineVariable
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     i32.const 36
     call $assembly/compiler/check
     if (result i32)
      call $assembly/compiler/advance
      i32.const 1
     else
      i32.const 0
     end
     if
      call $assembly/compiler/varDeclaration
     else
      call $assembly/compiler/statement
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=9
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    global.get $assembly/compiler/parser
    local.tee $0
    i32.store $0
    local.get $0
    i32.const 0
    i32.store8 $0 offset=9
    loop $while-continue|0
     block $__inlined_func$assembly/compiler/synchronize
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      global.get $assembly/compiler/parser
      local.tee $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      i32.load $0
      local.tee $0
      i32.store $0
      local.get $0
      i32.load $0
      i32.const 39
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       global.get $assembly/compiler/parser
       local.tee $1
       i32.store $0 offset=4
       local.get $0
       local.get $1
       i32.load $0 offset=4
       local.tee $0
       i32.store $0
       local.get $0
       i32.load $0
       i32.const 8
       i32.eq
       br_if $__inlined_func$assembly/compiler/synchronize
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       global.get $assembly/compiler/parser
       local.tee $1
       i32.store $0 offset=4
       local.get $0
       local.get $1
       i32.load $0
       local.tee $0
       i32.store $0
       block $case8|1
        local.get $0
        i32.load $0
        i32.const 23
        i32.sub
        br_table $__inlined_func$assembly/compiler/synchronize $case8|1 $case8|1 $__inlined_func$assembly/compiler/synchronize $__inlined_func$assembly/compiler/synchronize $__inlined_func$assembly/compiler/synchronize $case8|1 $case8|1 $__inlined_func$assembly/compiler/synchronize $__inlined_func$assembly/compiler/synchronize $case8|1 $case8|1 $case8|1 $__inlined_func$assembly/compiler/synchronize $__inlined_func$assembly/compiler/synchronize $case8|1
       end
       call $assembly/compiler/advance
       br $while-continue|0
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/vm/runtimeError (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $1
  i32.const 1056
  i32.store $0
  local.get $1
  i32.const 1056
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=16
  i32.const 1056
  local.get $0
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 11552
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.const 11552
  call $~lib/string/String.__concat
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  i32.load $0 offset=4
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0
   local.get $1
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    global.get $assembly/vm/vm
    local.tee $3
    i32.store $0 offset=8
    local.get $2
    local.get $3
    i32.load $0
    local.tee $3
    i32.store $0 offset=4
    local.get $2
    local.get $3
    local.get $1
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
    local.tee $2
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0
    local.tee $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=8
    local.tee $3
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.load $0 offset=4
    i32.const 1
    i32.sub
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=12
    local.tee $4
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load $0 offset=12
    local.tee $4
    i32.store $0 offset=4
    local.get $4
    local.get $2
    call $~lib/typedarray/Uint16Array#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.const 65535
    i32.and
    call $~lib/util/number/utoa32
    local.tee $2
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    i32.const 20208
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=32
    i32.const 20208
    i32.const 1
    local.get $2
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 20208
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=16
    i32.const 20208
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $4
    local.get $0
    local.get $2
    call $~lib/string/String.__concat
    local.tee $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=16
    local.tee $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=8
    local.get $0
    i32.const 1056
    call $~lib/string/String.__eq
    if
     i32.const 20240
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20240
     i32.store $0 offset=36
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $3
     i32.store $0 offset=16
     local.get $0
     local.get $3
     i32.load $0 offset=16
     local.tee $3
     i32.store $0 offset=12
     local.get $0
     local.get $3
     i32.load $0 offset=12
     local.tee $3
     i32.store $0 offset=4
     local.get $0
     i32.const 11552
     i32.store $0 offset=8
     local.get $0
     local.get $3
     i32.const 11552
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=36
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.store $0 offset=8
    local.get $3
    local.get $2
    local.get $0
    call $~lib/string/String.__concat
    local.tee $0
    i32.store $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20288
  i32.store $0 offset=4
  i32.const 20288
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/index/debugLog
  call $assembly/vm/resetStack
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/call (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  block $folding-inner0
   local.get $2
   i32.load8_u $0 offset=8
   local.get $1
   i32.const 255
   i32.and
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.load8_u $0 offset=8
    call $~lib/util/number/utoa32
    local.tee $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 255
    i32.and
    call $~lib/util/number/utoa32
    local.tee $1
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 20128
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    i32.const 20128
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 20128
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=20
    i32.const 20128
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 20128
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=8
    i32.const 20128
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $2
   i32.store $0
   local.get $2
   i32.load $0 offset=4
   i32.const 64
   i32.eq
   if
    i32.const 20336
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20336
    i32.store $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   global.get $assembly/vm/vm
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.load $0
   local.tee $2
   i32.store $0
   local.get $3
   local.get $4
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $4
   i32.load $0 offset=4
   local.tee $4
   i32.const 1
   i32.add
   i32.store $0 offset=4
   local.get $3
   local.get $2
   local.get $4
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
   local.tee $2
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0
   local.get $0
   global.get $assembly/vm/vm
   local.tee $3
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.load $0 offset=12
   local.get $1
   i32.const 255
   i32.and
   i32.sub
   i32.const 1
   i32.sub
   i32.store $0 offset=8
   local.get $0
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  local.get $0
  call $assembly/vm/runtimeError
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/vm/run~anonymous|0 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.const 1
  i32.add
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/run~anonymous|1 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 20400
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.tee $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/run~anonymous|2 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $0
  i32.load $0 offset=4
  i32.const 2
  i32.add
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.const 2
  i32.sub
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  i32.sub
  call $~lib/staticarray/StaticArray<u8>#__get
  local.get $1
  i32.or
  i32.const 255
  i32.and
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/run~anonymous|3 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  i32.const 20432
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/object/AS_STRING
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/peek (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/vm/vm
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.load $0 offset=8
  local.tee $3
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.get $0
  i32.sub
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/value/IS_NUMBER (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 2
  i32.eq
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/value/AS_NUMBER (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  f64.load $0 offset=8
  local.set $2
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/value/BOOL_VAL (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  call $assembly/value/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store8 $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vm/run~anonymous|4 (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  call $assembly/vm/peek
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/IS_NUMBER
  if (result i32)
   i32.const 1
   call $assembly/vm/peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/IS_NUMBER
  else
   i32.const 0
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20528
   i32.store $0
   i32.const 20528
   call $assembly/vm/runtimeError
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2
   return
  end
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $1
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $2
  i32.const 2
  global.set $~argumentsLength
  local.get $2
  local.get $1
  local.get $0
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  call $assembly/value/BOOL_VAL
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/vm/push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/vm/run~anonymous|5 (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  call $assembly/vm/peek
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/IS_NUMBER
  if (result i32)
   i32.const 1
   call $assembly/vm/peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/IS_NUMBER
  else
   i32.const 0
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20528
   i32.store $0
   i32.const 20528
   call $assembly/vm/runtimeError
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2
   return
  end
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $1
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $2
  i32.const 2
  global.set $~argumentsLength
  local.get $2
  local.get $1
  local.get $0
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_f64)
  call $assembly/value/NUMBER_VAL
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/vm/push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  local.tee $0
  i32.eqz
  if
   i32.const 20896
   i32.const 20960
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/table/tableGet (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   local.set $0
  end
  local.get $0
 )
 (func $assembly/value/IS_OBJ (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 3
  i32.eq
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/isObjectType (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/value/IS_OBJ
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/value/AS_OBJ
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/IS_INSTANCE (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 4
  call $assembly/object/isObjectType
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/bindMethod (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $assembly/table/tableGet
   local.tee $0
   i32.store $0 offset=12
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.load $0 offset=12
    local.tee $1
    i32.store $0 offset=16
    local.get $0
    i32.const 21424
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.store $0 offset=20
    i32.const 21424
    i32.const 1
    local.get $1
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 21424
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=8
    i32.const 21424
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/vm/runtimeError
    global.get $~lib/memory/__stack_pointer
    i32.const 28
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $1
   i32.const 0
   call $assembly/vm/peek
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $assembly/object/AS_CLOSURE
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   call $assembly/object/Obj#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0 offset=12
   local.get $3
   if
    local.get $0
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0 offset=24
   call $assembly/vm/pop
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/value/OBJ_VAL
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/vm/push
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/value/AS_BOOL (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=4
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/object/IS_STRING (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 6
  call $assembly/object/isObjectType
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/isFalsey (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 1
   i32.eq
   local.set $2
   local.get $1
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   if (result i32)
    i32.const 0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    i32.eqz
    local.set $2
    local.get $1
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/value/AS_BOOL
    else
     i32.const 1
    end
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.eqz
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#slice<~lib/array/Array<assembly/value/Value>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 2
   i32.shr_u
   local.set $3
   local.get $0
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $3
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $3
    local.get $1
    local.get $3
    i32.lt_s
    select
   end
   local.tee $1
   i32.const 2
   i32.shl
   i32.add
   local.set $4
   local.get $2
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $2
    local.get $3
    i32.add
    local.tee $2
    i32.const 0
    local.get $2
    i32.const 0
    i32.gt_s
    select
   else
    local.get $2
    local.get $3
    local.get $2
    local.get $3
    i32.lt_s
    select
   end
   local.get $1
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.tee $1
   i32.const 2
   i32.shl
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store $0
   local.get $0
   local.get $1
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   i32.const 16
   i32.const 49
   call $~lib/rt/itcms/__new
   local.tee $3
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $3
    i32.eqz
    if
     i32.const 0
     i32.const 1152
     i32.const 295
     i32.const 14
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/rt/itcms/white
    local.get $0
    i32.const 20
    i32.sub
    local.tee $7
    i32.load $0 offset=4
    i32.const 3
    i32.and
    i32.eq
    if
     local.get $3
     i32.const 20
     i32.sub
     i32.load $0 offset=4
     i32.const 3
     i32.and
     local.tee $8
     global.get $~lib/rt/itcms/white
     i32.eqz
     i32.eq
     if
      local.get $7
      call $~lib/rt/itcms/Object#makeGray
     else
      global.get $~lib/rt/itcms/state
      i32.const 1
      i32.eq
      local.get $8
      i32.const 3
      i32.eq
      i32.and
      if
       local.get $7
       call $~lib/rt/itcms/Object#makeGray
      end
     end
    end
   end
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $6
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=4
   local.set $0
   i32.const 0
   local.set $2
   loop $while-continue|0
    local.get $2
    local.get $5
    i32.lt_u
    if
     local.get $0
     local.get $2
     i32.add
     local.get $2
     local.get $4
     i32.add
     i32.load $0
     local.tee $1
     i32.store $0
     local.get $1
     if
      local.get $3
      local.get $1
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 4
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/vm/callValue (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner4
   block $folding-inner3
    block $folding-inner2
     block $folding-inner1
      block $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 22792
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       i32.const 0
       i32.const 44
       memory.fill $0
       local.get $2
       local.get $0
       i32.store $0
       local.get $0
       call $assembly/value/IS_OBJ
       if
        block $break|0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         block $case3|0
          block $case1|0
           block $case0|0
            local.get $0
            call $assembly/object/OBJ_TYPE
            br_table $case0|0 $case1|0 $folding-inner1 $break|0 $break|0 $case3|0 $break|0
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           local.get $0
           i32.store $0
           local.get $2
           local.get $0
           call $assembly/object/AS_BOUND_METHOD
           local.tee $0
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/vm/vm
           local.tee $2
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.load $0 offset=8
           local.tee $3
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0 offset=8
           local.get $2
           i32.load $0 offset=12
           local.get $1
           i32.const 255
           i32.and
           i32.sub
           i32.const 1
           i32.sub
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=8
           local.tee $4
           i32.store $0 offset=8
           local.get $3
           local.get $2
           local.get $4
           call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=12
           local.tee $0
           i32.store $0
           br $folding-inner2
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $0
          i32.store $0
          local.get $2
          local.get $0
          call $assembly/object/AS_CLASS
          local.tee $0
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          global.get $assembly/vm/vm
          local.tee $2
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.load $0 offset=8
          local.tee $3
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=8
          local.get $2
          i32.load $0 offset=12
          local.get $1
          i32.const 255
          i32.and
          i32.sub
          i32.const 1
          i32.sub
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=20
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22792
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $4
          i64.const 0
          i64.store $0
          local.get $4
          i32.const 0
          i32.store $0 offset=8
          local.get $4
          i32.const 16
          i32.const 28
          call $~lib/rt/itcms/__new
          local.tee $4
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=4
          local.get $4
          i32.const 0
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=4
          local.get $4
          i32.const 0
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.tee $5
          local.get $4
          i32.store $0 offset=4
          local.get $5
          local.get $4
          call $assembly/object/Obj#constructor
          local.tee $4
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=4
          local.get $4
          i32.const 4
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=8
          local.get $4
          local.get $0
          i32.store $0 offset=8
          local.get $0
          if
           local.get $4
           local.get $0
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=4
          call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
          local.set $5
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=8
          local.get $4
          local.get $5
          i32.store $0 offset=12
          local.get $5
          if
           local.get $4
           local.get $5
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=8
          local.get $4
          call $assembly/value/OBJ_VAL
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=8
          local.get $3
          local.get $2
          local.get $4
          call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.load $0 offset=12
          local.tee $0
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          global.get $assembly/vm/vm
          local.tee $2
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.load $0 offset=24
          local.tee $2
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $0
          local.get $2
          call $assembly/table/tableGet
          local.tee $0
          i32.store $0 offset=24
          local.get $0
          br_if $folding-inner1
          local.get $1
          i32.const 255
          i32.and
          if
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.const 255
           i32.and
           call $~lib/util/number/utoa32
           local.tee $0
           i32.store $0 offset=28
           global.get $~lib/memory/__stack_pointer
           i32.const 22064
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=32
           i32.const 22064
           i32.const 1
           local.get $0
           call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
           global.get $~lib/memory/__stack_pointer
           i32.const 22064
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           i32.const 1056
           i32.store $0 offset=8
           i32.const 22064
           call $~lib/staticarray/StaticArray<~lib/string/String>#join
           local.set $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $0
           call $assembly/vm/runtimeError
           br $folding-inner4
          end
          br $folding-inner3
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $0
         i32.store $0
         local.get $2
         i32.const 12
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22792
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         i64.const 0
         i64.store $0
         local.get $3
         i32.const 0
         i32.store $0 offset=8
         block $__inlined_func$~instanceof|assembly/object/ObjNative (result i32)
          local.get $3
          local.get $0
          i32.store $0 offset=4
          local.get $3
          local.get $0
          call $assembly/value/AS_OBJ
          local.tee $0
          i32.store $0 offset=8
          i32.const 0
          local.get $0
          i32.const 8
          i32.sub
          i32.load $0
          i32.const 51
          i32.ne
          br_if $__inlined_func$~instanceof|assembly/object/ObjNative
          drop
          i32.const 1
         end
         i32.eqz
         if
          i32.const 5376
          i32.const 5440
          i32.const 190
          i32.const 24
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         local.get $0
         i32.store $0
         local.get $0
         i32.load $0 offset=8
         local.set $0
         local.get $3
         i32.const 12
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $2
         local.get $0
         i32.store $0 offset=36
         global.get $~lib/memory/__stack_pointer
         local.set $2
         global.get $~lib/memory/__stack_pointer
         global.get $assembly/vm/vm
         local.tee $3
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.load $0 offset=8
         local.tee $4
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $3
         i32.load $0 offset=12
         local.get $1
         i32.const 255
         i32.and
         i32.sub
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $4
         local.get $5
         local.get $3
         i32.load $0 offset=12
         i32.const 1
         i32.sub
         call $~lib/staticarray/StaticArray<assembly/value/Value>#slice<~lib/array/Array<assembly/value/Value>>
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0
         i32.const 1
         global.set $~argumentsLength
         local.get $2
         local.get $3
         local.get $0
         i32.load $0
         call_indirect $0 (type $i32_=>_i32)
         local.tee $0
         i32.store $0 offset=40
         global.get $~lib/memory/__stack_pointer
         global.get $assembly/vm/vm
         local.tee $2
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         global.get $assembly/vm/vm
         local.tee $3
         i32.store $0 offset=12
         local.get $2
         local.get $3
         i32.load $0 offset=12
         local.get $1
         i32.const 1
         i32.add
         i32.const 255
         i32.and
         i32.sub
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         call $assembly/vm/push
         br $folding-inner3
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 22096
       i32.store $0
       i32.const 22096
       call $assembly/vm/runtimeError
       br $folding-inner4
      end
      i32.const 55584
      i32.const 55632
      i32.const 1
      i32.const 1
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     local.get $0
     call $assembly/object/AS_CLOSURE
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
    end
    local.get $0
    local.get $1
    call $assembly/vm/call
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 44
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/vm/invokeFromClass (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $0
  local.get $1
  call $assembly/table/tableGet
  local.tee $0
  i32.store $0 offset=12
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.load $0 offset=12
   local.tee $1
   i32.store $0 offset=16
   local.get $0
   i32.const 22272
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=20
   i32.const 22272
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 22272
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 1056
   i32.store $0 offset=8
   i32.const 22272
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/vm/runtimeError
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/object/AS_CLOSURE
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  call $assembly/vm/call
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/vm/captureUpvalue (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $4
   global.get $assembly/vm/vm
   local.tee $2
   i32.store $0
   local.get $4
   local.get $2
   i32.load $0 offset=28
   local.tee $2
   i32.store $0 offset=4
   loop $while-continue|0
    local.get $2
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.lt_s
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $2
     local.tee $3
     i32.store $0 offset=8
     local.get $4
     local.get $2
     i32.store $0
     local.get $4
     local.get $2
     i32.load $0 offset=20
     local.tee $2
     i32.store $0 offset=4
     br $while-continue|0
    end
   end
   local.get $2
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $1
    local.get $2
    i32.load $0 offset=12
    i32.eq
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $0
   i32.store $0
   local.get $6
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$~instanceof|assembly/object/ObjUpvalue (result i32)
    local.get $5
    i32.const 7
    call $assembly/object/ALLOCATE_OBJ
    local.tee $4
    i32.store $0
    i32.const 0
    local.get $4
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 16
    i32.ne
    br_if $__inlined_func$~instanceof|assembly/object/ObjUpvalue
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 5376
    i32.const 5440
    i32.const 226
    i32.const 45
    call $~lib/builtins/abort
    unreachable
   end
   local.get $5
   local.get $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=8
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   local.get $4
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0 offset=12
   local.get $4
   local.get $0
   i32.store $0 offset=8
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   local.get $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $4
   local.tee $0
   local.get $2
   i32.store $0 offset=20
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $3
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=16
    local.get $3
    local.get $0
    i32.store $0 offset=20
    local.get $0
    if
     local.get $3
     local.get $0
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    global.get $assembly/vm/vm
    local.tee $1
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=16
    local.get $1
    local.get $0
    i32.store $0 offset=28
    local.get $0
    if
     local.get $1
     local.get $0
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/vm/closeUpvalues (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $1
   i32.store $0
   local.get $1
   i32.load $0 offset=28
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/vm/vm
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    i32.load $0 offset=28
    local.tee $1
    i32.store $0 offset=8
    local.get $1
    i32.eqz
    if
     i32.const 5184
     i32.const 22304
     i32.const 352
     i32.const 53
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $0
    local.get $1
    i32.load $0 offset=12
    i32.le_s
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/vm/vm
    local.tee $2
    i32.store $0
    local.get $1
    local.get $2
    i32.load $0 offset=28
    local.tee $2
    i32.store $0 offset=12
    local.get $2
    i32.eqz
    if
     i32.const 5184
     i32.const 22304
     i32.const 353
     i32.const 49
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.get $2
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $2
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=20
    local.get $1
    local.get $2
    i32.load $0 offset=8
    local.tee $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    i32.store $0 offset=16
    local.get $1
    if
     local.get $2
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $2
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=20
    local.get $1
    local.get $2
    i32.load $0 offset=16
    local.tee $1
    i32.store $0 offset=24
    local.get $1
    i32.eqz
    if
     i32.const 5184
     i32.const 22304
     i32.const 365
     i32.const 40
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    i32.store $0 offset=8
    local.get $1
    if
     local.get $2
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    global.get $assembly/vm/vm
    local.tee $1
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=20
    local.get $3
    local.get $2
    i32.load $0 offset=20
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    i32.store $0 offset=28
    local.get $2
    if
     local.get $1
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/run
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 148
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   block $folding-inner5
    global.get $~lib/memory/__stack_pointer
    i32.const 22792
    i32.lt_s
    br_if $folding-inner5
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 0
    i32.const 148
    memory.fill $0
    local.get $0
    global.get $assembly/vm/vm
    local.tee $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.load $0
    local.tee $2
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $2
    local.get $1
    i32.load $0 offset=4
    i32.const 1
    i32.sub
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
    local.tee $2
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0
    i32.const 1056
    call $assembly/index/debugLog
    global.get $~lib/memory/__stack_pointer
    i32.const 20672
    i32.store $0
    i32.const 20672
    call $assembly/index/debugLog
    global.get $assembly/index/debugFlag
    local.set $4
    block $folding-inner2
     loop $while-continue|0
      block $folding-inner1
       local.get $4
       if
        i32.const 20752
        local.set $1
        global.get $~lib/memory/__stack_pointer
        i32.const 20752
        i32.store $0 offset=12
        i32.const 0
        local.set $0
        loop $for-loop|1
         global.get $~lib/memory/__stack_pointer
         global.get $assembly/vm/vm
         local.tee $5
         i32.store $0
         local.get $0
         local.get $5
         i32.load $0 offset=12
         i32.lt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $5
          global.get $assembly/vm/vm
          local.tee $6
          i32.store $0 offset=16
          local.get $5
          local.get $6
          i32.load $0 offset=8
          local.tee $6
          i32.store $0 offset=4
          local.get $6
          local.get $0
          call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          i32.const 1
          global.set $~argumentsLength
          local.get $5
          local.get $6
          i32.const 5744
          i32.load $0
          call_indirect $0 (type $i32_=>_i32)
          local.tee $5
          i32.store $0 offset=20
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=24
          global.get $~lib/memory/__stack_pointer
          i32.const 20864
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=28
          i32.const 20864
          i32.const 1
          local.get $5
          call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
          global.get $~lib/memory/__stack_pointer
          i32.const 20864
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          i32.const 1056
          i32.store $0 offset=32
          i32.const 20864
          call $~lib/staticarray/StaticArray<~lib/string/String>#join
          local.set $5
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=4
          local.get $6
          local.get $1
          local.get $5
          call $~lib/string/String.__concat
          local.tee $1
          i32.store $0 offset=12
          local.get $0
          i32.const 1
          i32.add
          local.set $0
          br $for-loop|1
         end
        end
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0
        local.get $1
        call $assembly/index/debugLog
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.load $0
        local.tee $0
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load $0 offset=8
        local.tee $0
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load $0 offset=12
        local.tee $0
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=4
        local.get $2
        i32.load $0 offset=4
        local.set $1
        i32.const 2
        global.set $~argumentsLength
        local.get $0
        local.get $1
        i32.const 8736
        i32.load $0
        call_indirect $0 (type $i32_i32_=>_i32)
        drop
       end
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       i32.const 1
       global.set $~argumentsLength
       block $break|2
        block $case36|2
         block $case35|2
          block $case34|2
           block $case33|2
            block $case32|2
             block $case31|2
              block $case30|2
               block $case29|2
                block $case28|2
                 block $case27|2
                  block $case26|2
                   block $case25|2
                    block $case24|2
                     block $case23|2
                      block $case22|2
                       block $case21|2
                        block $case20|2
                         block $case19|2
                          block $case18|2
                           block $case17|2
                            block $case16|2
                             block $case15|2
                              block $case14|2
                               block $case13|2
                                block $case12|2
                                 block $case11|2
                                  block $case10|2
                                   block $case9|2
                                    block $case8|2
                                     block $case7|2
                                      block $case6|2
                                       block $case5|2
                                        block $case4|2
                                         block $case3|2
                                          block $case2|2
                                           block $case1|2
                                            block $case0|2
                                             local.get $2
                                             i32.const 20400
                                             i32.load $0
                                             call_indirect $0 (type $i32_=>_i32)
                                             i32.const 255
                                             i32.and
                                             br_table $case0|2 $case1|2 $case2|2 $case3|2 $case4|2 $case5|2 $case6|2 $case7|2 $case8|2 $case9|2 $case10|2 $case11|2 $case12|2 $case13|2 $case15|2 $case14|2 $case16|2 $case17|2 $case18|2 $case19|2 $case20|2 $case21|2 $case22|2 $case23|2 $case24|2 $case25|2 $case26|2 $case27|2 $case28|2 $case29|2 $case30|2 $case31|2 $case32|2 $case33|2 $case34|2 $case35|2 $case36|2 $break|2
                                            end
                                            global.get $~lib/memory/__stack_pointer
                                            local.tee $0
                                            local.get $2
                                            i32.store $0
                                            i32.const 1
                                            global.set $~argumentsLength
                                            local.get $0
                                            local.get $2
                                            i32.const 20432
                                            i32.load $0
                                            call_indirect $0 (type $i32_=>_i32)
                                            local.tee $0
                                            i32.store $0 offset=36
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $0
                                            i32.store $0
                                            local.get $0
                                            call $assembly/vm/push
                                            br $break|2
                                           end
                                           call $assembly/value/NIL_VAL
                                           local.set $0
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $0
                                           i32.store $0
                                           local.get $0
                                           call $assembly/vm/push
                                           br $break|2
                                          end
                                          i32.const 1
                                          call $assembly/value/BOOL_VAL
                                          local.set $0
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $0
                                          i32.store $0
                                          local.get $0
                                          call $assembly/vm/push
                                          br $break|2
                                         end
                                         i32.const 0
                                         call $assembly/value/BOOL_VAL
                                         local.set $0
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store $0
                                         local.get $0
                                         call $assembly/vm/push
                                         br $break|2
                                        end
                                        call $assembly/vm/pop
                                        drop
                                        br $break|2
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $2
                                       i32.store $0
                                       i32.const 1
                                       global.set $~argumentsLength
                                       local.get $2
                                       i32.const 20400
                                       i32.load $0
                                       call_indirect $0 (type $i32_=>_i32)
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       global.get $assembly/vm/vm
                                       local.tee $1
                                       i32.store $0 offset=16
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.load $0 offset=8
                                       local.tee $1
                                       i32.store $0 offset=4
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $2
                                       i32.store $0 offset=16
                                       local.get $1
                                       local.get $2
                                       i32.load $0 offset=8
                                       local.get $0
                                       i32.const 255
                                       i32.and
                                       i32.add
                                       call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store $0
                                       local.get $0
                                       call $assembly/vm/push
                                       br $break|2
                                      end
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $2
                                      i32.store $0
                                      i32.const 1
                                      global.set $~argumentsLength
                                      local.get $2
                                      i32.const 20400
                                      i32.load $0
                                      call_indirect $0 (type $i32_=>_i32)
                                      local.set $0
                                      global.get $~lib/memory/__stack_pointer
                                      global.get $assembly/vm/vm
                                      local.tee $1
                                      i32.store $0 offset=16
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.load $0 offset=8
                                      local.tee $1
                                      i32.store $0
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $2
                                      i32.store $0 offset=16
                                      local.get $2
                                      i32.load $0 offset=8
                                      local.get $0
                                      i32.const 255
                                      i32.and
                                      i32.add
                                      local.set $0
                                      i32.const 0
                                      call $assembly/vm/peek
                                      local.set $5
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $5
                                      i32.store $0 offset=16
                                      local.get $1
                                      local.get $0
                                      local.get $5
                                      call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
                                      br $break|2
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     local.tee $0
                                     local.get $2
                                     i32.store $0
                                     i32.const 1
                                     global.set $~argumentsLength
                                     local.get $0
                                     local.get $2
                                     i32.const 20496
                                     i32.load $0
                                     call_indirect $0 (type $i32_=>_i32)
                                     local.tee $0
                                     i32.store $0 offset=40
                                     global.get $~lib/memory/__stack_pointer
                                     global.get $assembly/vm/vm
                                     local.tee $1
                                     i32.store $0 offset=16
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.load $0 offset=16
                                     local.tee $1
                                     i32.store $0
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $0
                                     i32.store $0 offset=4
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     local.get $0
                                     call $assembly/table/tableGet
                                     local.tee $1
                                     i32.store $0 offset=44
                                     local.get $1
                                     i32.eqz
                                     if
                                      global.get $~lib/memory/__stack_pointer
                                      local.tee $1
                                      local.get $0
                                      i32.store $0 offset=4
                                      local.get $1
                                      local.get $0
                                      i32.load $0 offset=12
                                      local.tee $0
                                      i32.store $0 offset=48
                                      local.get $1
                                      i32.const 21088
                                      i32.store $0 offset=4
                                      local.get $1
                                      local.get $0
                                      i32.store $0 offset=32
                                      i32.const 21088
                                      i32.const 1
                                      local.get $0
                                      call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
                                      i32.const 21088
                                      local.set $0
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 21088
                                      i32.store $0 offset=4
                                      br $folding-inner1
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store $0
                                     local.get $1
                                     call $assembly/vm/push
                                     br $break|2
                                    end
                                    global.get $~lib/memory/__stack_pointer
                                    local.tee $0
                                    local.get $2
                                    i32.store $0
                                    i32.const 1
                                    global.set $~argumentsLength
                                    local.get $0
                                    local.get $2
                                    i32.const 20496
                                    i32.load $0
                                    call_indirect $0 (type $i32_=>_i32)
                                    local.tee $0
                                    i32.store $0 offset=52
                                    global.get $~lib/memory/__stack_pointer
                                    global.get $assembly/vm/vm
                                    local.tee $1
                                    i32.store $0 offset=32
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    i32.load $0 offset=16
                                    local.tee $1
                                    i32.store $0
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=4
                                    i32.const 0
                                    call $assembly/vm/peek
                                    local.set $5
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $5
                                    i32.store $0 offset=16
                                    local.get $1
                                    local.get $0
                                    local.get $5
                                    call $assembly/table/tableSet
                                    drop
                                    call $assembly/vm/pop
                                    drop
                                    br $break|2
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   local.tee $0
                                   local.get $2
                                   i32.store $0
                                   i32.const 1
                                   global.set $~argumentsLength
                                   local.get $0
                                   local.get $2
                                   i32.const 20496
                                   i32.load $0
                                   call_indirect $0 (type $i32_=>_i32)
                                   local.tee $0
                                   i32.store $0 offset=56
                                   global.get $~lib/memory/__stack_pointer
                                   global.get $assembly/vm/vm
                                   local.tee $1
                                   i32.store $0 offset=32
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.load $0 offset=16
                                   local.tee $1
                                   i32.store $0
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store $0 offset=4
                                   i32.const 0
                                   call $assembly/vm/peek
                                   local.set $5
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $5
                                   i32.store $0 offset=16
                                   local.get $1
                                   local.get $0
                                   local.get $5
                                   call $assembly/table/tableSet
                                   if
                                    global.get $~lib/memory/__stack_pointer
                                    local.tee $1
                                    global.get $assembly/vm/vm
                                    local.tee $2
                                    i32.store $0 offset=16
                                    local.get $1
                                    local.get $2
                                    i32.load $0 offset=16
                                    local.tee $2
                                    i32.store $0
                                    local.get $1
                                    local.get $0
                                    i32.store $0 offset=4
                                    local.get $1
                                    i32.const 8
                                    i32.sub
                                    global.set $~lib/memory/__stack_pointer
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 22792
                                    i32.lt_s
                                    br_if $folding-inner5
                                    global.get $~lib/memory/__stack_pointer
                                    local.tee $1
                                    i64.const 0
                                    i64.store $0
                                    local.get $1
                                    local.get $2
                                    i32.store $0
                                    local.get $1
                                    local.get $0
                                    i32.store $0 offset=4
                                    local.get $2
                                    local.get $0
                                    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
                                    if
                                     global.get $~lib/memory/__stack_pointer
                                     local.tee $1
                                     local.get $2
                                     i32.store $0
                                     local.get $1
                                     local.get $0
                                     i32.store $0 offset=4
                                     local.get $1
                                     i32.const 12
                                     i32.sub
                                     global.set $~lib/memory/__stack_pointer
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 22792
                                     i32.lt_s
                                     br_if $folding-inner5
                                     global.get $~lib/memory/__stack_pointer
                                     local.tee $1
                                     i64.const 0
                                     i64.store $0
                                     local.get $1
                                     i32.const 0
                                     i32.store $0 offset=8
                                     local.get $1
                                     local.get $2
                                     i32.store $0
                                     local.get $1
                                     local.get $0
                                     i32.store $0 offset=4
                                     local.get $1
                                     local.get $0
                                     i32.store $0 offset=8
                                     local.get $2
                                     local.get $0
                                     local.get $0
                                     i32.const -1028477379
                                     i32.mul
                                     i32.const 374761397
                                     i32.add
                                     i32.const 17
                                     i32.rotl
                                     i32.const 668265263
                                     i32.mul
                                     local.tee $1
                                     local.get $1
                                     i32.const 15
                                     i32.shr_u
                                     i32.xor
                                     i32.const -2048144777
                                     i32.mul
                                     local.tee $1
                                     local.get $1
                                     i32.const 13
                                     i32.shr_u
                                     i32.xor
                                     i32.const -1028477379
                                     i32.mul
                                     local.tee $1
                                     local.get $1
                                     i32.const 16
                                     i32.shr_u
                                     i32.xor
                                     call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
                                     local.tee $1
                                     if
                                      local.get $1
                                      local.get $1
                                      i32.load $0 offset=8
                                      i32.const 1
                                      i32.or
                                      i32.store $0 offset=8
                                      global.get $~lib/memory/__stack_pointer
                                      local.tee $1
                                      local.get $2
                                      i32.store $0
                                      local.get $1
                                      local.get $2
                                      i32.store $0 offset=4
                                      local.get $2
                                      local.get $2
                                      i32.load $0 offset=20
                                      i32.const 1
                                      i32.sub
                                      i32.store $0 offset=20
                                      local.get $1
                                      local.get $2
                                      i32.store $0
                                      local.get $2
                                      i32.load $0 offset=4
                                      i32.const 1
                                      i32.shr_u
                                      local.set $4
                                      local.get $1
                                      local.get $2
                                      i32.store $0
                                      local.get $4
                                      i32.const 1
                                      i32.add
                                      i32.const 4
                                      local.get $2
                                      i32.load $0 offset=20
                                      local.tee $1
                                      local.get $1
                                      i32.const 4
                                      i32.lt_u
                                      select
                                      i32.ge_u
                                      if (result i32)
                                       global.get $~lib/memory/__stack_pointer
                                       local.tee $1
                                       local.get $2
                                       i32.store $0
                                       local.get $2
                                       i32.load $0 offset=20
                                       local.set $5
                                       local.get $1
                                       local.get $2
                                       i32.store $0
                                       local.get $5
                                       local.get $2
                                       i32.load $0 offset=12
                                       i32.const 3
                                       i32.mul
                                       i32.const 4
                                       i32.div_s
                                       i32.lt_s
                                      else
                                       i32.const 0
                                      end
                                      if
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $2
                                       i32.store $0
                                       local.get $2
                                       local.get $4
                                       call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash
                                      end
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 12
                                     i32.add
                                     global.set $~lib/memory/__stack_pointer
                                    end
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 8
                                    i32.add
                                    global.set $~lib/memory/__stack_pointer
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=4
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.load $0 offset=12
                                    local.tee $0
                                    i32.store $0 offset=60
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 21200
                                    i32.store $0 offset=4
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=32
                                    i32.const 21200
                                    i32.const 1
                                    local.get $0
                                    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
                                    i32.const 21200
                                    local.set $0
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 21200
                                    i32.store $0 offset=4
                                    br $folding-inner1
                                   end
                                   br $break|2
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store $0
                                  i32.const 1
                                  global.set $~argumentsLength
                                  local.get $2
                                  i32.const 20400
                                  i32.load $0
                                  call_indirect $0 (type $i32_=>_i32)
                                  local.set $0
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store $0
                                  local.get $2
                                  i32.load $0 offset=8
                                  drop
                                  global.get $~lib/memory/__stack_pointer
                                  local.set $1
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store $0 offset=32
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.load $0
                                  local.tee $5
                                  i32.store $0 offset=16
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $5
                                  i32.load $0 offset=12
                                  local.tee $5
                                  i32.store $0 offset=4
                                  local.get $5
                                  local.get $0
                                  i32.const 255
                                  i32.and
                                  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
                                  local.set $0
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store $0
                                  local.get $1
                                  local.get $0
                                  i32.load $0 offset=8
                                  local.tee $0
                                  i32.store $0 offset=64
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store $0
                                  local.get $0
                                  call $assembly/vm/push
                                  br $break|2
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store $0
                                 i32.const 1
                                 global.set $~argumentsLength
                                 local.get $2
                                 i32.const 20400
                                 i32.load $0
                                 call_indirect $0 (type $i32_=>_i32)
                                 local.set $0
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store $0
                                 local.get $2
                                 i32.load $0 offset=8
                                 drop
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 0
                                 call $assembly/vm/peek
                                 local.tee $1
                                 i32.store $0 offset=68
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store $0 offset=32
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.load $0
                                 local.tee $5
                                 i32.store $0 offset=16
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $5
                                 i32.load $0 offset=12
                                 local.tee $5
                                 i32.store $0 offset=4
                                 local.get $5
                                 local.get $0
                                 i32.const 255
                                 i32.and
                                 local.tee $0
                                 call $~lib/array/Array<assembly/compiler/ParseRule>#__get
                                 local.set $5
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $5
                                 i32.store $0
                                 local.get $5
                                 i32.load $0 offset=12
                                 local.set $5
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store $0 offset=28
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.load $0
                                 local.tee $6
                                 i32.store $0 offset=32
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $6
                                 i32.load $0 offset=12
                                 local.tee $6
                                 i32.store $0 offset=16
                                 local.get $6
                                 local.get $0
                                 call $~lib/array/Array<assembly/compiler/ParseRule>#__get
                                 local.set $0
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store $0
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $1
                                 i32.store $0 offset=4
                                 local.get $0
                                 local.get $1
                                 i32.store $0 offset=8
                                 local.get $1
                                 if
                                  local.get $0
                                  local.get $1
                                  i32.const 0
                                  call $byn-split-outlined-A$~lib/rt/itcms/__link
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.tee $0
                                 global.get $assembly/vm/vm
                                 local.tee $6
                                 i32.store $0 offset=16
                                 local.get $0
                                 local.get $6
                                 i32.load $0 offset=8
                                 local.tee $6
                                 i32.store $0
                                 local.get $0
                                 local.get $1
                                 i32.store $0 offset=16
                                 local.get $6
                                 local.get $5
                                 local.get $1
                                 call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
                                 br $break|2
                                end
                                i32.const 0
                                call $assembly/vm/peek
                                local.set $0
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store $0
                                local.get $0
                                call $assembly/object/IS_INSTANCE
                                i32.eqz
                                if
                                 i32.const 21232
                                 local.set $0
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 21232
                                 i32.store $0
                                 br $folding-inner2
                                end
                                global.get $~lib/memory/__stack_pointer
                                local.set $0
                                i32.const 0
                                call $assembly/vm/peek
                                local.set $1
                                global.get $~lib/memory/__stack_pointer
                                local.get $1
                                i32.store $0
                                local.get $0
                                local.get $1
                                call $assembly/object/AS_INSTANCE
                                local.tee $0
                                i32.store $0 offset=72
                                global.get $~lib/memory/__stack_pointer
                                local.get $2
                                i32.store $0
                                i32.const 1
                                global.set $~argumentsLength
                                global.get $~lib/memory/__stack_pointer
                                local.get $2
                                i32.const 20496
                                i32.load $0
                                call_indirect $0 (type $i32_=>_i32)
                                local.tee $1
                                i32.store $0 offset=76
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store $0 offset=16
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.load $0 offset=12
                                local.tee $5
                                i32.store $0
                                global.get $~lib/memory/__stack_pointer
                                local.get $1
                                i32.store $0 offset=4
                                global.get $~lib/memory/__stack_pointer
                                local.get $5
                                local.get $1
                                call $assembly/table/tableGet
                                local.tee $5
                                i32.store $0 offset=80
                                local.get $5
                                if
                                 call $assembly/vm/pop
                                 drop
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $5
                                 i32.store $0
                                 local.get $5
                                 call $assembly/vm/push
                                 br $break|2
                                end
                                global.get $~lib/memory/__stack_pointer
                                local.tee $5
                                local.get $0
                                i32.store $0 offset=16
                                local.get $5
                                local.get $0
                                i32.load $0 offset=8
                                local.tee $0
                                i32.store $0
                                local.get $5
                                local.get $1
                                i32.store $0 offset=4
                                local.get $0
                                local.get $1
                                call $assembly/vm/bindMethod
                                i32.eqz
                                br_if $folding-inner0
                                br $break|2
                               end
                               i32.const 1
                               call $assembly/vm/peek
                               local.set $0
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.store $0
                               local.get $0
                               call $assembly/object/IS_INSTANCE
                               i32.eqz
                               if
                                i32.const 21456
                                local.set $0
                                global.get $~lib/memory/__stack_pointer
                                i32.const 21456
                                i32.store $0
                                br $folding-inner2
                               end
                               global.get $~lib/memory/__stack_pointer
                               local.set $0
                               i32.const 1
                               call $assembly/vm/peek
                               local.set $1
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store $0
                               local.get $0
                               local.get $1
                               call $assembly/object/AS_INSTANCE
                               local.tee $0
                               i32.store $0 offset=84
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.store $0 offset=32
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.load $0 offset=12
                               local.tee $0
                               i32.store $0
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store $0 offset=32
                               i32.const 1
                               global.set $~argumentsLength
                               local.get $2
                               i32.const 20496
                               i32.load $0
                               call_indirect $0 (type $i32_=>_i32)
                               local.set $1
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store $0 offset=4
                               i32.const 0
                               call $assembly/vm/peek
                               local.set $5
                               global.get $~lib/memory/__stack_pointer
                               local.get $5
                               i32.store $0 offset=16
                               local.get $0
                               local.get $1
                               local.get $5
                               call $assembly/table/tableSet
                               drop
                               global.get $~lib/memory/__stack_pointer
                               call $assembly/vm/pop
                               local.tee $0
                               i32.store $0 offset=88
                               call $assembly/vm/pop
                               drop
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.store $0
                               local.get $0
                               call $assembly/vm/push
                               br $break|2
                              end
                              global.get $~lib/memory/__stack_pointer
                              call $assembly/vm/pop
                              local.tee $0
                              i32.store $0 offset=92
                              global.get $~lib/memory/__stack_pointer
                              call $assembly/vm/pop
                              local.tee $1
                              i32.store $0 offset=96
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0 offset=4
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=16
                              global.get $~lib/memory/__stack_pointer
                              i32.const 4
                              i32.sub
                              global.set $~lib/memory/__stack_pointer
                              global.get $~lib/memory/__stack_pointer
                              i32.const 22792
                              i32.lt_s
                              br_if $folding-inner5
                              global.get $~lib/memory/__stack_pointer
                              local.tee $5
                              i32.const 0
                              i32.store $0
                              local.get $5
                              local.get $1
                              i32.store $0
                              local.get $1
                              i32.load $0
                              local.set $6
                              local.get $5
                              local.get $0
                              i32.store $0
                              block $__inlined_func$assembly/value/valuesEqual
                               local.get $6
                               local.get $0
                               i32.load $0
                               i32.ne
                               if
                                global.get $~lib/memory/__stack_pointer
                                i32.const 4
                                i32.add
                                global.set $~lib/memory/__stack_pointer
                                i32.const 0
                                local.set $0
                                br $__inlined_func$assembly/value/valuesEqual
                               end
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store $0
                               block $case4|0
                                block $case3|0
                                 block $case2|0
                                  block $case1|0
                                   block $case0|0
                                    local.get $1
                                    i32.load $0
                                    br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store $0
                                   local.get $1
                                   call $assembly/value/AS_BOOL
                                   i32.const 0
                                   i32.ne
                                   local.set $1
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store $0
                                   local.get $1
                                   local.get $0
                                   call $assembly/value/AS_BOOL
                                   i32.const 0
                                   i32.ne
                                   i32.eq
                                   local.set $0
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 4
                                   i32.add
                                   global.set $~lib/memory/__stack_pointer
                                   br $__inlined_func$assembly/value/valuesEqual
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 4
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  i32.const 1
                                  local.set $0
                                  br $__inlined_func$assembly/value/valuesEqual
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $1
                                 i32.store $0
                                 local.get $1
                                 call $assembly/value/AS_NUMBER
                                 local.set $3
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store $0
                                 local.get $0
                                 call $assembly/value/AS_NUMBER
                                 local.get $3
                                 f64.eq
                                 local.set $0
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 4
                                 i32.add
                                 global.set $~lib/memory/__stack_pointer
                                 br $__inlined_func$assembly/value/valuesEqual
                                end
                                global.get $~lib/memory/__stack_pointer
                                local.get $1
                                i32.store $0
                                local.get $1
                                call $assembly/value/AS_OBJ
                                local.set $1
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store $0
                                local.get $0
                                call $assembly/value/AS_OBJ
                                local.get $1
                                i32.eq
                                local.set $0
                                global.get $~lib/memory/__stack_pointer
                                i32.const 4
                                i32.add
                                global.set $~lib/memory/__stack_pointer
                                br $__inlined_func$assembly/value/valuesEqual
                               end
                               global.get $~lib/memory/__stack_pointer
                               i32.const 4
                               i32.add
                               global.set $~lib/memory/__stack_pointer
                               i32.const 0
                               local.set $0
                              end
                              local.get $0
                              call $assembly/value/BOOL_VAL
                              local.set $0
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0
                              local.get $0
                              call $assembly/vm/push
                              br $break|2
                             end
                             global.get $~lib/memory/__stack_pointer
                             local.tee $0
                             local.get $2
                             i32.store $0
                             i32.const 1
                             global.set $~argumentsLength
                             local.get $0
                             local.get $2
                             i32.const 20496
                             i32.load $0
                             call_indirect $0 (type $i32_=>_i32)
                             local.tee $0
                             i32.store $0 offset=100
                             global.get $~lib/memory/__stack_pointer
                             local.set $1
                             call $assembly/vm/pop
                             local.set $5
                             global.get $~lib/memory/__stack_pointer
                             local.get $5
                             i32.store $0
                             local.get $1
                             local.get $5
                             call $assembly/object/AS_CLASS
                             local.tee $1
                             i32.store $0 offset=104
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0 offset=4
                             local.get $1
                             local.get $0
                             call $assembly/vm/bindMethod
                             i32.eqz
                             br_if $folding-inner0
                             br $break|2
                            end
                            global.get $~lib/memory/__stack_pointer
                            i32.const 21536
                            i32.store $0
                            i32.const 1
                            global.set $~argumentsLength
                            i32.const 21536
                            i32.const 20608
                            i32.load $0
                            call_indirect $0 (type $i32_=>_i32)
                            i32.const 1
                            i32.eq
                            br_if $folding-inner0
                            br $break|2
                           end
                           global.get $~lib/memory/__stack_pointer
                           i32.const 21568
                           i32.store $0
                           i32.const 1
                           global.set $~argumentsLength
                           i32.const 21568
                           i32.const 20608
                           i32.load $0
                           call_indirect $0 (type $i32_=>_i32)
                           i32.const 1
                           i32.eq
                           br_if $folding-inner0
                           br $break|2
                          end
                          i32.const 0
                          call $assembly/vm/peek
                          local.set $0
                          global.get $~lib/memory/__stack_pointer
                          local.get $0
                          i32.store $0
                          local.get $0
                          call $assembly/object/IS_STRING
                          if (result i32)
                           i32.const 1
                           call $assembly/vm/peek
                           local.set $0
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.store $0
                           local.get $0
                           call $assembly/object/IS_STRING
                          else
                           i32.const 0
                          end
                          if
                           block $__inlined_func$assembly/vm/concatenate
                            global.get $~lib/memory/__stack_pointer
                            i32.const 28
                            i32.sub
                            global.set $~lib/memory/__stack_pointer
                            block $folding-inner00
                             global.get $~lib/memory/__stack_pointer
                             i32.const 22792
                             i32.lt_s
                             br_if $folding-inner00
                             global.get $~lib/memory/__stack_pointer
                             local.tee $0
                             i32.const 0
                             i32.const 28
                             memory.fill $0
                             call $assembly/vm/pop
                             local.set $1
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0
                             local.get $0
                             local.get $1
                             call $assembly/object/AS_STRING
                             local.tee $0
                             i32.store $0 offset=4
                             global.get $~lib/memory/__stack_pointer
                             local.set $1
                             call $assembly/vm/pop
                             local.set $5
                             global.get $~lib/memory/__stack_pointer
                             local.get $5
                             i32.store $0
                             local.get $1
                             local.get $5
                             call $assembly/object/AS_STRING
                             local.tee $1
                             i32.store $0 offset=8
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0 offset=16
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.load $0 offset=12
                             local.tee $1
                             i32.store $0
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0 offset=16
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load $0 offset=12
                             local.tee $0
                             i32.store $0 offset=12
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             local.get $0
                             call $~lib/string/String#concat
                             local.tee $1
                             i32.store $0 offset=20
                             global.get $~lib/memory/__stack_pointer
                             local.set $5
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0
                             global.get $~lib/memory/__stack_pointer
                             i32.const 16
                             i32.sub
                             global.set $~lib/memory/__stack_pointer
                             global.get $~lib/memory/__stack_pointer
                             i32.const 22792
                             i32.lt_s
                             br_if $folding-inner00
                             global.get $~lib/memory/__stack_pointer
                             local.tee $0
                             i64.const 0
                             i64.store $0
                             local.get $0
                             i64.const 0
                             i64.store $0 offset=8
                             local.get $0
                             global.get $assembly/vm/vm
                             local.tee $6
                             i32.store $0 offset=8
                             local.get $0
                             local.get $6
                             i32.load $0 offset=20
                             local.tee $6
                             i32.store $0
                             local.get $0
                             local.get $1
                             i32.store $0 offset=4
                             local.get $0
                             local.get $6
                             local.get $1
                             call $assembly/table/tableFindString
                             local.tee $0
                             i32.store $0 offset=12
                             block $__inlined_func$assembly/object/takeString
                              local.get $0
                              if
                               global.get $~lib/memory/__stack_pointer
                               i32.const 21600
                               i32.store $0
                               i32.const 21600
                               call $assembly/index/debugLog
                               br $__inlined_func$assembly/object/takeString
                              end
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0
                              local.get $1
                              call $assembly/object/allocateString
                              local.set $0
                             end
                             global.get $~lib/memory/__stack_pointer
                             i32.const 16
                             i32.add
                             global.set $~lib/memory/__stack_pointer
                             local.get $5
                             local.get $0
                             i32.store $0 offset=24
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0 offset=12
                             local.get $0
                             call $assembly/value/OBJ_VAL
                             local.set $0
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0
                             local.get $0
                             call $assembly/vm/push
                             global.get $~lib/memory/__stack_pointer
                             i32.const 28
                             i32.add
                             global.set $~lib/memory/__stack_pointer
                             br $__inlined_func$assembly/vm/concatenate
                            end
                            br $folding-inner5
                           end
                          else
                           i32.const 0
                           call $assembly/vm/peek
                           local.set $0
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.store $0
                           local.get $0
                           call $assembly/value/IS_NUMBER
                           if (result i32)
                            i32.const 1
                            call $assembly/vm/peek
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.store $0
                            local.get $0
                            call $assembly/value/IS_NUMBER
                           else
                            i32.const 0
                           end
                           if
                            call $assembly/vm/pop
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.store $0
                            local.get $0
                            call $assembly/value/AS_NUMBER
                            local.set $3
                            call $assembly/vm/pop
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.store $0
                            local.get $0
                            call $assembly/value/AS_NUMBER
                            local.get $3
                            f64.add
                            call $assembly/value/NUMBER_VAL
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.store $0
                            local.get $0
                            call $assembly/vm/push
                           else
                            i32.const 21696
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            i32.const 21696
                            i32.store $0
                            br $folding-inner2
                           end
                          end
                          br $break|2
                         end
                         global.get $~lib/memory/__stack_pointer
                         i32.const 21808
                         i32.store $0
                         i32.const 1
                         global.set $~argumentsLength
                         i32.const 21808
                         i32.const 20640
                         i32.load $0
                         call_indirect $0 (type $i32_=>_i32)
                         i32.const 1
                         i32.eq
                         br_if $folding-inner0
                         br $break|2
                        end
                        global.get $~lib/memory/__stack_pointer
                        i32.const 21840
                        i32.store $0
                        i32.const 1
                        global.set $~argumentsLength
                        i32.const 21840
                        i32.const 20640
                        i32.load $0
                        call_indirect $0 (type $i32_=>_i32)
                        i32.const 1
                        i32.eq
                        br_if $folding-inner0
                        br $break|2
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 21872
                       i32.store $0
                       i32.const 1
                       global.set $~argumentsLength
                       i32.const 21872
                       i32.const 20640
                       i32.load $0
                       call_indirect $0 (type $i32_=>_i32)
                       i32.const 1
                       i32.eq
                       br_if $folding-inner0
                       br $break|2
                      end
                      call $assembly/vm/pop
                      local.set $0
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store $0 offset=4
                      local.get $0
                      call $assembly/vm/isFalsey
                      call $assembly/value/BOOL_VAL
                      local.set $0
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store $0
                      local.get $0
                      call $assembly/vm/push
                      br $break|2
                     end
                     i32.const 0
                     call $assembly/vm/peek
                     local.set $0
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store $0
                     local.get $0
                     call $assembly/value/IS_NUMBER
                     i32.eqz
                     if
                      i32.const 21904
                      local.set $0
                      global.get $~lib/memory/__stack_pointer
                      i32.const 21904
                      i32.store $0
                      br $folding-inner2
                     end
                     call $assembly/vm/pop
                     local.set $0
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store $0 offset=4
                     local.get $0
                     call $assembly/value/AS_NUMBER
                     f64.neg
                     call $assembly/value/NUMBER_VAL
                     local.set $0
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store $0
                     local.get $0
                     call $assembly/vm/push
                     br $break|2
                    end
                    global.get $~lib/memory/__stack_pointer
                    local.set $0
                    call $assembly/vm/pop
                    local.set $1
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store $0
                    i32.const 1
                    global.set $~argumentsLength
                    local.get $0
                    local.get $1
                    i32.const 5744
                    i32.load $0
                    call_indirect $0 (type $i32_=>_i32)
                    local.tee $0
                    i32.store $0 offset=108
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0
                    local.get $0
                    call $assembly/index/printout
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0
                    local.get $0
                    call $assembly/index/debugLog
                    br $break|2
                   end
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   i32.const 1
                   global.set $~argumentsLength
                   local.get $2
                   i32.const 20464
                   i32.load $0
                   call_indirect $0 (type $i32_=>_i32)
                   local.set $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0 offset=4
                   local.get $2
                   local.get $2
                   i32.load $0 offset=4
                   local.get $0
                   i32.const 255
                   i32.and
                   i32.add
                   i32.store $0 offset=4
                   br $break|2
                  end
                  global.get $~lib/memory/__stack_pointer
                  local.get $2
                  i32.store $0
                  i32.const 1
                  global.set $~argumentsLength
                  local.get $2
                  i32.const 20464
                  i32.load $0
                  call_indirect $0 (type $i32_=>_i32)
                  local.set $0
                  i32.const 0
                  call $assembly/vm/peek
                  local.set $1
                  global.get $~lib/memory/__stack_pointer
                  local.get $1
                  i32.store $0
                  local.get $1
                  call $assembly/vm/isFalsey
                  if
                   global.get $~lib/memory/__stack_pointer
                   local.tee $1
                   local.get $2
                   i32.store $0
                   local.get $1
                   local.get $2
                   i32.store $0 offset=4
                   local.get $2
                   local.get $2
                   i32.load $0 offset=4
                   local.get $0
                   i32.const 65535
                   i32.and
                   i32.add
                   i32.store $0 offset=4
                  end
                  br $break|2
                 end
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store $0
                 i32.const 1
                 global.set $~argumentsLength
                 local.get $2
                 i32.const 20464
                 i32.load $0
                 call_indirect $0 (type $i32_=>_i32)
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store $0 offset=4
                 local.get $2
                 local.get $2
                 i32.load $0 offset=4
                 local.get $0
                 i32.const 65535
                 i32.and
                 i32.sub
                 i32.store $0 offset=4
                 br $break|2
                end
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store $0
                i32.const 1
                global.set $~argumentsLength
                local.get $2
                i32.const 20400
                i32.load $0
                call_indirect $0 (type $i32_=>_i32)
                local.tee $0
                i32.const 255
                i32.and
                call $assembly/vm/peek
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store $0
                local.get $1
                local.get $0
                call $assembly/vm/callValue
                i32.eqz
                br_if $folding-inner0
                global.get $~lib/memory/__stack_pointer
                local.tee $0
                global.get $assembly/vm/vm
                local.tee $1
                i32.store $0 offset=4
                local.get $0
                local.get $1
                i32.load $0
                local.tee $2
                i32.store $0
                local.get $0
                local.get $1
                i32.store $0 offset=4
                local.get $0
                local.get $2
                local.get $1
                i32.load $0 offset=4
                i32.const 1
                i32.sub
                call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
                local.tee $2
                i32.store $0 offset=8
                br $break|2
               end
               global.get $~lib/memory/__stack_pointer
               local.tee $0
               local.get $2
               i32.store $0
               i32.const 1
               global.set $~argumentsLength
               local.get $0
               local.get $2
               i32.const 20496
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.tee $0
               i32.store $0 offset=112
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0
               i32.const 1
               global.set $~argumentsLength
               local.get $2
               i32.const 20400
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0
               global.get $~lib/memory/__stack_pointer
               i32.const 24
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 22792
               i32.lt_s
               br_if $folding-inner5
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 0
               i32.const 24
               memory.fill $0
               local.get $2
               local.get $1
               i32.const 255
               i32.and
               call $assembly/vm/peek
               local.tee $2
               i32.store $0
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0 offset=4
               block $__inlined_func$assembly/vm/invoke
                local.get $2
                call $assembly/object/IS_INSTANCE
                i32.eqz
                if
                 global.get $~lib/memory/__stack_pointer
                 i32.const 22192
                 i32.store $0 offset=4
                 i32.const 22192
                 call $assembly/vm/runtimeError
                 global.get $~lib/memory/__stack_pointer
                 i32.const 24
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 i32.const 0
                 local.set $0
                 br $__inlined_func$assembly/vm/invoke
                end
                global.get $~lib/memory/__stack_pointer
                local.tee $5
                local.get $2
                i32.store $0 offset=4
                local.get $5
                local.get $2
                call $assembly/object/AS_INSTANCE
                local.tee $2
                i32.store $0 offset=8
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store $0 offset=16
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.load $0 offset=12
                local.tee $5
                i32.store $0 offset=4
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store $0 offset=12
                global.get $~lib/memory/__stack_pointer
                local.get $5
                local.get $0
                call $assembly/table/tableGet
                local.tee $5
                i32.store $0 offset=20
                local.get $5
                if
                 global.get $~lib/memory/__stack_pointer
                 local.tee $0
                 global.get $assembly/vm/vm
                 local.tee $2
                 i32.store $0 offset=16
                 local.get $0
                 local.get $2
                 i32.load $0 offset=8
                 local.tee $6
                 i32.store $0 offset=4
                 local.get $0
                 local.get $2
                 i32.store $0 offset=16
                 local.get $2
                 i32.load $0 offset=12
                 local.get $1
                 i32.const 255
                 i32.and
                 i32.sub
                 i32.const 1
                 i32.sub
                 local.set $2
                 local.get $0
                 local.get $5
                 i32.store $0 offset=16
                 local.get $6
                 local.get $2
                 local.get $5
                 call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
                 global.get $~lib/memory/__stack_pointer
                 local.get $5
                 i32.store $0 offset=4
                 local.get $5
                 local.get $1
                 call $assembly/vm/callValue
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 24
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 br $__inlined_func$assembly/vm/invoke
                end
                global.get $~lib/memory/__stack_pointer
                local.tee $5
                local.get $2
                i32.store $0 offset=16
                local.get $5
                local.get $2
                i32.load $0 offset=8
                local.tee $2
                i32.store $0 offset=4
                local.get $5
                local.get $0
                i32.store $0 offset=12
                local.get $2
                local.get $0
                local.get $1
                call $assembly/vm/invokeFromClass
                local.set $0
                global.get $~lib/memory/__stack_pointer
                i32.const 24
                i32.add
                global.set $~lib/memory/__stack_pointer
               end
               local.get $0
               i32.eqz
               br_if $folding-inner0
               global.get $~lib/memory/__stack_pointer
               local.tee $0
               global.get $assembly/vm/vm
               local.tee $1
               i32.store $0 offset=4
               local.get $0
               local.get $1
               i32.load $0
               local.tee $2
               i32.store $0
               local.get $0
               local.get $1
               i32.store $0 offset=4
               local.get $0
               local.get $2
               local.get $1
               i32.load $0 offset=4
               i32.const 1
               i32.sub
               call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
               local.tee $2
               i32.store $0 offset=8
               br $break|2
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              local.get $2
              i32.store $0
              i32.const 1
              global.set $~argumentsLength
              local.get $0
              local.get $2
              i32.const 20496
              i32.load $0
              call_indirect $0 (type $i32_=>_i32)
              local.tee $0
              i32.store $0 offset=116
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store $0
              i32.const 1
              global.set $~argumentsLength
              local.get $2
              i32.const 20400
              i32.load $0
              call_indirect $0 (type $i32_=>_i32)
              local.set $1
              global.get $~lib/memory/__stack_pointer
              local.set $2
              call $assembly/vm/pop
              local.set $5
              global.get $~lib/memory/__stack_pointer
              local.get $5
              i32.store $0
              local.get $2
              local.get $5
              call $assembly/object/AS_CLASS
              local.tee $2
              i32.store $0 offset=120
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store $0
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store $0 offset=4
              local.get $2
              local.get $0
              local.get $1
              call $assembly/vm/invokeFromClass
              i32.eqz
              br_if $folding-inner0
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              global.get $assembly/vm/vm
              local.tee $1
              i32.store $0 offset=4
              local.get $0
              local.get $1
              i32.load $0
              local.tee $2
              i32.store $0
              local.get $0
              local.get $1
              i32.store $0 offset=4
              local.get $0
              local.get $2
              local.get $1
              i32.load $0 offset=4
              i32.const 1
              i32.sub
              call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
              local.tee $2
              i32.store $0 offset=8
              br $break|2
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $0
             local.get $2
             i32.store $0 offset=4
             i32.const 1
             global.set $~argumentsLength
             local.get $2
             i32.const 20432
             i32.load $0
             call_indirect $0 (type $i32_=>_i32)
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store $0
             local.get $0
             local.get $1
             call $assembly/object/AS_FUNCTION
             local.tee $0
             i32.store $0 offset=124
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0 offset=4
             global.get $~lib/memory/__stack_pointer
             local.get $0
             call $assembly/object/ObjClosure#constructor
             local.tee $5
             i32.store $0 offset=128
             global.get $~lib/memory/__stack_pointer
             local.get $5
             i32.store $0 offset=4
             local.get $5
             call $assembly/value/OBJ_VAL
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0
             local.get $0
             call $assembly/vm/push
             i32.const 0
             local.set $0
             loop $for-loop|3
              global.get $~lib/memory/__stack_pointer
              local.get $5
              i32.store $0
              local.get $0
              local.get $5
              i32.load $0 offset=16
              i32.lt_u
              if
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0
               i32.const 1
               global.set $~argumentsLength
               local.get $2
               i32.const 20400
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store $0
               i32.const 1
               global.set $~argumentsLength
               local.get $2
               i32.const 20400
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.set $6
               local.get $1
               i32.const 255
               i32.and
               i32.const 1
               i32.eq
               if (result i32)
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                local.get $2
                i32.store $0
                local.get $2
                i32.load $0 offset=8
                local.get $6
                i32.const 255
                i32.and
                i32.add
                local.set $6
                local.get $1
                global.get $assembly/vm/vm
                local.tee $7
                i32.store $0 offset=4
                local.get $1
                local.get $7
                i32.load $0 offset=8
                local.tee $7
                i32.store $0
                local.get $1
                local.get $7
                local.get $6
                call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
                local.tee $7
                i32.store $0 offset=132
                global.get $~lib/memory/__stack_pointer
                local.get $5
                i32.store $0 offset=16
                global.get $~lib/memory/__stack_pointer
                local.get $5
                i32.load $0 offset=12
                local.tee $1
                i32.store $0
                global.get $~lib/memory/__stack_pointer
                local.get $7
                i32.store $0 offset=16
                local.get $7
                local.get $6
                call $assembly/vm/captureUpvalue
               else
                global.get $~lib/memory/__stack_pointer
                local.tee $7
                local.get $5
                i32.store $0 offset=16
                local.get $7
                local.get $5
                i32.load $0 offset=12
                local.tee $1
                i32.store $0
                local.get $7
                local.get $2
                i32.store $0 offset=28
                local.get $7
                local.get $2
                i32.load $0
                local.tee $8
                i32.store $0 offset=32
                local.get $7
                local.get $8
                i32.load $0 offset=12
                local.tee $7
                i32.store $0 offset=16
                local.get $7
                local.get $6
                i32.const 255
                i32.and
                call $~lib/array/Array<assembly/compiler/ParseRule>#__get
               end
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store $0 offset=16
               local.get $1
               local.get $0
               local.get $6
               call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
               local.get $0
               i32.const 1
               i32.add
               local.set $0
               br $for-loop|3
              end
             end
             br $break|2
            end
            global.get $~lib/memory/__stack_pointer
            global.get $assembly/vm/vm
            local.tee $0
            i32.store $0
            local.get $0
            i32.load $0 offset=12
            i32.const 1
            i32.sub
            call $assembly/vm/closeUpvalues
            call $assembly/vm/pop
            drop
            br $break|2
           end
           global.get $~lib/memory/__stack_pointer
           call $assembly/vm/pop
           local.tee $0
           i32.store $0 offset=136
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.load $0 offset=8
           call $assembly/vm/closeUpvalues
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/vm/vm
           local.tee $1
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=4
           local.get $1
           local.get $1
           i32.load $0 offset=4
           i32.const 1
           i32.sub
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0
           local.get $1
           i32.load $0 offset=4
           i32.eqz
           if
            call $assembly/vm/pop
            drop
            br $folding-inner0
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           global.get $assembly/vm/vm
           local.tee $5
           i32.store $0
           local.get $1
           local.get $2
           i32.store $0 offset=4
           local.get $5
           local.get $2
           i32.load $0 offset=8
           i32.store $0 offset=12
           local.get $1
           local.get $0
           i32.store $0
           local.get $0
           call $assembly/vm/push
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/vm/vm
           local.tee $0
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0
           local.tee $0
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/vm/vm
           local.tee $1
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           local.get $1
           i32.load $0 offset=4
           i32.const 1
           i32.sub
           call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
           local.tee $2
           i32.store $0 offset=8
           br $break|2
          end
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=32
          i32.const 1
          global.set $~argumentsLength
          local.get $2
          i32.const 20496
          i32.load $0
          call_indirect $0 (type $i32_=>_i32)
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=32
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22792
          i32.lt_s
          br_if $folding-inner5
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i64.const 0
          i64.store $0
          local.get $1
          i64.const 0
          i64.store $0 offset=8
          local.get $1
          i32.const 16
          i32.const 27
          call $~lib/rt/itcms/__new
          local.tee $1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.tee $5
          local.get $1
          i32.store $0 offset=4
          local.get $5
          i32.const 1056
          i32.store $0 offset=8
          local.get $1
          i32.const 1056
          i32.store $0 offset=8
          local.get $1
          i32.const 1056
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          local.get $1
          i32.const 0
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.tee $5
          local.get $1
          i32.store $0 offset=4
          local.get $5
          local.get $1
          call $assembly/object/Obj#constructor
          local.tee $1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          local.get $1
          i32.const 1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.load $0 offset=12
          local.tee $0
          i32.store $0 offset=8
          local.get $1
          local.get $0
          i32.store $0 offset=8
          local.get $0
          if
           local.get $1
           local.get $0
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=8
          local.get $1
          local.get $0
          i32.store $0 offset=12
          local.get $0
          if
           local.get $1
           local.get $0
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.add
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          local.get $1
          call $assembly/value/OBJ_VAL
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          call $assembly/vm/push
          br $break|2
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 1
         call $assembly/vm/peek
         local.tee $0
         i32.store $0 offset=140
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22792
         i32.lt_s
         br_if $folding-inner5
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.store $0
         local.get $1
         local.get $0
         i32.store $0
         local.get $0
         i32.const 1
         call $assembly/object/isObjectType
         local.set $1
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $1
         i32.eqz
         if
          i32.const 22352
          local.set $0
          global.get $~lib/memory/__stack_pointer
          i32.const 22352
          i32.store $0
          br $folding-inner2
         end
         global.get $~lib/memory/__stack_pointer
         local.set $1
         i32.const 0
         call $assembly/vm/peek
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         local.get $1
         local.get $5
         call $assembly/object/AS_CLASS
         local.tee $1
         i32.store $0 offset=144
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=32
         local.get $0
         call $assembly/object/AS_CLASS
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=12
         local.tee $0
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load $0 offset=12
         local.tee $5
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 28
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22792
         i32.lt_s
         br_if $folding-inner5
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.const 28
         memory.fill $0
         local.get $1
         local.get $0
         i32.store $0
         local.get $1
         local.get $0
         call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys
         local.tee $6
         i32.store $0 offset=4
         i32.const 0
         local.set $1
         loop $for-loop|0
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          call $~lib/array/Array<assembly/object/ObjString>#get:length
          local.get $1
          i32.gt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $7
           local.get $5
           i32.store $0
           local.get $7
           local.get $6
           i32.store $0 offset=16
           local.get $6
           local.get $1
           call $~lib/array/Array<assembly/compiler/ParseRule>#__get
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=16
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=24
           local.get $6
           local.get $1
           call $~lib/array/Array<assembly/compiler/ParseRule>#__get
           local.set $8
           global.get $~lib/memory/__stack_pointer
           local.get $8
           i32.store $0 offset=20
           local.get $0
           local.get $8
           call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get
           local.set $8
           global.get $~lib/memory/__stack_pointer
           local.get $8
           i32.store $0 offset=12
           local.get $5
           local.get $7
           local.get $8
           call $assembly/table/tableSet
           drop
           local.get $1
           i32.const 1
           i32.add
           local.set $1
           br $for-loop|0
          end
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 28
         i32.add
         global.set $~lib/memory/__stack_pointer
         call $assembly/vm/pop
         drop
         br $break|2
        end
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=4
        i32.const 1
        global.set $~argumentsLength
        local.get $2
        i32.const 20496
        i32.load $0
        call_indirect $0 (type $i32_=>_i32)
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 22792
        i32.lt_s
        br_if $folding-inner5
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i32.const 0
        i32.const 24
        memory.fill $0
        local.get $1
        i32.const 0
        call $assembly/vm/peek
        local.tee $1
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.set $5
        i32.const 1
        call $assembly/vm/peek
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=4
        local.get $5
        local.get $6
        call $assembly/object/AS_CLASS
        local.tee $5
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=20
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.load $0 offset=12
        local.tee $5
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=16
        local.get $5
        local.get $0
        local.get $1
        call $assembly/table/tableSet
        drop
        call $assembly/vm/pop
        drop
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
       end
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 1056
     i32.store $0 offset=16
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
    end
    local.get $0
    call $assembly/vm/runtimeError
    br $folding-inner0
   end
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 148
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/interpret (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $1
   i32.const 1056
   i32.store $0
   i32.const 1056
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   i32.const 16320
   i32.store $0
   i32.const 16320
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/scanner/initScanner
   i32.const -1
   local.set $2
   i32.const 1056
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 1056
   i32.store $0 offset=4
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    call $assembly/scanner/scanToken
    local.tee $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    i32.load16_u $0 offset=8
    local.get $2
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     local.get $3
     i32.store $0 offset=16
     local.get $3
     i32.load16_u $0 offset=8
     call $~lib/util/number/utoa32
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=12
     local.get $2
     local.get $1
     local.get $4
     call $~lib/string/String.__concat
     local.tee $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.load16_u $0 offset=8
     local.set $2
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $1
     i32.store $0
     local.get $4
     i32.const 16384
     i32.store $0 offset=12
     local.get $4
     local.get $1
     i32.const 16384
     call $~lib/string/String.__concat
     local.tee $1
     i32.store $0 offset=4
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $1
    i32.store $0
    local.get $4
    i32.const 11360
    i32.store $0 offset=16
    local.get $4
    local.get $3
    i32.store $0 offset=20
    local.get $4
    i32.const 11360
    local.get $3
    i32.load $0
    call $~lib/array/Array<assembly/compiler/ParseRule>#__get
    local.tee $5
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=4
    local.tee $6
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    i32.const 16480
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=32
    i32.const 16480
    i32.const 1
    local.get $5
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16480
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=32
    i32.const 16480
    i32.const 3
    local.get $6
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16480
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 1056
    i32.store $0 offset=20
    i32.const 16480
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $4
    local.get $1
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    i32.load $0
    i32.const 39
    i32.ne
    br_if $while-continue|0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/scanner/initScanner
   global.get $~lib/memory/__stack_pointer
   call $assembly/compiler/Compiler#constructor
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 3
   call $assembly/compiler/initCompiler
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   i32.store8 $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   i32.store8 $0 offset=9
   call $assembly/compiler/advance
   loop $while-continue|00
    i32.const 39
    call $assembly/compiler/check
    if (result i32)
     call $assembly/compiler/advance
     i32.const 1
    else
     i32.const 0
    end
    i32.eqz
    if
     call $assembly/compiler/declaration
     br $while-continue|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   call $assembly/compiler/endCompiler
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/parser
   local.tee $2
   i32.store $0
   i32.const 0
   local.get $0
   local.get $2
   i32.load8_u $0 offset=8
   select
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $assembly/value/OBJ_VAL
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/vm/push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/object/ObjClosure#constructor
   local.tee $0
   i32.store $0 offset=12
   call $assembly/vm/pop
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $assembly/value/OBJ_VAL
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/vm/push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   call $assembly/vm/call
   drop
   call $assembly/vm/run
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/index/main (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   i32.const 1056
   i32.store $0
   i32.const 1056
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   i32.const 1056
   i32.store $0
   i32.const 1056
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   i32.const 16096
   i32.store $0
   i32.const 16096
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/index/debugLog
   i32.const 1056
   global.set $assembly/index/outputstring
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   call $assembly/vm/VM#constructor
   global.set $assembly/vm/vm
   call $assembly/vm/resetStack
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $1
   i32.store $0
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=16
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $1
   i32.store $0
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=20
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/vm/vm
   local.tee $2
   i32.store $0
   local.get $1
   i32.const 16192
   i32.store $0 offset=8
   i32.const 16192
   call $assembly/object/copyString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=24
   local.get $1
   if
    local.get $2
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 16224
   i32.store $0
   local.get $1
   i32.const 16256
   i32.store $0 offset=4
   local.get $1
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 16224
   i32.store $0 offset=8
   i32.const 16224
   call $assembly/object/copyString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $assembly/value/OBJ_VAL
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/vm/push
   global.get $~lib/memory/__stack_pointer
   i32.const 16256
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 12
   i32.const 51
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16288
   i32.store $0 offset=8
   local.get $1
   i32.const 16288
   i32.store $0 offset=8
   local.get $1
   i32.const 16288
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $assembly/object/Obj#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16256
   i32.store $0 offset=8
   local.get $1
   i32.const 16256
   i32.store $0 offset=8
   local.get $1
   i32.const 16256
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 5
   i32.store $0
   local.get $2
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $assembly/value/OBJ_VAL
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/vm/push
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=16
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=8
   local.tee $1
   i32.store $0 offset=16
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $assembly/object/AS_STRING
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $3
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   i32.const 1
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $3
   call $assembly/table/tableSet
   drop
   call $assembly/vm/pop
   drop
   call $assembly/vm/pop
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/vm/interpret
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   global.get $assembly/vm/vm
   local.tee $0
   i32.store $0
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=20
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/vm/vm
   local.tee $0
   i32.store $0
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=20
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22792
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   global.get $assembly/vm/vm
   local.tee $1
   i32.store $0
   local.get $0
   local.get $1
   i32.load $0 offset=32
   local.tee $0
   i32.store $0 offset=4
   loop $while-continue|0
    local.get $0
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $0
     i32.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0 offset=4
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $assembly/index/outputstring
   return
  end
  i32.const 55584
  i32.const 55632
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/object/Object#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<u8>#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1520
   i32.const 1568
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1520
   i32.const 1568
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.shl
  i32.const 14
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2336
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $0
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $2
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  local.get $1
  local.get $0
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1520
   i32.const 1824
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/index/printout (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/debugLog (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/main (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22792
  i32.lt_s
  if
   i32.const 55584
   i32.const 55632
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/main
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 1152
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load $0 offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)
