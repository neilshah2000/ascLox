(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $none_=>_f64 (func (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (global $assembly/index/outputstring (mut i32) (i32.const 32))
 (global $assembly/index/debugFlag (mut i32) (i32.const 0))
 (global $assembly/vm/FRAMES_MAX i32 (i32.const 64))
 (global $assembly/vm/STACK_MAX i32 (i32.const 256))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $assembly/memory/GROW_CAPACITY i32 (i32.const 464))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $assembly/memory/GROW_UINT8_ARRAY i32 (i32.const 608))
 (global $assembly/memory/GROW_VALUE_ARRAY i32 (i32.const 768))
 (global $assembly/memory/GROW_UINT16_ARRAY i32 (i32.const 928))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $assembly/memory/storeCodeString i32 (i32.const 2896))
 (global $assembly/value/ValueType.VAL_BOOL i32 (i32.const 0))
 (global $assembly/value/ValueType.VAL_NIL i32 (i32.const 1))
 (global $assembly/value/ValueType.VAL_NUMBER i32 (i32.const 2))
 (global $assembly/value/ValueType.VAL_OBJ i32 (i32.const 3))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $assembly/object/ObjType.OBJ_BOUND_METHOD i32 (i32.const 0))
 (global $assembly/object/ObjType.OBJ_CLASS i32 (i32.const 1))
 (global $assembly/object/ObjType.OBJ_CLOSURE i32 (i32.const 2))
 (global $assembly/object/ObjType.OBJ_FUNCTION i32 (i32.const 3))
 (global $assembly/object/ObjType.OBJ_INSTANCE i32 (i32.const 4))
 (global $assembly/object/ObjType.OBJ_NATIVE i32 (i32.const 5))
 (global $assembly/object/ObjType.OBJ_STRING i32 (i32.const 6))
 (global $assembly/object/ObjType.OBJ_UPVALUE i32 (i32.const 7))
 (global $assembly/value/printValueToString i32 (i32.const 4720))
 (global $assembly/chunk/OpCode.OP_CONSTANT i32 (i32.const 0))
 (global $assembly/chunk/OpCode.OP_NIL i32 (i32.const 1))
 (global $assembly/chunk/OpCode.OP_TRUE i32 (i32.const 2))
 (global $assembly/chunk/OpCode.OP_FALSE i32 (i32.const 3))
 (global $assembly/chunk/OpCode.OP_POP i32 (i32.const 4))
 (global $assembly/chunk/OpCode.OP_GET_LOCAL i32 (i32.const 5))
 (global $assembly/chunk/OpCode.OP_SET_LOCAL i32 (i32.const 6))
 (global $assembly/chunk/OpCode.OP_GET_GLOBAL i32 (i32.const 7))
 (global $assembly/chunk/OpCode.OP_DEFINE_GLOBAL i32 (i32.const 8))
 (global $assembly/chunk/OpCode.OP_SET_GLOBAL i32 (i32.const 9))
 (global $assembly/chunk/OpCode.OP_GET_UPVALUE i32 (i32.const 10))
 (global $assembly/chunk/OpCode.OP_SET_UPVALUE i32 (i32.const 11))
 (global $assembly/chunk/OpCode.OP_GET_PROPERTY i32 (i32.const 12))
 (global $assembly/chunk/OpCode.OP_SET_PROPERTY i32 (i32.const 13))
 (global $assembly/chunk/OpCode.OP_GET_SUPER i32 (i32.const 14))
 (global $assembly/chunk/OpCode.OP_EQUAL i32 (i32.const 15))
 (global $assembly/chunk/OpCode.OP_GREATER i32 (i32.const 16))
 (global $assembly/chunk/OpCode.OP_LESS i32 (i32.const 17))
 (global $assembly/chunk/OpCode.OP_ADD i32 (i32.const 18))
 (global $assembly/chunk/OpCode.OP_SUBTRACT i32 (i32.const 19))
 (global $assembly/chunk/OpCode.OP_MULTIPLY i32 (i32.const 20))
 (global $assembly/chunk/OpCode.OP_DIVIDE i32 (i32.const 21))
 (global $assembly/chunk/OpCode.OP_NOT i32 (i32.const 22))
 (global $assembly/chunk/OpCode.OP_NEGATE i32 (i32.const 23))
 (global $assembly/chunk/OpCode.OP_PRINT i32 (i32.const 24))
 (global $assembly/chunk/OpCode.OP_JUMP i32 (i32.const 25))
 (global $assembly/chunk/OpCode.OP_JUMP_IF_FALSE i32 (i32.const 26))
 (global $assembly/chunk/OpCode.OP_LOOP i32 (i32.const 27))
 (global $assembly/chunk/OpCode.OP_CALL i32 (i32.const 28))
 (global $assembly/chunk/OpCode.OP_INVOKE i32 (i32.const 29))
 (global $assembly/chunk/OpCode.OP_SUPER_INVOKE i32 (i32.const 30))
 (global $assembly/chunk/OpCode.OP_CLOSURE i32 (i32.const 31))
 (global $assembly/chunk/OpCode.OP_CLOSE_UPVALUE i32 (i32.const 32))
 (global $assembly/chunk/OpCode.OP_RETURN i32 (i32.const 33))
 (global $assembly/chunk/OpCode.OP_CLASS i32 (i32.const 34))
 (global $assembly/chunk/OpCode.OP_INHERIT i32 (i32.const 35))
 (global $assembly/chunk/OpCode.OP_METHOD i32 (i32.const 36))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/vm/vm (mut i32) (i32.const 0))
 (global $assembly/debug/simpleInstruction i32 (i32.const 4800))
 (global $assembly/debug/byteInstruction i32 (i32.const 4896))
 (global $assembly/debug/jumpInstruction i32 (i32.const 5008))
 (global $assembly/debug/constantInstruction i32 (i32.const 5200))
 (global $assembly/debug/disassembleInstruction i32 (i32.const 7712))
 (global $assembly/debug/disassembleChunk i32 (i32.const 8032))
 (global $assembly/scanner/TokenType.TOKEN_LEFT_PAREN i32 (i32.const 0))
 (global $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN i32 (i32.const 1))
 (global $assembly/scanner/TokenType.TOKEN_LEFT_BRACE i32 (i32.const 2))
 (global $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE i32 (i32.const 3))
 (global $assembly/scanner/TokenType.TOKEN_COMMA i32 (i32.const 4))
 (global $assembly/scanner/TokenType.TOKEN_DOT i32 (i32.const 5))
 (global $assembly/scanner/TokenType.TOKEN_MINUS i32 (i32.const 6))
 (global $assembly/scanner/TokenType.TOKEN_PLUS i32 (i32.const 7))
 (global $assembly/scanner/TokenType.TOKEN_SEMICOLON i32 (i32.const 8))
 (global $assembly/scanner/TokenType.TOKEN_SLASH i32 (i32.const 9))
 (global $assembly/scanner/TokenType.TOKEN_STAR i32 (i32.const 10))
 (global $assembly/scanner/TokenType.TOKEN_BANG i32 (i32.const 11))
 (global $assembly/scanner/TokenType.TOKEN_BANG_EQUAL i32 (i32.const 12))
 (global $assembly/scanner/TokenType.TOKEN_EQUAL i32 (i32.const 13))
 (global $assembly/scanner/TokenType.TOKEN_EQUAL_EQUAL i32 (i32.const 14))
 (global $assembly/scanner/TokenType.TOKEN_GREATER i32 (i32.const 15))
 (global $assembly/scanner/TokenType.TOKEN_GREATER_EQUAL i32 (i32.const 16))
 (global $assembly/scanner/TokenType.TOKEN_LESS i32 (i32.const 17))
 (global $assembly/scanner/TokenType.TOKEN_LESS_EQUAL i32 (i32.const 18))
 (global $assembly/scanner/TokenType.TOKEN_IDENTIFIER i32 (i32.const 19))
 (global $assembly/scanner/TokenType.TOKEN_STRING i32 (i32.const 20))
 (global $assembly/scanner/TokenType.TOKEN_NUMBER i32 (i32.const 21))
 (global $assembly/scanner/TokenType.TOKEN_AND i32 (i32.const 22))
 (global $assembly/scanner/TokenType.TOKEN_CLASS i32 (i32.const 23))
 (global $assembly/scanner/TokenType.TOKEN_ELSE i32 (i32.const 24))
 (global $assembly/scanner/TokenType.TOKEN_FALSE i32 (i32.const 25))
 (global $assembly/scanner/TokenType.TOKEN_FOR i32 (i32.const 26))
 (global $assembly/scanner/TokenType.TOKEN_FUN i32 (i32.const 27))
 (global $assembly/scanner/TokenType.TOKEN_IF i32 (i32.const 28))
 (global $assembly/scanner/TokenType.TOKEN_NIL i32 (i32.const 29))
 (global $assembly/scanner/TokenType.TOKEN_OR i32 (i32.const 30))
 (global $assembly/scanner/TokenType.TOKEN_PRINT i32 (i32.const 31))
 (global $assembly/scanner/TokenType.TOKEN_RETURN i32 (i32.const 32))
 (global $assembly/scanner/TokenType.TOKEN_SUPER i32 (i32.const 33))
 (global $assembly/scanner/TokenType.TOKEN_THIS i32 (i32.const 34))
 (global $assembly/scanner/TokenType.TOKEN_TRUE i32 (i32.const 35))
 (global $assembly/scanner/TokenType.TOKEN_VAR i32 (i32.const 36))
 (global $assembly/scanner/TokenType.TOKEN_WHILE i32 (i32.const 37))
 (global $assembly/scanner/TokenType.TOKEN_ERROR i32 (i32.const 38))
 (global $assembly/scanner/TokenType.TOKEN_EOF i32 (i32.const 39))
 (global $assembly/scanner/tokenTypeStrings i32 (i32.const 10336))
 (global $assembly/scanner/scanner (mut i32) (i32.const 0))
 (global $assembly/scanner/codestring (mut i32) (i32.const 32))
 (global $assembly/compiler/Precedence.PREC_NONE i32 (i32.const 0))
 (global $assembly/compiler/Precedence.PREC_ASSIGNMENT i32 (i32.const 1))
 (global $assembly/compiler/Precedence.PREC_OR i32 (i32.const 2))
 (global $assembly/compiler/Precedence.PREC_AND i32 (i32.const 3))
 (global $assembly/compiler/Precedence.PREC_EQUALITY i32 (i32.const 4))
 (global $assembly/compiler/Precedence.PREC_COMPARISON i32 (i32.const 5))
 (global $assembly/compiler/Precedence.PREC_TERM i32 (i32.const 6))
 (global $assembly/compiler/Precedence.PREC_FACTOR i32 (i32.const 7))
 (global $assembly/compiler/Precedence.PREC_UNARY i32 (i32.const 8))
 (global $assembly/compiler/Precedence.PREC_CALL i32 (i32.const 9))
 (global $assembly/compiler/Precedence.PREC_PRIMARY i32 (i32.const 10))
 (global $assembly/compiler/FunctionType.TYPE_FUNCTION i32 (i32.const 0))
 (global $assembly/compiler/FunctionType.TYPE_INITIALIZER i32 (i32.const 1))
 (global $assembly/compiler/FunctionType.TYPE_METHOD i32 (i32.const 2))
 (global $assembly/compiler/FunctionType.TYPE_SCRIPT i32 (i32.const 3))
 (global $assembly/compiler/U8_COUNT i32 (i32.const 256))
 (global $assembly/compiler/parser (mut i32) (i32.const 0))
 (global $assembly/compiler/current (mut i32) (i32.const 0))
 (global $assembly/compiler/currentClass (mut i32) (i32.const 0))
 (global $assembly/compiler/rules i32 (i32.const 10416))
 (global $~lib/builtins/u8.MAX_VALUE i32 (i32.const 255))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/builtins/u16.MAX_VALUE i32 (i32.const 65535))
 (global $assembly/vm/InterpretResult.INTERPRET_OK i32 (i32.const 0))
 (global $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR i32 (i32.const 1))
 (global $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR i32 (i32.const 2))
 (global $~lib/rt/__rtti_base i32 (i32.const 21520))
 (global $~lib/memory/__data_end i32 (i32.const 21768))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 54536))
 (global $~lib/memory/__heap_base i32 (i32.const 54536))
 (memory $0 1)
 (data (i32.const 12) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 44) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 108) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 176) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 208) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 236) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 300) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 352) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 380) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 476) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 524) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 588) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 620) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 748) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 780) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 844) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 908) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 940) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\000\001\002\003\004\005\006\007\008\009\00\00\00\00\00\00\00\00\00")
 (data (i32.const 988) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1036) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00m\00e\00m\00o\00r\00y\00 \00s\00t\00o\00r\00e\00d\00 \00s\00t\00r\00i\00n\00g\00:\00 \00")
 (data (i32.const 1100) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1228) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1292) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 1724) "\1c\04\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2780) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 2876) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00r\00u\00e\00\00\00\00\00")
 (data (i32.const 2940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00f\00a\00l\00s\00e\00\00\00")
 (data (i32.const 2972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00n\00i\00l\00\00\00\00\00\00\00")
 (data (i32.const 3004) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 3036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 3068) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3116) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3168) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3224) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 3920) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 4096) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 4140) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4268) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00v\00a\00l\00u\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4332) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4396) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00o\00b\00j\00e\00c\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4460) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00<\00s\00c\00r\00i\00p\00t\00>\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00<\00f\00n\00 \00\00\00\00\00")
 (data (i32.const 4540) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\b0\11\00\00\00\00\00\00\d0\11\00\00")
 (data (i32.const 4604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00i\00n\00s\00t\00a\00n\00c\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00<\00n\00a\00t\00i\00v\00e\00 \00f\00n\00>\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4732) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 4780) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4844) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\e0\12\00\00\00\00\00\00")
 (data (i32.const 4876) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00 \00-\00>\00 \00\00\00\00\00")
 (data (i32.const 4940) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\e0\12\00\00\00\00\00\00@\13\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00 \00\t\00\t\00\t\00\t\00\t\00")
 (data (i32.const 5052) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00\t\00\t\00\t\00\t\00\t\00\'\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5100) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5132) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\18\00\00\00\00\00\00\00\b0\13\00\00\00\00\00\00\d0\13\00\00\00\00\00\00\00\14\00\00\00\00\00\00")
 (data (i32.const 5180) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5212) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00 \00 \00\t\00\t\00\t\00|\00 \00 \00\t\00\t\00\t\00\00\00\00\00\00\00")
 (data (i32.const 5260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00 \00 \00\t\00\t\00\t\00\00\00")
 (data (i32.const 5292) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00\t\00\t\00\t\00\00\00\00\00\00\00")
 (data (i32.const 5324) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\10\00\00\00\00\00\00\00\a0\14\00\00\00\00\00\00\c0\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00 \00O\00P\00_\00C\00O\00N\00S\00T\00A\00N\00T\00\00\00\00\00")
 (data (i32.const 5420) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00O\00P\00_\00N\00I\00L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00O\00P\00_\00T\00R\00U\00E\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5516) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00O\00P\00_\00F\00A\00L\00S\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00O\00P\00_\00P\00O\00P\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5612) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00L\00O\00C\00A\00L\00\00\00")
 (data (i32.const 5660) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00L\00O\00C\00A\00L\00\00\00")
 (data (i32.const 5708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00G\00L\00O\00B\00A\00L\00")
 (data (i32.const 5756) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00 \00O\00P\00_\00D\00E\00F\00I\00N\00E\00_\00G\00L\00O\00B\00A\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5820) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00G\00L\00O\00B\00A\00L\00")
 (data (i32.const 5868) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00U\00P\00V\00A\00L\00U\00E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5932) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00 \00O\00P\00_\00S\00E\00T\00_\00U\00P\00V\00A\00L\00U\00E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5996) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00 \00O\00P\00_\00G\00E\00T\00_\00P\00R\00O\00P\00E\00R\00T\00Y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6060) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00 \00O\00P\00_\00S\00E\00T\00_\00P\00R\00O\00P\00E\00R\00T\00Y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00 \00O\00P\00_\00G\00E\00T\00_\00S\00U\00P\00E\00R\00\00\00")
 (data (i32.const 6172) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00O\00P\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6220) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00 \00O\00P\00_\00G\00R\00E\00A\00T\00E\00R\00\00\00\00\00\00\00")
 (data (i32.const 6268) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00O\00P\00_\00L\00E\00S\00S\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6316) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00O\00P\00_\00A\00D\00D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6364) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00 \00O\00P\00_\00S\00U\00B\00T\00R\00A\00C\00T\00\00\00\00\00")
 (data (i32.const 6412) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00 \00O\00P\00_\00M\00U\00L\00T\00I\00P\00L\00Y\00\00\00\00\00")
 (data (i32.const 6460) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00O\00P\00_\00D\00I\00V\00I\00D\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6508) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00O\00P\00_\00N\00O\00T\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6556) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00O\00P\00_\00N\00E\00G\00A\00T\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00O\00P\00_\00P\00R\00I\00N\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00O\00P\00_\00J\00U\00M\00P\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6700) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00 \00O\00P\00_\00J\00U\00M\00P\00_\00I\00F\00_\00F\00A\00L\00S\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00O\00P\00_\00L\00O\00O\00P\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6812) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00O\00P\00_\00C\00A\00L\00L\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6860) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00O\00P\00_\00I\00N\00V\00O\00K\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00 \00\t\00\t\00\t\00\00\00\00\00")
 (data (i32.const 6940) "<\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00 \00\00\00\00\00\00\00\10\1b\00\00\00\00\00\00\b0\13\00\00\00\00\00\00\d0\13\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7004) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00 \00O\00P\00_\00S\00U\00P\00E\00R\00_\00I\00N\00V\00O\00K\00E\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7068) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00 \00O\00P\00_\00C\00L\00O\00S\00U\00R\00E\00 \00\t\00\00\00")
 (data (i32.const 7116) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\b0\1b\00\00\00\00\00\00\10\1b\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7164) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00\t\00\t\00\t\00\t\00\t\00\t\00|\00\t\00\t\00\t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7212) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00\00\00\00\00\10\1c\00\00\00\00\00\00\e0\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00l\00o\00c\00a\00l\00\00\00")
 (data (i32.const 7292) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00u\00p\00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7340) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00 \00O\00P\00_\00C\00L\00O\00S\00E\00_\00U\00P\00V\00A\00L\00U\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7404) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00O\00P\00_\00R\00E\00T\00U\00R\00N\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7452) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00 \00O\00P\00_\00C\00L\00A\00S\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7500) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00 \00O\00P\00_\00I\00N\00H\00E\00R\00I\00T\00\00\00\00\00\00\00")
 (data (i32.const 7548) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00 \00O\00P\00_\00M\00E\00T\00H\00O\00D\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7596) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00 \00U\00n\00k\00n\00o\00w\00n\00 \00o\00p\00c\00o\00d\00e\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7660) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\c0\1d\00\00\00\00\00\00")
 (data (i32.const 7692) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7724) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00=\00=\00 \00\00\00\00\00\00\00")
 (data (i32.const 7756) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00 \00=\00=\00\00\00\00\00\00\00")
 (data (i32.const 7788) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00@\1e\00\00\00\00\00\00`\1e\00\00")
 (data (i32.const 7820) "\bc\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\a0\00\00\00o\00f\00f\00s\00e\00t\00 \00 \00\t\00l\00i\00n\00e\00 \00n\00o\00.\00 \00 \00\t\00 \00b\00y\00t\00e\00c\00o\00d\00e\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00 \00 \00\t\00c\00o\00n\00s\00t\00a\00n\00t\00 \00i\00n\00d\00e\00x\00 \00 \00\t\00c\00o\00n\00s\00t\00a\00n\00t\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8012) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8044) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00F\00T\00_\00P\00A\00R\00E\00N\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8108) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00R\00I\00G\00H\00T\00_\00P\00A\00R\00E\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8172) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00F\00T\00_\00B\00R\00A\00C\00E\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8236) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00R\00I\00G\00H\00T\00_\00B\00R\00A\00C\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8300) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00C\00O\00M\00M\00A\00\00\00\00\00\00\00")
 (data (i32.const 8348) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00D\00O\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8396) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00M\00I\00N\00U\00S\00\00\00\00\00\00\00")
 (data (i32.const 8444) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00P\00L\00U\00S\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8492) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00T\00O\00K\00E\00N\00_\00S\00E\00M\00I\00C\00O\00L\00O\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8556) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00S\00L\00A\00S\00H\00\00\00\00\00\00\00")
 (data (i32.const 8604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00S\00T\00A\00R\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00B\00A\00N\00G\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8700) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00B\00A\00N\00G\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00")
 (data (i32.const 8812) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00T\00O\00K\00E\00N\00_\00E\00Q\00U\00A\00L\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8876) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00T\00O\00K\00E\00N\00_\00G\00R\00E\00A\00T\00E\00R\00\00\00")
 (data (i32.const 8924) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00T\00O\00K\00E\00N\00_\00G\00R\00E\00A\00T\00E\00R\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00")
 (data (i32.const 8988) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00L\00E\00S\00S\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9036) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00L\00E\00S\00S\00_\00E\00Q\00U\00A\00L\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9100) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00T\00O\00K\00E\00N\00_\00I\00D\00E\00N\00T\00I\00F\00I\00E\00R\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9164) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00S\00T\00R\00I\00N\00G\00\00\00\00\00")
 (data (i32.const 9212) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00N\00U\00M\00B\00E\00R\00\00\00\00\00")
 (data (i32.const 9260) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00A\00N\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9308) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00C\00L\00A\00S\00S\00\00\00\00\00\00\00")
 (data (i32.const 9356) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00E\00L\00S\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9404) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00F\00A\00L\00S\00E\00\00\00\00\00\00\00")
 (data (i32.const 9452) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00F\00O\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9500) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00F\00U\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9548) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00T\00O\00K\00E\00N\00_\00I\00F\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9596) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00N\00I\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9644) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00T\00O\00K\00E\00N\00_\00O\00R\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9692) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00P\00R\00I\00N\00T\00\00\00\00\00\00\00")
 (data (i32.const 9740) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00T\00O\00K\00E\00N\00_\00R\00E\00T\00U\00R\00N\00\00\00\00\00")
 (data (i32.const 9788) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00S\00U\00P\00E\00R\00\00\00\00\00\00\00")
 (data (i32.const 9836) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00T\00H\00I\00S\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9884) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00T\00O\00K\00E\00N\00_\00T\00R\00U\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9932) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00V\00A\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9980) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00W\00H\00I\00L\00E\00\00\00\00\00\00\00")
 (data (i32.const 10028) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00T\00O\00K\00E\00N\00_\00E\00R\00R\00O\00R\00\00\00\00\00\00\00")
 (data (i32.const 10076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00T\00O\00K\00E\00N\00_\00E\00O\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10124) "\bc\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\a0\00\00\00\80\1f\00\00\c0\1f\00\00\00 \00\00@ \00\00\80 \00\00\b0 \00\00\e0 \00\00\10!\00\00@!\00\00\80!\00\00\b0!\00\00\e0!\00\00\10\"\00\00P\"\00\00\80\"\00\00\c0\"\00\00\f0\"\00\000#\00\00`#\00\00\a0#\00\00\e0#\00\00\10$\00\00@$\00\00p$\00\00\a0$\00\00\d0$\00\00\00%\00\000%\00\00`%\00\00\90%\00\00\c0%\00\00\f0%\00\00 &\00\00P&\00\00\80&\00\00\b0&\00\00\e0&\00\00\10\'\00\00@\'\00\00p\'\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10316) ",\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\10\00\00\00\a0\'\00\00\a0\'\00\00\a0\00\00\00(\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10396) ",\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\10\00\00\00\90(\00\00\90(\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10476) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10540) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10572) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10604) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10636) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10668) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10700) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10732) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10764) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10796) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10828) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10860) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10892) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10924) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10956) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10988) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11052) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11084) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11116) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11148) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11180) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00n\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11212) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00l\00a\00s\00s\00\00\00\00\00")
 (data (i32.const 11244) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00l\00s\00e\00\00\00\00\00\00\00")
 (data (i32.const 11276) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11308) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00i\00l\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11340) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00r\00i\00n\00t\00\00\00\00\00")
 (data (i32.const 11372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00e\00t\00u\00r\00n\00\00\00")
 (data (i32.const 11404) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00u\00p\00e\00r\00\00\00\00\00")
 (data (i32.const 11436) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11468) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00i\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11500) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00u\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11532) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00a\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11564) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00h\00i\00l\00e\00\00\00\00\00")
 (data (i32.const 11596) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11628) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11660) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11692) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11724) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11756) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11788) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11820) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11852) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11884) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11916) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11948) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12012) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12044) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00.\00\00\00\00\00")
 (data (i32.const 12108) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00.\00\00\00")
 (data (i32.const 12172) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00[\00l\00i\00n\00e\00 \00")
 (data (i32.const 12204) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00]\00 \00E\00r\00r\00o\00r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12252) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\a0/\00\00\00\00\00\00\c0/\00\00")
 (data (i32.const 12284) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00 \00a\00t\00 \00e\00n\00d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12332) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00 \00a\00t\00 \00\00\00\00\00")
 (data (i32.const 12364) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00C\00O\00M\00P\00I\00L\00E\00 \00E\00R\00R\00O\00R\00\00\00")
 (data (i32.const 12412) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 12444) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\900\00\00\00\00\00\00")
 (data (i32.const 12476) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\00\00\00\00\900\00\00\00\00\00\00")
 (data (i32.const 12508) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00E\00x\00p\00e\00c\00t\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12572) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00a\00s\00s\00i\00g\00n\00m\00e\00n\00t\00 \00t\00a\00r\00g\00e\00t\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12652) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.\00\00\00\00\00")
 (data (i32.const 12732) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12764) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00C\00a\00n\00\'\00t\00 \00h\00a\00v\00e\00 \00m\00o\00r\00e\00 \00t\00h\00a\00n\00 \002\005\005\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00.\00\00\00\00\00\00\00")
 (data (i32.const 12860) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00.\00\00\00\00\00\00\00")
 (data (i32.const 12940) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12972) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00E\00x\00p\00e\00c\00t\00 \00p\00r\00o\00p\00e\00r\00t\00y\00 \00n\00a\00m\00e\00 \00a\00f\00t\00e\00r\00 \00\'\00.\00\'\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13068) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00s\00e\00a\00r\00c\00h\00i\00n\00g\00 \00f\00o\00r\00 \00")
 (data (i32.const 13116) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00f\00o\00u\00n\00d\00 \00")
 (data (i32.const 13148) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00r\00e\00t\00u\00r\00n\00 \00i\00n\00t\00e\00r\00n\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00c\00o\00p\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13244) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00@\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00c\00o\00n\00s\00t\00a\00n\00t\00s\00 \00i\00n\00 \00o\00n\00e\00 \00c\00h\00u\00n\00k\00.\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13340) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13372) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13404) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13436) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00a\00d\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00i\00n\00 \00i\00t\00\'\00s\00 \00o\00w\00n\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00r\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13564) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00m\00p\00i\00l\00e\00r\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 13628) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00a\00d\00d\00i\00n\00g\00 \00l\00o\00c\00a\00l\00 \00u\00p\00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13708) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00N\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00c\00l\00o\00s\00u\00r\00e\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00i\00n\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13820) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00J\00\00\00a\00d\00d\00i\00n\00g\00 \00s\00u\00r\00r\00o\00u\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e\00 \00u\00p\00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00\00\00")
 (data (i32.const 13916) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13948) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13984) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 14172) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14204) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00T\00o\00o\00 \00m\00u\00c\00h\00 \00c\00o\00d\00e\00 \00t\00o\00 \00j\00u\00m\00p\00 \00o\00v\00e\00r\00.\00\00\00\00\00\00\00")
 (data (i32.const 14284) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14316) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14348) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14380) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00J\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00s\00u\00p\00e\00r\00\'\00 \00o\00u\00t\00s\00i\00d\00e\00 \00o\00f\00 \00a\00 \00c\00l\00a\00s\00s\00.\00\00\00")
 (data (i32.const 14476) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00`\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00s\00u\00p\00e\00r\00\'\00 \00i\00n\00 \00a\00 \00c\00l\00a\00s\00s\00 \00w\00i\00t\00h\00 \00n\00o\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00.\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14604) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00.\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00s\00u\00p\00e\00r\00\'\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14684) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00E\00x\00p\00e\00c\00t\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00m\00e\00t\00h\00o\00d\00 \00n\00a\00m\00e\00.\00")
 (data (i32.const 14764) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00h\00i\00s\00\00\00\00\00")
 (data (i32.const 14796) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00s\00u\00p\00e\00r\00\00\00")
 (data (i32.const 14828) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14860) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00C\00a\00n\00\'\00t\00 \00u\00s\00e\00 \00\'\00t\00h\00i\00s\00\'\00 \00o\00u\00t\00s\00i\00d\00e\00 \00o\00f\00 \00a\00 \00c\00l\00a\00s\00s\00.\00\00\00\00\00")
 (data (i32.const 14956) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14988) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00s\00e\00t\00t\00i\00n\00g\00 \00d\00e\00b\00u\00g\00 \00f\00l\00a\00g\00 \00t\00o\00 \00")
 (data (i32.const 15052) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00 \00s\00o\00u\00r\00c\00e\00 \00c\00o\00d\00e\00 \00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15148) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00i\00n\00i\00t\00\00\00\00\00")
 (data (i32.const 15180) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00c\00l\00o\00c\00k\00\00\00")
 (data (i32.const 15212) "\1c\00\00\00\00\00\00\00\00\00\00\002\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15244) "\1c\00\00\00\00\00\00\00\00\00\00\002\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15276) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00=\00=\00 \00c\00o\00m\00p\00i\00l\00e\00d\00 \00t\00o\00k\00e\00n\00s\00 \00=\00=\00\00\00")
 (data (i32.const 15340) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00|\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 15372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\t\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 15404) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00 \00\t\00 \00\00\00\00\00\00\00")
 (data (i32.const 15436) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\00 <\00\00\00\00\00\00@<\00\00\00\00\00\00 )\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15484) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00=\00=\00 \00s\00e\00t\00t\00i\00n\00g\00 \00u\00p\00 \00T\00O\00P\00 \00L\00E\00V\00E\00L\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=\00\00\00\00\00\00\00")
 (data (i32.const 15580) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00=\00=\00 \00s\00e\00t\00t\00i\00n\00g\00 \00u\00p\00 \00f\00n\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15644) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=\00\00\00\00\00")
 (data (i32.const 15692) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\f0<\00\00\00\00\00\000=\00\00")
 (data (i32.const 15724) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00E\00x\00p\00e\00c\00t\00 \00c\00l\00a\00s\00s\00 \00n\00a\00m\00e\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15788) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00`\00\00\00A\00l\00r\00e\00a\00d\00y\00 \00a\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00w\00i\00t\00h\00 \00t\00h\00i\00s\00 \00n\00a\00m\00e\00 \00i\00n\00 \00t\00h\00i\00s\00 \00s\00c\00o\00p\00e\00.\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15916) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00J\00\00\00T\00o\00o\00 \00m\00a\00n\00y\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00i\00n\00 \00f\00u\00n\00c\00t\00i\00o\00n\00.\00\00\00")
 (data (i32.const 16012) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00=\00=\00 \00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00s\00 \00=\00=\00\00\00")
 (data (i32.const 16076) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00n\00a\00m\00e\00:\00 \00")
 (data (i32.const 16108) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00,\00 \00d\00e\00p\00t\00h\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16156) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\10\00\00\00\e0>\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16204) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00s\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00n\00a\00m\00e\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16284) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00A\00 \00c\00l\00a\00s\00s\00 \00c\00a\00n\00\'\00t\00 \00i\00n\00h\00e\00r\00i\00t\00 \00f\00r\00o\00m\00 \00i\00t\00s\00e\00l\00f\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16380) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00b\00e\00g\00i\00n\00n\00i\00n\00g\00 \00s\00c\00o\00p\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16444) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00{\00\'\00 \00b\00e\00f\00o\00r\00e\00 \00c\00l\00a\00s\00s\00 \00b\00o\00d\00y\00.\00\00\00")
 (data (i32.const 16524) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00E\00x\00p\00e\00c\00t\00 \00m\00e\00t\00h\00o\00d\00 \00n\00a\00m\00e\00.\00\00\00\00\00\00\00")
 (data (i32.const 16588) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16684) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00C\00a\00n\00\'\00t\00 \00h\00a\00v\00e\00 \00m\00o\00r\00e\00 \00t\00h\00a\00n\00 \002\005\005\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00s\00.\00\00\00\00\00")
 (data (i32.const 16780) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00E\00x\00p\00e\00c\00t\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00 \00n\00a\00m\00e\00.\00")
 (data (i32.const 16844) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00p\00a\00r\00a\00m\00e\00t\00e\00r\00s\00.\00\00\00\00\00")
 (data (i32.const 16924) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00@\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00{\00\'\00 \00b\00e\00f\00o\00r\00e\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00b\00o\00d\00y\00.\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17020) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00}\00\'\00 \00a\00f\00t\00e\00r\00 \00b\00l\00o\00c\00k\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17100) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00=\00=\00 \00e\00n\00d\00 \00e\00n\00c\00l\00o\00s\00i\00n\00g\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00f\00o\00r\00 \00f\00n\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17196) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\e0B\00\00\00\00\00\00`\1e\00\00")
 (data (i32.const 17228) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00=\00=\00 \00e\00n\00d\00 \00o\00f\00 \00T\00O\00P\00 \00L\00E\00V\00E\00L\00 \00c\00o\00m\00p\00i\00l\00e\00r\00 \00=\00=\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17324) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00a\00d\00d\00i\00n\00g\00 \00l\00o\00c\00a\00l\00 \00b\00y\00t\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17388) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00a\00d\00d\00i\00n\00g\00 \00s\00u\00r\00r\00o\00u\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e\00 \00b\00y\00t\00e\00\00\00")
 (data (i32.const 17468) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00a\00d\00d\00i\00n\00g\00 \00i\00n\00d\00e\00x\00 \00b\00y\00t\00e\00:\00 \00\00\00\00\00\00\00")
 (data (i32.const 17532) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00}\00\'\00 \00a\00f\00t\00e\00r\00 \00c\00l\00a\00s\00s\00 \00b\00o\00d\00y\00.\00\00\00\00\00")
 (data (i32.const 17612) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00e\00n\00d\00i\00n\00g\00 \00s\00c\00o\00p\00e\00\00\00\00\00")
 (data (i32.const 17660) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00l\00o\00c\00a\00l\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00a\00t\00 \00a\00 \00h\00i\00g\00h\00e\00r\00 \00s\00c\00o\00p\00e\00 \00d\00e\00p\00t\00h\00")
 (data (i32.const 17756) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00E\00x\00p\00e\00c\00t\00 \00f\00u\00n\00c\00t\00i\00o\00n\00 \00n\00a\00m\00e\00.\00\00\00")
 (data (i32.const 17820) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00E\00x\00p\00e\00c\00t\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00n\00a\00m\00e\00\00\00\00\00")
 (data (i32.const 17884) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00d\00e\00c\00l\00a\00r\00a\00t\00i\00o\00n\00.\00")
 (data (i32.const 17980) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00v\00a\00l\00u\00e\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18060) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00f\00o\00r\00\'\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18140) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00.\00\00\00\00\00")
 (data (i32.const 18220) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00f\00t\00e\00r\00 \00l\00o\00o\00p\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18316) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00f\00o\00r\00 \00c\00l\00a\00u\00s\00e\00s\00.\00\00\00")
 (data (i32.const 18396) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00L\00o\00o\00p\00 \00b\00o\00d\00y\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00\00\00")
 (data (i32.const 18460) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00i\00f\00\'\00.\00")
 (data (i32.const 18524) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00)\00\'\00 \00a\00f\00t\00e\00r\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00.\00\00\00\00\00\00\00")
 (data (i32.const 18604) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00t\00u\00r\00n\00 \00f\00r\00o\00m\00 \00t\00o\00p\00-\00l\00e\00v\00e\00l\00 \00c\00o\00d\00e\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18700) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00R\00\00\00C\00a\00n\00\'\00t\00 \00r\00e\00t\00u\00r\00n\00 \00a\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00a\00n\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00r\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18812) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00;\00\'\00 \00a\00f\00t\00e\00r\00 \00r\00e\00t\00u\00r\00n\00 \00v\00a\00l\00u\00e\00.\00")
 (data (i32.const 18892) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00E\00x\00p\00e\00c\00t\00 \00\'\00(\00\'\00 \00a\00f\00t\00e\00r\00 \00\'\00w\00h\00i\00l\00e\00\'\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18972) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19020) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00 \00b\00u\00t\00 \00g\00o\00t\00 \00\00\00\00\00\00\00")
 (data (i32.const 19084) ",\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\14\00\00\000J\00\00\00\00\00\00`J\00\00\00\00\00\00`-\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19132) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00]\00 \00i\00n\00 \00\00\00")
 (data (i32.const 19164) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\a0/\00\00\00\00\00\00\d0J\00\00")
 (data (i32.const 19196) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00s\00c\00r\00i\00p\00t\00\n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19244) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00R\00U\00N\00T\00I\00M\00E\00 \00E\00R\00R\00O\00R\00\00\00")
 (data (i32.const 19292) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00S\00t\00a\00c\00k\00 \00o\00v\00e\00r\00f\00l\00o\00w\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19356) "\1c\00\00\00\00\00\00\00\00\00\00\004\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19388) "\1c\00\00\00\00\00\00\00\00\00\00\005\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19420) "\1c\00\00\00\00\00\00\00\00\00\00\006\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19452) "\1c\00\00\00\00\00\00\00\00\00\00\007\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19484) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00O\00p\00e\00r\00a\00n\00d\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00m\00b\00e\00r\00s\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19564) "\1c\00\00\00\00\00\00\00\00\00\00\008\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19596) "\1c\00\00\00\00\00\00\00\00\00\00\009\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19628) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00=\00=\00 \00e\00x\00e\00c\00u\00t\00i\00n\00g\00 \00b\00y\00t\00e\00c\00o\00d\00e\00 \00i\00n\00 \00V\00M\00 \00=\00=\00")
 (data (i32.const 19708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00\t\00\t\00\t\00 \00 \00s\00t\00a\00c\00k\00-\00>\00\t\00\00\00")
 (data (i32.const 19756) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19788) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19820) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00@M\00\00\00\00\00\00`M\00\00")
 (data (i32.const 19852) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19916) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 19964) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00g\00e\00t\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20044) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\10N\00\00\00\00\00\00`-\00\00")
 (data (i32.const 20076) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00s\00e\00t\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20156) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\80N\00\00\00\00\00\00`-\00\00")
 (data (i32.const 20188) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00p\00r\00o\00p\00e\00r\00t\00i\00e\00s\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20284) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00U\00n\00d\00e\00f\00i\00n\00e\00d\00 \00p\00r\00o\00p\00e\00r\00t\00y\00 \00\'\00\00\00\00\00")
 (data (i32.const 20348) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\'\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20380) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00PO\00\00\00\00\00\00\90O\00\00")
 (data (i32.const 20412) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00f\00i\00e\00l\00d\00s\00.\00\00\00\00\00\00\00")
 (data (i32.const 20492) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20524) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20556) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00r\00e\00t\00u\00r\00n\00 \00i\00n\00t\00e\00r\00n\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00t\00a\00k\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20652) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00O\00p\00e\00r\00a\00n\00d\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00t\00w\00o\00 \00n\00u\00m\00b\00e\00r\00s\00 \00o\00r\00 \00t\00w\00o\00 \00s\00t\00r\00i\00n\00g\00s\00.\00\00\00\00\00")
 (data (i32.const 20764) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20796) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20828) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20860) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00O\00p\00e\00r\00a\00n\00d\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00 \00n\00u\00m\00b\00e\00r\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20940) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \000\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00 \00b\00u\00t\00 \00g\00o\00t\00 \00\00\00")
 (data (i32.const 21020) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00\e0Q\00\00\00\00\00\00`-\00\00")
 (data (i32.const 21052) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00C\00a\00n\00 \00o\00n\00l\00y\00 \00c\00a\00l\00l\00 \00f\00u\00n\00c\00t\00i\00o\00n\00s\00 \00a\00n\00d\00 \00c\00l\00a\00s\00s\00e\00s\00.\00\00\00\00\00")
 (data (i32.const 21148) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00O\00n\00l\00y\00 \00i\00n\00s\00t\00a\00n\00c\00e\00s\00 \00h\00a\00v\00e\00 \00m\00e\00t\00h\00o\00d\00s\00.\00\00\00\00\00")
 (data (i32.const 21228) "\1c\00\00\00\03\00\00\00\00\00\00\00\1a\00\00\00\0c\00\00\00PO\00\00\00\00\00\00\90O\00\00")
 (data (i32.const 21260) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00v\00m\00.\00t\00s\00")
 (data (i32.const 21308) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00S\00u\00p\00e\00r\00c\00l\00a\00s\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00 \00c\00l\00a\00s\00s\00.\00\00\00\00\00\00\00")
 (data (i32.const 21388) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data (i32.const 21452) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data (i32.const 21520) "=\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00dt\00\00")
 (table $0 39 39 funcref)
 (elem $0 (i32.const 1) $start:assembly/memory~anonymous|0 $start:assembly/memory~anonymous|1 $start:assembly/memory~anonymous|2 $start:assembly/memory~anonymous|3 $start:assembly/memory~anonymous|4 $start:assembly/value~anonymous|0 $start:assembly/debug~anonymous|0 $start:assembly/debug~anonymous|1 $start:assembly/debug~anonymous|2 $start:assembly/debug~anonymous|3 $start:assembly/debug~anonymous|4 $start:assembly/debug~anonymous|5 $assembly/compiler/grouping $assembly/compiler/call $assembly/compiler/dot $assembly/compiler/unary $assembly/compiler/binary $assembly/compiler/variable $assembly/compiler/mString $assembly/compiler/number $assembly/compiler/and_ $assembly/compiler/literal $assembly/compiler/or_ $assembly/compiler/super_ $assembly/compiler/this_ $assembly/vm/clockNative $assembly/object/ObjNative#constructor~anonymous|0 $assembly/vm/run~anonymous|0 $assembly/vm/run~anonymous|1 $assembly/vm/run~anonymous|2 $assembly/vm/run~anonymous|3 $assembly/vm/run~anonymous|4 $assembly/vm/run~anonymous|5 $assembly/vm/run~anonymous|6 $assembly/vm/run~anonymous|7 $assembly/vm/run~anonymous|8 $assembly/vm/run~anonymous|9 $assembly/vm/run~anonymous|10)
 (export "setDebugFlag" (func $assembly/index/setDebugFlag))
 (export "getDebugFlag" (func $assembly/index/getDebugFlag))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "printout" (func $export:assembly/index/printout))
 (export "debugLog" (func $export:assembly/index/debugLog))
 (export "main" (func $export:assembly/index/main))
 (start $~start)
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $this i32) (param $nextWithColor i32)
  local.get $this
  local.get $nextWithColor
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
  return
 )
 (func $~lib/rt/itcms/Object#get:nextWithColor (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  return
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  return
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 128
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 128
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 128
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/itcms/Object#get:rtId (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/shared/typeinfo/Typeinfo#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   i32.const 256
   i32.const 320
   i32.const 21
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 4
  i32.mul
  i32.add
  call $~lib/shared/typeinfo/Typeinfo#get:flags
  return
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:rtId
  local.set $rtId
  local.get $rtId
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
  return
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 128
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  return
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $this i32) (param $flMap i32)
  local.get $this
  local.get $flMap
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $this i32) (param $mmInfo i32)
  local.get $this
  local.get $mmInfo
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $this i32) (param $next i32)
  local.get $this
  local.get $next
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/Block#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#get:next (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/rt/tlsf/Root#get:flMap (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/tlsf/Block#get:prev
  local.set $prev
  local.get $block
  call $~lib/rt/tlsf/Block#get:next
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  block $~lib/rt/tlsf/GETHEAD|inlined.0 (result i32)
   local.get $root
   local.set $root|11
   local.get $fl
   local.set $fl|12
   local.get $sl
   local.set $sl|13
   local.get $root|11
   local.get $fl|12
   i32.const 4
   i32.shl
   local.get $sl|13
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.0
  end
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    block $~lib/rt/tlsf/GETSL|inlined.0 (result i32)
     local.get $root
     local.set $root|18
     local.get $fl
     local.set $fl|19
     local.get $root|18
     local.get $fl|19
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.0
    end
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store $0 offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     call $~lib/rt/tlsf/Root#get:flMap
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETRIGHT|inlined.0 (result i32)
   local.get $block
   local.set $block|3
   local.get $block|3
   i32.const 4
   i32.add
   local.get $block|3
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   br $~lib/rt/tlsf/GETRIGHT|inlined.0
  end
  local.set $right
  local.get $right
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.1 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.1
   end
   local.set $right
   local.get $right
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   block $~lib/rt/tlsf/GETFREELEFT|inlined.0 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.sub
    i32.load $0
    br $~lib/rt/tlsf/GETFREELEFT|inlined.0
   end
   local.set $left
   local.get $left
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 400
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETHEAD|inlined.1 (result i32)
   local.get $root
   local.set $root|16
   local.get $fl
   local.set $fl|17
   local.get $sl
   local.set $sl|18
   local.get $root|16
   local.get $fl|17
   i32.const 4
   i32.shl
   local.get $sl|18
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.1
  end
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store $0 offset=96
  local.get $root
  local.get $root
  call $~lib/rt/tlsf/Root#get:flMap
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  block $~lib/rt/tlsf/GETSL|inlined.1 (result i32)
   local.get $root
   local.set $root|24
   local.get $fl
   local.set $fl|25
   local.get $root|24
   local.get $fl|25
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.1
  end
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $root|3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|9 i32)
  (local $tail|10 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  block $~lib/rt/tlsf/GETTAIL|inlined.0 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.0
  end
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 400
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    call $~lib/rt/common/BLOCK#get:mmInfo
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 400
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|9
  local.get $tail
  local.set $tail|10
  local.get $root|9
  local.get $tail|10
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
  return
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $root|7 i32)
  (local $fl|8 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store $0 offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   if
    local.get $root
    local.set $root|7
    local.get $fl
    local.set $fl|8
    i32.const 0
    local.set $slMap
    local.get $root|7
    local.get $fl|8
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store $0 offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     if
      local.get $root
      local.set $root|11
      local.get $fl
      local.set $fl|12
      local.get $sl
      local.set $sl|13
      i32.const 0
      local.set $head
      local.get $root|11
      local.get $fl|12
      i32.const 4
      i32.shl
      local.get $sl|13
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store $0 offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 128
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
  return
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
  return
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 64
   i32.const 400
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
  return
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $requestSize
   i32.const 31
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETSL|inlined.2 (result i32)
   local.get $root
   local.set $root|5
   local.get $fl
   local.set $fl|6
   local.get $root|5
   local.get $fl|6
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.2
  end
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   call $~lib/rt/tlsf/Root#get:flMap
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    block $~lib/rt/tlsf/GETSL|inlined.3 (result i32)
     local.get $root
     local.set $root|10
     local.get $fl
     local.set $fl|11
     local.get $root|10
     local.get $fl|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.3
    end
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 400
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    block $~lib/rt/tlsf/GETHEAD|inlined.2 (result i32)
     local.get $root
     local.set $root|12
     local.get $fl
     local.set $fl|13
     local.get $slMap
     i32.ctz
     local.set $sl|14
     local.get $root|12
     local.get $fl|13
     i32.const 4
     i32.shl
     local.get $sl|14
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=96
     br $~lib/rt/tlsf/GETHEAD|inlined.2
    end
    local.set $head
   end
  else
   block $~lib/rt/tlsf/GETHEAD|inlined.3 (result i32)
    local.get $root
    local.set $root|15
    local.get $fl
    local.set $fl|16
    local.get $slMap
    i32.ctz
    local.set $sl|17
    local.get $root|15
    local.get $fl|16
    i32.const 4
    i32.shl
    local.get $sl|17
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    br $~lib/rt/tlsf/GETHEAD|inlined.3
   end
   local.set $head
  end
  local.get $head
  return
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  block $~lib/rt/tlsf/GETTAIL|inlined.1 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.1
  end
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.3 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.add
    local.get $block|7
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.3
   end
   block $~lib/rt/tlsf/GETRIGHT|inlined.2 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.2
   end
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 400
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 400
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  return
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $this i32) (param $rtId i32)
  local.get $this
  local.get $rtId
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $this i32) (param $rtSize i32)
  local.get $this
  local.get $rtSize
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 64
   i32.const 128
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
  return
 )
 (func $start:assembly/memory~anonymous|0 (param $capacity i32) (result i32)
  local.get $capacity
  i32.const 8
  i32.lt_s
  if (result i32)
   i32.const 8
  else
   local.get $capacity
   i32.const 2
   i32.mul
  end
  return
 )
 (func $~lib/rt/common/OBJECT#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/staticarray/StaticArray<u8>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 0
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<u8>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8 $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 128
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 1
  i32.shr_u
  return
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $t|9 i32)
  (local $d1|10 i32)
  (local $digits i32)
  (local $digits|12 i32)
  (local $digit i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 1324
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 1324
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $t|9
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $d1|10
   local.get $t|9
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 1324
   local.get $d1|10
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $digits
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits
   i32.store $0
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 1324
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $digits|12
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits|12
   i32.store $0
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $digit
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digit
   i32.store16 $0
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 1744
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 1744
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u $0
   i32.store16 $0
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $value i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  block $~lib/util/number/isPowerOf2<i32>|inlined.0 (result i32)
   local.get $base
   local.set $value
   local.get $value
   i32.popcnt
   i32.const 1
   i32.eq
   br $~lib/util/number/isPowerOf2<i32>|inlined.0
  end
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
  return
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $shift i64)
  (local $mask i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $shift
   local.get $base
   i64.const 1
   i64.sub
   local.set $mask
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 2800
    local.get $num
    local.get $mask
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $num
    local.get $shift
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 2800
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/Usize#toString (param $this i32) (param $radix i32) (result i32)
  i32.const 4
  i32.const 4
  i32.eq
  drop
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $assembly/value/Value#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/value/Value#get:boolean (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=4
 )
 (func $assembly/value/Value#get:number (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $~lib/util/number/genDigits (param $buffer i32) (param $w_frc i64) (param $w_exp i32) (param $mp_frc i64) (param $mp_exp i32) (param $delta i64) (param $sign i32) (result i32)
  (local $one_exp i32)
  (local $one_frc i64)
  (local $mask i64)
  (local $wp_w_frc i64)
  (local $p1 i32)
  (local $p2 i64)
  (local $kappa i32)
  (local $len i32)
  (local $d i32)
  (local $16 i32)
  (local $17 i32)
  (local $tmp i64)
  (local $buffer|19 i32)
  (local $len|20 i32)
  (local $delta|21 i64)
  (local $rest i64)
  (local $ten_kappa i64)
  (local $wp_w i64)
  (local $lastp i32)
  (local $digit i32)
  (local $d|27 i64)
  (local $28 i32)
  (local $buffer|29 i32)
  (local $len|30 i32)
  (local $delta|31 i64)
  (local $rest|32 i64)
  (local $ten_kappa|33 i64)
  (local $wp_w|34 i64)
  (local $lastp|35 i32)
  (local $digit|36 i32)
  i32.const 0
  local.get $mp_exp
  i32.sub
  local.set $one_exp
  i64.const 1
  local.get $one_exp
  i64.extend_i32_s
  i64.shl
  local.set $one_frc
  local.get $one_frc
  i64.const 1
  i64.sub
  local.set $mask
  local.get $mp_frc
  local.get $w_frc
  i64.sub
  local.set $wp_w_frc
  local.get $mp_frc
  local.get $one_exp
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $p1
  local.get $mp_frc
  local.get $mask
  i64.and
  local.set $p2
  local.get $p1
  call $~lib/util/number/decimalCount32
  local.set $kappa
  local.get $sign
  local.set $len
  loop $while-continue|0
   local.get $kappa
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $kappa
                local.set $16
                local.get $16
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $16
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $16
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $16
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $16
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $16
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $16
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $16
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $16
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $16
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $p1
               i32.const 1000000000
               i32.div_u
               local.set $d
               local.get $p1
               i32.const 1000000000
               i32.rem_u
               local.set $p1
               br $break|1
              end
              local.get $p1
              i32.const 100000000
              i32.div_u
              local.set $d
              local.get $p1
              i32.const 100000000
              i32.rem_u
              local.set $p1
              br $break|1
             end
             local.get $p1
             i32.const 10000000
             i32.div_u
             local.set $d
             local.get $p1
             i32.const 10000000
             i32.rem_u
             local.set $p1
             br $break|1
            end
            local.get $p1
            i32.const 1000000
            i32.div_u
            local.set $d
            local.get $p1
            i32.const 1000000
            i32.rem_u
            local.set $p1
            br $break|1
           end
           local.get $p1
           i32.const 100000
           i32.div_u
           local.set $d
           local.get $p1
           i32.const 100000
           i32.rem_u
           local.set $p1
           br $break|1
          end
          local.get $p1
          i32.const 10000
          i32.div_u
          local.set $d
          local.get $p1
          i32.const 10000
          i32.rem_u
          local.set $p1
          br $break|1
         end
         local.get $p1
         i32.const 1000
         i32.div_u
         local.set $d
         local.get $p1
         i32.const 1000
         i32.rem_u
         local.set $p1
         br $break|1
        end
        local.get $p1
        i32.const 100
        i32.div_u
        local.set $d
        local.get $p1
        i32.const 100
        i32.rem_u
        local.set $p1
        br $break|1
       end
       local.get $p1
       i32.const 10
       i32.div_u
       local.set $d
       local.get $p1
       i32.const 10
       i32.rem_u
       local.set $p1
       br $break|1
      end
      local.get $p1
      local.set $d
      i32.const 0
      local.set $p1
      br $break|1
     end
     i32.const 0
     local.set $d
     br $break|1
    end
    local.get $d
    local.get $len
    i32.or
    if
     local.get $buffer
     local.get $len
     local.tee $17
     i32.const 1
     i32.add
     local.set $len
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p1
    i64.extend_i32_u
    local.get $one_exp
    i64.extend_i32_s
    i64.shl
    local.get $p2
    i64.add
    local.set $tmp
    local.get $tmp
    local.get $delta
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $buffer
     local.set $buffer|19
     local.get $len
     local.set $len|20
     local.get $delta
     local.set $delta|21
     local.get $tmp
     local.set $rest
     i32.const 4096
     local.get $kappa
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     local.get $one_exp
     i64.extend_i32_s
     i64.shl
     local.set $ten_kappa
     local.get $wp_w_frc
     local.set $wp_w
     local.get $buffer|19
     local.get $len|20
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp
     local.get $lastp
     i32.load16_u $0
     local.set $digit
     loop $while-continue|3
      local.get $rest
      local.get $wp_w
      i64.lt_u
      if (result i32)
       local.get $delta|21
       local.get $rest
       i64.sub
       local.get $ten_kappa
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.get $wp_w
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w
        local.get $rest
        i64.sub
        local.get $rest
        local.get $ten_kappa
        i64.add
        local.get $wp_w
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit
       i32.const 1
       i32.sub
       local.set $digit
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.set $rest
       br $while-continue|3
      end
     end
     local.get $lastp
     local.get $digit
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   if
    local.get $p2
    i64.const 10
    i64.mul
    local.set $p2
    local.get $delta
    i64.const 10
    i64.mul
    local.set $delta
    local.get $p2
    local.get $one_exp
    i64.extend_i32_s
    i64.shr_u
    local.set $d|27
    local.get $d|27
    local.get $len
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $buffer
     local.get $len
     local.tee $28
     i32.const 1
     i32.add
     local.set $len
     local.get $28
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d|27
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $p2
    local.get $mask
    i64.and
    local.set $p2
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p2
    local.get $delta
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $wp_w_frc
     i32.const 4096
     i32.const 0
     local.get $kappa
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     i64.mul
     local.set $wp_w_frc
     local.get $buffer
     local.set $buffer|29
     local.get $len
     local.set $len|30
     local.get $delta
     local.set $delta|31
     local.get $p2
     local.set $rest|32
     local.get $one_frc
     local.set $ten_kappa|33
     local.get $wp_w_frc
     local.set $wp_w|34
     local.get $buffer|29
     local.get $len|30
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp|35
     local.get $lastp|35
     i32.load16_u $0
     local.set $digit|36
     loop $while-continue|6
      local.get $rest|32
      local.get $wp_w|34
      i64.lt_u
      if (result i32)
       local.get $delta|31
       local.get $rest|32
       i64.sub
       local.get $ten_kappa|33
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.get $wp_w|34
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w|34
        local.get $rest|32
        i64.sub
        local.get $rest|32
        local.get $ten_kappa|33
        i64.add
        local.get $wp_w|34
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit|36
       i32.const 1
       i32.sub
       local.set $digit|36
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.set $rest|32
       br $while-continue|6
      end
     end
     local.get $lastp|35
     local.get $digit|36
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $buffer i32) (param $length i32) (param $k i32) (result i32)
  (local $kk i32)
  (local $i i32)
  (local $ptr i32)
  (local $offset i32)
  (local $i|7 i32)
  (local $buffer|8 i32)
  (local $k|9 i32)
  (local $sign i32)
  (local $decimals i32)
  (local $buffer|12 i32)
  (local $num i32)
  (local $offset|14 i32)
  (local $len i32)
  (local $buffer|16 i32)
  (local $k|17 i32)
  (local $sign|18 i32)
  (local $decimals|19 i32)
  (local $buffer|20 i32)
  (local $num|21 i32)
  (local $offset|22 i32)
  local.get $k
  i32.eqz
  if
   local.get $buffer
   local.get $length
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $length
   i32.const 2
   i32.add
   return
  end
  local.get $length
  local.get $k
  i32.add
  local.set $kk
  local.get $length
  local.get $kk
  i32.le_s
  if (result i32)
   local.get $kk
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $length
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $kk
    i32.lt_s
    if
     local.get $buffer
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $buffer
   local.get $kk
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $kk
   i32.const 2
   i32.add
   return
  else
   local.get $kk
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $kk
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $ptr
    i32.const 2
    i32.add
    local.get $ptr
    i32.const 0
    local.get $k
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16 $0
    local.get $length
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $kk
    i32.lt_s
    if (result i32)
     local.get $kk
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $kk
     i32.sub
     local.set $offset
     local.get $buffer
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $buffer
     local.get $length
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $buffer
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
     i32.const 2
     local.set $i|7
     loop $for-loop|1
      local.get $i|7
      local.get $offset
      i32.lt_s
      if
       local.get $buffer
       local.get $i|7
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $i|7
       i32.const 1
       i32.add
       local.set $i|7
       br $for-loop|1
      end
     end
     local.get $length
     local.get $offset
     i32.add
     return
    else
     local.get $length
     i32.const 1
     i32.eq
     if
      local.get $buffer
      i32.const 101
      i32.store16 $0 offset=2
      block $~lib/util/number/genExponent|inlined.0 (result i32)
       local.get $buffer
       i32.const 4
       i32.add
       local.set $buffer|8
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|9
       local.get $k|9
       i32.const 0
       i32.lt_s
       local.set $sign
       local.get $sign
       if
        i32.const 0
        local.get $k|9
        i32.sub
        local.set $k|9
       end
       local.get $k|9
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals
       local.get $buffer|8
       local.set $buffer|12
       local.get $k|9
       local.set $num
       local.get $decimals
       local.set $offset|14
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|12
       local.get $num
       local.get $offset|14
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|8
       i32.const 45
       i32.const 43
       local.get $sign
       select
       i32.store16 $0
       local.get $decimals
       br $~lib/util/number/genExponent|inlined.0
      end
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     else
      local.get $length
      i32.const 1
      i32.shl
      local.set $len
      local.get $buffer
      i32.const 4
      i32.add
      local.get $buffer
      i32.const 2
      i32.add
      local.get $len
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $buffer
      i32.const 46
      i32.store16 $0 offset=2
      local.get $buffer
      local.get $len
      i32.add
      i32.const 101
      i32.store16 $0 offset=2
      local.get $length
      block $~lib/util/number/genExponent|inlined.1 (result i32)
       local.get $buffer
       local.get $len
       i32.add
       i32.const 4
       i32.add
       local.set $buffer|16
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|17
       local.get $k|17
       i32.const 0
       i32.lt_s
       local.set $sign|18
       local.get $sign|18
       if
        i32.const 0
        local.get $k|17
        i32.sub
        local.set $k|17
       end
       local.get $k|17
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals|19
       local.get $buffer|16
       local.set $buffer|20
       local.get $k|17
       local.set $num|21
       local.get $decimals|19
       local.set $offset|22
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|20
       local.get $num|21
       local.get $offset|22
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|16
       i32.const 45
       i32.const 43
       local.get $sign|18
       select
       i32.store16 $0
       local.get $decimals|19
       br $~lib/util/number/genExponent|inlined.1
      end
      i32.add
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $buffer i32) (param $value f64) (result i32)
  (local $sign i32)
  (local $value|3 f64)
  (local $buffer|4 i32)
  (local $sign|5 i32)
  (local $uv i64)
  (local $exp i32)
  (local $sid i64)
  (local $frc i64)
  (local $f i64)
  (local $e i32)
  (local $frc|12 i64)
  (local $exp|13 i32)
  (local $off i32)
  (local $m i32)
  (local $minExp i32)
  (local $dk f64)
  (local $k i32)
  (local $index i32)
  (local $off|20 i32)
  (local $frc_pow i64)
  (local $exp_pow i32)
  (local $u i64)
  (local $v i64)
  (local $u0 i64)
  (local $v0 i64)
  (local $u1 i64)
  (local $v1 i64)
  (local $l i64)
  (local $t i64)
  (local $w i64)
  (local $w_frc i64)
  (local $e1 i32)
  (local $e2 i32)
  (local $w_exp i32)
  (local $u|36 i64)
  (local $v|37 i64)
  (local $u0|38 i64)
  (local $v0|39 i64)
  (local $u1|40 i64)
  (local $v1|41 i64)
  (local $l|42 i64)
  (local $t|43 i64)
  (local $w|44 i64)
  (local $wp_frc i64)
  (local $e1|46 i32)
  (local $e2|47 i32)
  (local $wp_exp i32)
  (local $u|49 i64)
  (local $v|50 i64)
  (local $u0|51 i64)
  (local $v0|52 i64)
  (local $u1|53 i64)
  (local $v1|54 i64)
  (local $l|55 i64)
  (local $t|56 i64)
  (local $w|57 i64)
  (local $wm_frc i64)
  (local $delta i64)
  (local $len i32)
  local.get $value
  f64.const 0
  f64.lt
  local.set $sign
  local.get $sign
  if
   local.get $value
   f64.neg
   local.set $value
   local.get $buffer
   i32.const 45
   i32.store16 $0
  end
  block $~lib/util/number/grisu2|inlined.0 (result i32)
   local.get $value
   local.set $value|3
   local.get $buffer
   local.set $buffer|4
   local.get $sign
   local.set $sign|5
   local.get $value|3
   i64.reinterpret_f64
   local.set $uv
   local.get $uv
   i64.const 9218868437227405312
   i64.and
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   local.set $exp
   local.get $uv
   i64.const 4503599627370495
   i64.and
   local.set $sid
   local.get $exp
   i32.const 0
   i32.ne
   i64.extend_i32_u
   i64.const 52
   i64.shl
   local.get $sid
   i64.add
   local.set $frc
   local.get $exp
   i32.const 1
   local.get $exp
   select
   i32.const 1023
   i32.const 52
   i32.add
   i32.sub
   local.set $exp
   local.get $frc
   local.set $f
   local.get $exp
   local.set $e
   local.get $f
   i64.const 1
   i64.shl
   i64.const 1
   i64.add
   local.set $frc|12
   local.get $e
   i32.const 1
   i32.sub
   local.set $exp|13
   local.get $frc|12
   i64.clz
   i32.wrap_i64
   local.set $off
   local.get $frc|12
   local.get $off
   i64.extend_i32_s
   i64.shl
   local.set $frc|12
   local.get $exp|13
   local.get $off
   i32.sub
   local.set $exp|13
   i32.const 1
   local.get $f
   i64.const 4503599627370496
   i64.eq
   i32.add
   local.set $m
   local.get $frc|12
   global.set $~lib/util/number/_frc_plus
   local.get $f
   local.get $m
   i64.extend_i32_s
   i64.shl
   i64.const 1
   i64.sub
   local.get $e
   local.get $m
   i32.sub
   local.get $exp|13
   i32.sub
   i64.extend_i32_s
   i64.shl
   global.set $~lib/util/number/_frc_minus
   local.get $exp|13
   global.set $~lib/util/number/_exp
   global.get $~lib/util/number/_exp
   local.set $minExp
   i32.const -61
   local.get $minExp
   i32.sub
   f64.convert_i32_s
   f64.const 0.30102999566398114
   f64.mul
   f64.const 347
   f64.add
   local.set $dk
   local.get $dk
   i32.trunc_sat_f64_s
   local.set $k
   local.get $k
   local.get $k
   f64.convert_i32_s
   local.get $dk
   f64.ne
   i32.add
   local.set $k
   local.get $k
   i32.const 3
   i32.shr_s
   i32.const 1
   i32.add
   local.set $index
   i32.const 348
   local.get $index
   i32.const 3
   i32.shl
   i32.sub
   global.set $~lib/util/number/_K
   i32.const 3224
   local.get $index
   i32.const 3
   i32.shl
   i32.add
   i64.load $0
   global.set $~lib/util/number/_frc_pow
   i32.const 3920
   local.get $index
   i32.const 1
   i32.shl
   i32.add
   i32.load16_s $0
   global.set $~lib/util/number/_exp_pow
   local.get $frc
   i64.clz
   i32.wrap_i64
   local.set $off|20
   local.get $frc
   local.get $off|20
   i64.extend_i32_s
   i64.shl
   local.set $frc
   local.get $exp
   local.get $off|20
   i32.sub
   local.set $exp
   global.get $~lib/util/number/_frc_pow
   local.set $frc_pow
   global.get $~lib/util/number/_exp_pow
   local.set $exp_pow
   block $~lib/util/number/umul64f|inlined.0 (result i64)
    local.get $frc
    local.set $u
    local.get $frc_pow
    local.set $v
    local.get $u
    i64.const 4294967295
    i64.and
    local.set $u0
    local.get $v
    i64.const 4294967295
    i64.and
    local.set $v0
    local.get $u
    i64.const 32
    i64.shr_u
    local.set $u1
    local.get $v
    i64.const 32
    i64.shr_u
    local.set $v1
    local.get $u0
    local.get $v0
    i64.mul
    local.set $l
    local.get $u1
    local.get $v0
    i64.mul
    local.get $l
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t
    local.get $u0
    local.get $v1
    i64.mul
    local.get $t
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w
    local.get $w
    i64.const 2147483647
    i64.add
    local.set $w
    local.get $t
    i64.const 32
    i64.shr_u
    local.set $t
    local.get $w
    i64.const 32
    i64.shr_u
    local.set $w
    local.get $u1
    local.get $v1
    i64.mul
    local.get $t
    i64.add
    local.get $w
    i64.add
    br $~lib/util/number/umul64f|inlined.0
   end
   local.set $w_frc
   block $~lib/util/number/umul64e|inlined.0 (result i32)
    local.get $exp
    local.set $e1
    local.get $exp_pow
    local.set $e2
    local.get $e1
    local.get $e2
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.0
   end
   local.set $w_exp
   block $~lib/util/number/umul64f|inlined.1 (result i64)
    global.get $~lib/util/number/_frc_plus
    local.set $u|36
    local.get $frc_pow
    local.set $v|37
    local.get $u|36
    i64.const 4294967295
    i64.and
    local.set $u0|38
    local.get $v|37
    i64.const 4294967295
    i64.and
    local.set $v0|39
    local.get $u|36
    i64.const 32
    i64.shr_u
    local.set $u1|40
    local.get $v|37
    i64.const 32
    i64.shr_u
    local.set $v1|41
    local.get $u0|38
    local.get $v0|39
    i64.mul
    local.set $l|42
    local.get $u1|40
    local.get $v0|39
    i64.mul
    local.get $l|42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|43
    local.get $u0|38
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|44
    local.get $w|44
    i64.const 2147483647
    i64.add
    local.set $w|44
    local.get $t|43
    i64.const 32
    i64.shr_u
    local.set $t|43
    local.get $w|44
    i64.const 32
    i64.shr_u
    local.set $w|44
    local.get $u1|40
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.add
    local.get $w|44
    i64.add
    br $~lib/util/number/umul64f|inlined.1
   end
   i64.const 1
   i64.sub
   local.set $wp_frc
   block $~lib/util/number/umul64e|inlined.1 (result i32)
    global.get $~lib/util/number/_exp
    local.set $e1|46
    local.get $exp_pow
    local.set $e2|47
    local.get $e1|46
    local.get $e2|47
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.1
   end
   local.set $wp_exp
   block $~lib/util/number/umul64f|inlined.2 (result i64)
    global.get $~lib/util/number/_frc_minus
    local.set $u|49
    local.get $frc_pow
    local.set $v|50
    local.get $u|49
    i64.const 4294967295
    i64.and
    local.set $u0|51
    local.get $v|50
    i64.const 4294967295
    i64.and
    local.set $v0|52
    local.get $u|49
    i64.const 32
    i64.shr_u
    local.set $u1|53
    local.get $v|50
    i64.const 32
    i64.shr_u
    local.set $v1|54
    local.get $u0|51
    local.get $v0|52
    i64.mul
    local.set $l|55
    local.get $u1|53
    local.get $v0|52
    i64.mul
    local.get $l|55
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|56
    local.get $u0|51
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|57
    local.get $w|57
    i64.const 2147483647
    i64.add
    local.set $w|57
    local.get $t|56
    i64.const 32
    i64.shr_u
    local.set $t|56
    local.get $w|57
    i64.const 32
    i64.shr_u
    local.set $w|57
    local.get $u1|53
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.add
    local.get $w|57
    i64.add
    br $~lib/util/number/umul64f|inlined.2
   end
   i64.const 1
   i64.add
   local.set $wm_frc
   local.get $wp_frc
   local.get $wm_frc
   i64.sub
   local.set $delta
   local.get $buffer|4
   local.get $w_frc
   local.get $w_exp
   local.get $wp_frc
   local.get $wp_exp
   local.get $delta
   local.get $sign|5
   call $~lib/util/number/genDigits
   br $~lib/util/number/grisu2|inlined.0
  end
  local.set $len
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  local.get $sign
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $len
  local.get $len
  local.get $sign
  i32.add
  return
 )
 (func $~lib/number/F64#toString (param $this f64) (param $radix i32) (result i32)
  local.get $this
  call $~lib/util/number/dtoa
  return
 )
 (func $assembly/value/Value#get:obj (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/object/Obj#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/object/ObjBoundMethod#get:method (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/object/ObjClosure#get:func (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/ObjFunction#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/object/ObjString#get:chars (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load $0
     local.get $ptr2
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $7
   i32.const 1
   i32.sub
   local.set $len
   local.get $7
   if
    local.get $ptr1
    i32.load16_u $0
    local.set $a
    local.get $ptr2
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $assembly/object/ObjClass#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/ObjInstance#get:klass (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/Obj#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $assembly/object/Obj#set:nextObj (param $this i32) (param $nextObj i32)
  local.get $this
  local.get $nextObj
  i32.store $0 offset=4
  local.get $this
  local.get $nextObj
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjClosure#set:func (param $this i32) (param $func i32)
  local.get $this
  local.get $func
  i32.store $0 offset=8
  local.get $this
  local.get $func
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/object/ObjFunction#get:upvalueCount (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=9
 )
 (func $assembly/object/ObjClosure#set:upvalues (param $this i32) (param $upvalues i32)
  local.get $this
  local.get $upvalues
  i32.store $0 offset=12
  local.get $this
  local.get $upvalues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/value/Value#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $assembly/value/Value#set:boolean (param $this i32) (param $boolean i32)
  local.get $this
  local.get $boolean
  i32.store8 $0 offset=4
 )
 (func $assembly/value/Value#set:number (param $this i32) (param $number f64)
  local.get $this
  local.get $number
  f64.store $0 offset=8
 )
 (func $assembly/value/Value#set:obj (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  i32.store $0 offset=16
  local.get $this
  local.get $obj
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjUpvalue#set:locationValue (param $this i32) (param $locationValue i32)
  local.get $this
  local.get $locationValue
  i32.store $0 offset=8
  local.get $this
  local.get $locationValue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjUpvalue#set:locationIndex (param $this i32) (param $locationIndex i32)
  local.get $this
  local.get $locationIndex
  i32.store $0 offset=12
 )
 (func $assembly/object/ObjUpvalue#set:closed (param $this i32) (param $closed i32)
  local.get $this
  local.get $closed
  i32.store $0 offset=16
  local.get $this
  local.get $closed
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjUpvalue#set:nextUpvalue (param $this i32) (param $nextUpvalue i32)
  local.get $this
  local.get $nextUpvalue
  i32.store $0 offset=20
  local.get $this
  local.get $nextUpvalue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjClosure#get:upvalues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtId
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtSize
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
  return
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/object/ObjClosure#set:upvalueCount (param $this i32) (param $upvalueCount i32)
  local.get $this
  local.get $upvalueCount
  i32.store $0 offset=16
 )
 (func $assembly/object/ObjFunction#set:arity (param $this i32) (param $arity i32)
  local.get $this
  local.get $arity
  i32.store8 $0 offset=8
 )
 (func $assembly/object/ObjFunction#set:upvalueCount (param $this i32) (param $upvalueCount i32)
  local.get $this
  local.get $upvalueCount
  i32.store8 $0 offset=9
 )
 (func $assembly/chunk/Chunk#set:count (param $this i32) (param $count i32)
  local.get $this
  local.get $count
  i32.store $0
 )
 (func $assembly/chunk/Chunk#set:capacity (param $this i32) (param $capacity i32)
  local.get $this
  local.get $capacity
  i32.store $0 offset=4
 )
 (func $assembly/chunk/Chunk#set:code (param $this i32) (param $code i32)
  local.get $this
  local.get $code
  i32.store $0 offset=8
  local.get $this
  local.get $code
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/chunk/Chunk#set:lines (param $this i32) (param $lines i32)
  local.get $this
  local.get $lines
  i32.store $0 offset=12
  local.get $this
  local.get $lines
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/value/ValueArray#set:count (param $this i32) (param $count i32)
  local.get $this
  local.get $count
  i32.store $0
 )
 (func $assembly/value/ValueArray#set:capacity (param $this i32) (param $capacity i32)
  local.get $this
  local.get $capacity
  i32.store $0 offset=4
 )
 (func $assembly/value/ValueArray#set:values (param $this i32) (param $values i32)
  local.get $this
  local.get $values
  i32.store $0 offset=8
  local.get $this
  local.get $values
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/chunk/Chunk#set:constants (param $this i32) (param $constants i32)
  local.get $this
  local.get $constants
  i32.store $0 offset=16
  local.get $this
  local.get $constants
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjFunction#set:chunk (param $this i32) (param $chunk i32)
  local.get $this
  local.get $chunk
  i32.store $0 offset=12
  local.get $this
  local.get $chunk
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjString#set:length (param $this i32) (param $length i32)
  local.get $this
  local.get $length
  i32.store $0 offset=8
 )
 (func $assembly/object/ObjString#set:chars (param $this i32) (param $chars i32)
  local.get $this
  local.get $chars
  i32.store $0 offset=12
  local.get $this
  local.get $chars
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjFunction#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=16
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/CallFrame#set:closure (param $this i32) (param $closure i32)
  local.get $this
  local.get $closure
  i32.store $0
  local.get $this
  local.get $closure
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/CallFrame#set:ip (param $this i32) (param $ip i32)
  local.get $this
  local.get $ip
  i32.store $0 offset=4
 )
 (func $assembly/vm/CallFrame#set:slotsIndex (param $this i32) (param $slotsIndex i32)
  local.get $this
  local.get $slotsIndex
  i32.store $0 offset=8
 )
 (func $assembly/vm/VM#get:frames (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:frames (param $this i32) (param $frames i32)
  local.get $this
  local.get $frames
  i32.store $0
  local.get $this
  local.get $frames
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:frameCount (param $this i32) (param $frameCount i32)
  local.get $this
  local.get $frameCount
  i32.store $0 offset=4
 )
 (func $~lib/util/bytes/FILL<usize> (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $assembly/vm/VM#set:stack (param $this i32) (param $stack i32)
  local.get $this
  local.get $stack
  i32.store $0 offset=8
  local.get $this
  local.get $stack
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:stackTop (param $this i32) (param $stackTop i32)
  local.get $this
  local.get $stackTop
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/vm/VM#set:globals (param $this i32) (param $globals i32)
  local.get $this
  local.get $globals
  i32.store $0 offset=16
  local.get $this
  local.get $globals
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:strings (param $this i32) (param $strings i32)
  local.get $this
  local.get $strings
  i32.store $0 offset=20
  local.get $this
  local.get $strings
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:initString (param $this i32) (param $initString i32)
  local.get $this
  local.get $initString
  i32.store $0 offset=24
  local.get $this
  local.get $initString
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:openUpvalues (param $this i32) (param $openUpvalues i32)
  local.get $this
  local.get $openUpvalues
  i32.store $0 offset=28
  local.get $this
  local.get $openUpvalues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#set:objects (param $this i32) (param $objects i32)
  local.get $this
  local.get $objects
  i32.store $0 offset=32
  local.get $this
  local.get $objects
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/chunk/Chunk#get:code (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/number/U8#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  i32.const 255
  i32.and
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/number/U32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $assembly/chunk/Chunk#get:constants (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/value/ValueArray#get:values (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/chunk/Chunk#get:lines (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/number/U16#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  i32.const 65535
  i32.and
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/number/I32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa32
  return
 )
 (func $assembly/chunk/Chunk#get:count (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/scanner/Scanner#set:start (param $this i32) (param $start i32)
  local.get $this
  local.get $start
  i32.store $0
 )
 (func $assembly/scanner/Scanner#set:current (param $this i32) (param $current i32)
  local.get $this
  local.get $current
  i32.store $0 offset=4
 )
 (func $assembly/scanner/Scanner#set:line (param $this i32) (param $line i32)
  local.get $this
  local.get $line
  i32.store16 $0 offset=8
 )
 (func $start:assembly/scanner
  (local $0 i32)
  (local $1 i32)
  i32.const 0
  call $assembly/scanner/Scanner#constructor
  global.set $assembly/scanner/scanner
 )
 (func $assembly/scanner/Token#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $assembly/scanner/Token#set:lexeme (param $this i32) (param $lexeme i32)
  local.get $this
  local.get $lexeme
  i32.store $0 offset=4
  local.get $this
  local.get $lexeme
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/scanner/Token#set:line (param $this i32) (param $line i32)
  local.get $this
  local.get $line
  i32.store16 $0 offset=8
 )
 (func $assembly/compiler/Parser#set:current (param $this i32) (param $current i32)
  local.get $this
  local.get $current
  i32.store $0
  local.get $this
  local.get $current
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Parser#set:previous (param $this i32) (param $previous i32)
  local.get $this
  local.get $previous
  i32.store $0 offset=4
  local.get $this
  local.get $previous
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Parser#set:hadError (param $this i32) (param $hadError i32)
  local.get $this
  local.get $hadError
  i32.store8 $0 offset=8
 )
 (func $assembly/compiler/Parser#set:panicMode (param $this i32) (param $panicMode i32)
  local.get $this
  local.get $panicMode
  i32.store8 $0 offset=9
 )
 (func $assembly/compiler/Compiler#set:enclosing (param $this i32) (param $enclosing i32)
  local.get $this
  local.get $enclosing
  i32.store $0
  local.get $this
  local.get $enclosing
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Compiler#set:function (param $this i32) (param $function i32)
  local.get $this
  local.get $function
  i32.store $0 offset=4
  local.get $this
  local.get $function
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Compiler#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/compiler/Local>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/compiler/Local>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/compiler/Local>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/compiler/Local>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/compiler/Local#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Local#set:depth (param $this i32) (param $depth i32)
  local.get $this
  local.get $depth
  i32.store $0 offset=4
 )
 (func $assembly/compiler/Local#set:isCaptured (param $this i32) (param $isCaptured i32)
  local.get $this
  local.get $isCaptured
  i32.store8 $0 offset=8
 )
 (func $~lib/array/Array<assembly/compiler/Local>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/compiler/Local>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/compiler/Compiler#set:locals (param $this i32) (param $locals i32)
  local.get $this
  local.get $locals
  i32.store $0 offset=12
  local.get $this
  local.get $locals
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Compiler#set:localCount (param $this i32) (param $localCount i32)
  local.get $this
  local.get $localCount
  i32.store $0 offset=16
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/compiler/Upvalue#set:index (param $this i32) (param $index i32)
  local.get $this
  local.get $index
  i32.store8 $0
 )
 (func $assembly/compiler/Upvalue#set:isLocal (param $this i32) (param $isLocal i32)
  local.get $this
  local.get $isLocal
  i32.store8 $0 offset=1
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/compiler/Compiler#set:upvalues (param $this i32) (param $upvalues i32)
  local.get $this
  local.get $upvalues
  i32.store $0 offset=20
  local.get $this
  local.get $upvalues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/Compiler#set:scopeDepth (param $this i32) (param $scopeDepth i32)
  local.get $this
  local.get $scopeDepth
  i32.store $0 offset=24
 )
 (func $assembly/compiler/ParseRule#set:prefix (param $this i32) (param $prefix i32)
  local.get $this
  local.get $prefix
  i32.store $0
  local.get $this
  local.get $prefix
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/ParseRule#set:infix (param $this i32) (param $infix i32)
  local.get $this
  local.get $infix
  i32.store $0 offset=4
  local.get $this
  local.get $infix
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/ParseRule#set:precedence (param $this i32) (param $precedence i32)
  local.get $this
  local.get $precedence
  i32.store $0 offset=8
 )
 (func $assembly/compiler/Parser#get:current (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/scanner/Scanner#get:current (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/scanner/Scanner#get:line (param $this i32) (result i32)
  local.get $this
  i32.load16_u $0 offset=8
 )
 (func $assembly/scanner/Scanner#get:start (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/scanner/identifier (result i32)
  loop $while-continue|0
   call $assembly/scanner/peek
   call $assembly/scanner/isAlpha
   if (result i32)
    i32.const 1
   else
    call $assembly/scanner/peek
    call $assembly/scanner/isDigit
   end
   if
    call $assembly/scanner/advance
    drop
    br $while-continue|0
   end
  end
  call $assembly/scanner/identifierType
  call $assembly/scanner/makeToken
  return
 )
 (func $assembly/scanner/Token#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/scanner/Token#get:lexeme (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/Parser#get:panicMode (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=9
 )
 (func $assembly/scanner/Token#get:line (param $this i32) (result i32)
  local.get $this
  i32.load16_u $0 offset=8
 )
 (func $assembly/compiler/Parser#get:previous (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/ParseRule#get:prefix (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/compiler/ParseRule#get:precedence (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/compiler/ParseRule#get:infix (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/match (param $type i32) (result i32)
  local.get $type
  call $assembly/compiler/check
  i32.eqz
  if
   i32.const 0
   return
  end
  call $assembly/compiler/advance
  i32.const 1
  return
 )
 (func $assembly/compiler/expression
  global.get $assembly/compiler/Precedence.PREC_ASSIGNMENT
  call $assembly/compiler/parsePrecedence
 )
 (func $assembly/compiler/Compiler#get:function (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/object/ObjFunction#get:chunk (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/chunk/Chunk#get:capacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/emitBytes (param $byte1 i32) (param $byte2 i32)
  local.get $byte1
  call $assembly/compiler/emitByte
  local.get $byte2
  call $assembly/compiler/emitByte
 )
 (func $assembly/compiler/call (param $canAssign i32)
  (local $argCount i32)
  call $assembly/compiler/argumentList
  local.set $argCount
  global.get $assembly/chunk/OpCode.OP_CALL
  local.get $argCount
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/vm/VM#get:strings (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/array/Array<assembly/object/ObjString>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/object/ObjString>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/object/ObjString>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/object/ObjString>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/object/ObjString>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/object/ObjString>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/vm/VM#get:objects (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $~lib/util/hash/HASH<assembly/object/ObjString> (param $key i32) (result i32)
  (local $key|1 i32)
  (local $len i32)
  (local $h i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 4
  i32.const 4
  i32.eq
  drop
  block $~lib/util/hash/hash32|inlined.0 (result i32)
   local.get $key
   local.set $key|1
   i32.const 4
   local.set $len
   i32.const 0
   i32.const 374761393
   i32.add
   local.get $len
   i32.add
   local.set $h
   local.get $h
   local.get $key|1
   i32.const -1028477379
   i32.mul
   i32.add
   local.set $h
   local.get $h
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 15
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -2048144777
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 13
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -1028477379
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 16
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   br $~lib/util/hash/hash32|inlined.0
  end
  return
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/value/ValueArray#get:capacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/value/ValueArray#get:count (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/compiler/Compiler#get:localCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/compiler/Compiler#get:locals (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/compiler/Local#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/compiler/Local#get:depth (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/Compiler#get:enclosing (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/compiler/Compiler#get:upvalues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/compiler/Upvalue#get:index (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $assembly/compiler/Upvalue#get:isLocal (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=1
 )
 (func $~lib/util/string/isSpace (param $c i32) (result i32)
  (local $1 i32)
  local.get $c
  i32.const 5760
  i32.lt_u
  if
   local.get $c
   i32.const 128
   i32.or
   i32.const 160
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $c
    i32.const 9
    i32.sub
    i32.const 13
    i32.const 9
    i32.sub
    i32.le_u
   end
   return
  end
  local.get $c
  i32.const 8192
  i32.sub
  i32.const 8202
  i32.const 8192
  i32.sub
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $c
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/math/ipow32 (param $x i32) (param $e i32) (result i32)
  (local $out i32)
  (local $log i32)
  (local $4 i32)
  i32.const 1
  local.set $out
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $x
  i32.const 2
  i32.eq
  if
   i32.const 1
   local.get $e
   i32.shl
   i32.const 0
   local.get $e
   i32.const 32
   i32.lt_u
   select
   return
  end
  local.get $e
  i32.const 0
  i32.le_s
  if
   local.get $x
   i32.const -1
   i32.eq
   if
    i32.const -1
    i32.const 1
    local.get $e
    i32.const 1
    i32.and
    select
    return
   end
   local.get $e
   i32.const 0
   i32.eq
   local.get $x
   i32.const 1
   i32.eq
   i32.or
   return
  else
   local.get $e
   i32.const 1
   i32.eq
   if
    local.get $x
    return
   else
    local.get $e
    i32.const 2
    i32.eq
    if
     local.get $x
     local.get $x
     i32.mul
     return
    else
     local.get $e
     i32.const 32
     i32.lt_s
     if
      i32.const 32
      local.get $e
      i32.clz
      i32.sub
      local.set $log
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            local.get $log
            local.set $4
            local.get $4
            i32.const 5
            i32.eq
            br_if $case0|0
            local.get $4
            i32.const 4
            i32.eq
            br_if $case1|0
            local.get $4
            i32.const 3
            i32.eq
            br_if $case2|0
            local.get $4
            i32.const 2
            i32.eq
            br_if $case3|0
            local.get $4
            i32.const 1
            i32.eq
            br_if $case4|0
            br $break|0
           end
           local.get $e
           i32.const 1
           i32.and
           if
            local.get $out
            local.get $x
            i32.mul
            local.set $out
           end
           local.get $e
           i32.const 1
           i32.shr_u
           local.set $e
           local.get $x
           local.get $x
           i32.mul
           local.set $x
          end
          local.get $e
          i32.const 1
          i32.and
          if
           local.get $out
           local.get $x
           i32.mul
           local.set $out
          end
          local.get $e
          i32.const 1
          i32.shr_u
          local.set $e
          local.get $x
          local.get $x
          i32.mul
          local.set $x
         end
         local.get $e
         i32.const 1
         i32.and
         if
          local.get $out
          local.get $x
          i32.mul
          local.set $out
         end
         local.get $e
         i32.const 1
         i32.shr_u
         local.set $e
         local.get $x
         local.get $x
         i32.mul
         local.set $x
        end
        local.get $e
        i32.const 1
        i32.and
        if
         local.get $out
         local.get $x
         i32.mul
         local.set $out
        end
        local.get $e
        i32.const 1
        i32.shr_u
        local.set $e
        local.get $x
        local.get $x
        i32.mul
        local.set $x
       end
       local.get $e
       i32.const 1
       i32.and
       if
        local.get $out
        local.get $x
        i32.mul
        local.set $out
       end
      end
      local.get $out
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $e
   if
    local.get $e
    i32.const 1
    i32.and
    if
     local.get $out
     local.get $x
     i32.mul
     local.set $out
    end
    local.get $e
    i32.const 1
    i32.shr_u
    local.set $e
    local.get $x
    local.get $x
    i32.mul
    local.set $x
    br $while-continue|1
   end
  end
  local.get $out
  return
 )
 (func $~lib/math/NativeMath.scalbn (param $x f64) (param $n i32) (result f64)
  (local $y f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $x
  local.set $y
  local.get $n
  i32.const 1023
  i32.gt_s
  if
   local.get $y
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $y
   local.get $n
   i32.const 1023
   i32.sub
   local.set $n
   local.get $n
   i32.const 1023
   i32.gt_s
   if
    local.get $y
    f64.const 8988465674311579538646525e283
    f64.mul
    local.set $y
    local.get $n
    i32.const 1023
    i32.sub
    local.tee $3
    i32.const 1023
    local.tee $4
    local.get $3
    local.get $4
    i32.lt_s
    select
    local.set $n
   end
  else
   local.get $n
   i32.const -1022
   i32.lt_s
   if
    local.get $y
    f64.const 2.2250738585072014e-308
    f64.const 9007199254740992
    f64.mul
    f64.mul
    local.set $y
    local.get $n
    i32.const 1022
    i32.const 53
    i32.sub
    i32.add
    local.set $n
    local.get $n
    i32.const -1022
    i32.lt_s
    if
     local.get $y
     f64.const 2.2250738585072014e-308
     f64.const 9007199254740992
     f64.mul
     f64.mul
     local.set $y
     local.get $n
     i32.const 1022
     i32.add
     i32.const 53
     i32.sub
     local.tee $5
     i32.const -1022
     local.tee $6
     local.get $5
     local.get $6
     i32.gt_s
     select
     local.set $n
    end
   end
  end
  local.get $y
  i64.const 1023
  local.get $n
  i64.extend_i32_s
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
  return
 )
 (func $assembly/compiler/and_ (param $canAssign i32)
  (local $endJump i32)
  global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
  call $assembly/compiler/emitJump
  local.set $endJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  global.get $assembly/compiler/Precedence.PREC_AND
  call $assembly/compiler/parsePrecedence
  local.get $endJump
  call $assembly/compiler/patchJump
 )
 (func $assembly/compiler/or_ (param $canAssign i32)
  (local $elseJump i32)
  (local $endJump i32)
  global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
  call $assembly/compiler/emitJump
  local.set $elseJump
  global.get $assembly/chunk/OpCode.OP_JUMP
  call $assembly/compiler/emitJump
  local.set $endJump
  local.get $elseJump
  call $assembly/compiler/patchJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  global.get $assembly/compiler/Precedence.PREC_OR
  call $assembly/compiler/parsePrecedence
  local.get $endJump
  call $assembly/compiler/patchJump
 )
 (func $assembly/compiler/ClassCompiler#get:hasSuperclass (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=4
 )
 (func $start:assembly/vm
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 176
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 208
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 352
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  call $assembly/vm/VM#constructor
  global.set $assembly/vm/vm
  call $start:assembly/compiler
 )
 (func $start:assembly/index
  call $start:assembly/vm
 )
 (func $~lib/number/Bool#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  if (result i32)
   i32.const 2928
  else
   i32.const 2960
  end
  return
 )
 (func $assembly/index/getDebugFlag (result i32)
  global.get $assembly/index/debugFlag
  return
 )
 (func $assembly/table/initTable (result i32)
  i32.const 0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
  return
 )
 (func $assembly/vm/clockNative (param $args i32) (result i32)
  block $~lib/date/Date.now|inlined.0 (result i64)
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   br $~lib/date/Date.now|inlined.0
  end
  f64.convert_i64_s
  call $assembly/value/NUMBER_VAL
  return
 )
 (func $assembly/vm/VM#get:stack (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/vm/VM#get:stackTop (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/object/ObjNative#set:natFunction (param $this i32) (param $natFunction i32)
  local.get $this
  local.get $natFunction
  i32.store $0 offset=8
  local.get $this
  local.get $natFunction
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjNative#constructor~anonymous|0 (param $$0 i32) (result i32)
  i32.const 0
  call $assembly/value/Value#constructor
 )
 (func $assembly/vm/VM#get:globals (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/array/Array<~lib/string/String>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/string/String>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/compiler/Compiler#get:scopeDepth (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/compiler/ClassCompiler#set:enclosing (param $this i32) (param $enclosing i32)
  local.get $this
  local.get $enclosing
  i32.store $0
  local.get $this
  local.get $enclosing
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/compiler/ClassCompiler#set:hasSuperclass (param $this i32) (param $hasSuperclass i32)
  local.get $this
  local.get $hasSuperclass
  i32.store8 $0 offset=4
 )
 (func $assembly/object/ObjFunction#get:arity (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $assembly/compiler/Compiler#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/compiler/Parser#get:hadError (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $assembly/compiler/Local#get:isCaptured (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $assembly/compiler/ClassCompiler#get:enclosing (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/compiler/statement
  global.get $assembly/scanner/TokenType.TOKEN_PRINT
  call $assembly/compiler/match
  if
   call $assembly/compiler/printStatement
  else
   global.get $assembly/scanner/TokenType.TOKEN_FOR
   call $assembly/compiler/match
   if
    call $assembly/compiler/forStatement
   else
    global.get $assembly/scanner/TokenType.TOKEN_IF
    call $assembly/compiler/match
    if
     call $assembly/compiler/ifStatement
    else
     global.get $assembly/scanner/TokenType.TOKEN_RETURN
     call $assembly/compiler/match
     if
      call $assembly/compiler/returnStatement
     else
      global.get $assembly/scanner/TokenType.TOKEN_WHILE
      call $assembly/compiler/match
      if
       call $assembly/compiler/whileStatement
      else
       global.get $assembly/scanner/TokenType.TOKEN_LEFT_BRACE
       call $assembly/compiler/match
       if
        call $assembly/compiler/beginScope
        call $assembly/compiler/block
        call $assembly/compiler/endScope
       else
        call $assembly/compiler/expressionStatement
       end
      end
     end
    end
   end
  end
 )
 (func $assembly/vm/VM#get:frameCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/vm/CallFrame#get:closure (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/vm/CallFrame#get:ip (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/vm/CallFrame#get:slotsIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/ObjUpvalue#get:locationValue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/ObjUpvalue#get:locationIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/object/ObjInstance#get:fields (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/object/ObjClass#get:methods (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/object/ObjBoundMethod#set:receiver (param $this i32) (param $receiver i32)
  local.get $this
  local.get $receiver
  i32.store $0 offset=8
  local.get $this
  local.get $receiver
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjBoundMethod#set:method (param $this i32) (param $method i32)
  local.get $this
  local.get $method
  i32.store $0 offset=12
  local.get $this
  local.get $method
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/run~anonymous|6 (param $a f64) (param $b f64) (result i32)
  local.get $a
  local.get $b
  f64.gt
 )
 (func $assembly/vm/run~anonymous|7 (param $a f64) (param $b f64) (result i32)
  local.get $a
  local.get $b
  f64.lt
 )
 (func $assembly/vm/run~anonymous|8 (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.sub
 )
 (func $assembly/vm/run~anonymous|9 (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.mul
 )
 (func $assembly/vm/run~anonymous|10 (param $a f64) (param $b f64) (result f64)
  local.get $a
  local.get $b
  f64.div
 )
 (func $assembly/object/ObjBoundMethod#get:receiver (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/object/ObjInstance#set:klass (param $this i32) (param $klass i32)
  local.get $this
  local.get $klass
  i32.store $0 offset=8
  local.get $this
  local.get $klass
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjInstance#set:fields (param $this i32) (param $fields i32)
  local.get $this
  local.get $fields
  i32.store $0 offset=12
  local.get $this
  local.get $fields
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/vm/VM#get:initString (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/object/ObjNative#get:natFunction (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
  return
 )
 (func $~lib/array/Array<assembly/value/Value>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/object/ObjClosure#get:upvalueCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/vm/VM#get:openUpvalues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/object/ObjUpvalue#get:nextUpvalue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/object/ObjUpvalue#get:closed (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/object/ObjClass#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=8
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/object/ObjClass#set:methods (param $this i32) (param $methods i32)
  local.get $this
  local.get $methods
  i32.store $0 offset=12
  local.get $this
  local.get $methods
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/table/freeTable (result i32)
  call $assembly/table/initTable
  return
 )
 (func $assembly/object/Obj#get:nextObj (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $obj i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $obj
   local.get $obj
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 21408
    i32.const 128
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 21472
   i32.const 128
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~instanceof|assembly/object/ObjBoundMethod (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 25
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjClass (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 27
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjInstance (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 28
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjString (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 15
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjClosure (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 6
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjFunction (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 8
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjNative (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 51
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/object/ObjUpvalue (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 16
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  global.get $assembly/index/outputstring
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 256
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 496
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 640
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 19872
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 64
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 21408
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 21472
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 1744
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 2800
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $assembly/vm/vm
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/parser
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/current
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/currentClass
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/compiler/rules
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/scanner/tokenTypeStrings
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/scanner/scanner
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/scanner/codestring
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/object/Object~visit (param $0 i32) (param $1 i32)
  nop
 )
 (func $assembly/vm/VM~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/vm/CallFrame~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/object/ObjClosure~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/object/Obj~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/object/ObjFunction~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/chunk/Chunk~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/typedarray/Uint16Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $assembly/value/ValueArray~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/value/Value~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  local.set $cur
  local.get $cur
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__visit
 )
 (func $assembly/object/ObjString~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/object/ObjUpvalue~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/object/ObjUpvalue>#__visit
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  local.set $cur
  local.get $cur
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__visit
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#__visit
 )
 (func $~lib/function/Function<%28i32%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28i32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>#__visit
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%29=>void>#__visit
 )
 (func $assembly/object/ObjBoundMethod~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  local.set $cur
  local.get $cur
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/string/String>#__visit
 )
 (func $assembly/object/ObjClass~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/object/ObjInstance~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>#__visit
 )
 (func $~lib/array/Array<~lib/string/String>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $assembly/compiler/Parser~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/scanner/Token~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/compiler/Compiler~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/compiler/Local~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/compiler/Local>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/compiler/Local>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/compiler/Local>#__visit
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/compiler/Upvalue>#__visit
 )
 (func $assembly/compiler/ClassCompiler~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/compiler/ParseRule~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/compiler/ParseRule>#__visit
 )
 (func $~lib/function/Function<%28bool%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28bool%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28bool%29=>void>#__visit
 )
 (func $~lib/array/Array<assembly/object/ObjString>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/object/ObjString>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/object/ObjString>#__visit
 )
 (func $~lib/array/Array<assembly/value/Value>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/value/Value>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/value/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/value/Value>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>#__visit
 )
 (func $assembly/object/ObjNative~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/object/Obj~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>#__visit
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>#__visit
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>#__visit
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>bool>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>f64>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>f64>#__visit
 )
 (func $~lib/array/Array<i32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/array/Array<i32>
    block $~lib/function/Function<%28f64%2Cf64%29=>f64>
     block $~lib/function/Function<%28f64%2Cf64%29=>bool>
      block $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>
       block $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>
        block $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>
         block $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>
          block $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>
           block $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>
            block $assembly/object/ObjNative
             block $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>
              block $~lib/array/Array<assembly/value/Value>
               block $~lib/array/Array<assembly/object/ObjString>
                block $~lib/function/Function<%28bool%29=>void>
                 block $~lib/array/Array<assembly/compiler/ParseRule>
                  block $assembly/compiler/ParseRule
                   block $assembly/compiler/ClassCompiler
                    block $~lib/array/Array<assembly/compiler/Upvalue>
                     block $assembly/compiler/Upvalue
                      block $~lib/array/Array<assembly/compiler/Local>
                       block $assembly/compiler/Local
                        block $assembly/compiler/Compiler
                         block $assembly/scanner/Token
                          block $assembly/compiler/Parser
                           block $assembly/scanner/Scanner
                            block $~lib/array/Array<~lib/string/String>
                             block $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>
                              block $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>
                               block $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>
                                block $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>
                                 block $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>
                                  block $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>
                                   block $assembly/object/ObjInstance
                                    block $assembly/object/ObjClass
                                     block $~lib/staticarray/StaticArray<~lib/string/String>
                                      block $assembly/object/ObjBoundMethod
                                       block $~lib/function/Function<%28~lib/string/String%29=>void>
                                        block $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>
                                         block $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>
                                          block $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>
                                           block $~lib/function/Function<%28i32%29=>i32>
                                            block $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>
                                             block $~lib/staticarray/StaticArray<assembly/vm/CallFrame>
                                              block $~lib/array/Array<assembly/object/ObjUpvalue>
                                               block $assembly/object/ObjUpvalue
                                                block $assembly/object/ObjString
                                                 block $~lib/staticarray/StaticArray<assembly/value/Value>
                                                  block $assembly/value/Value
                                                   block $assembly/value/ValueArray
                                                    block $~lib/typedarray/Uint16Array
                                                     block $~lib/staticarray/StaticArray<u8>
                                                      block $assembly/chunk/Chunk
                                                       block $assembly/object/ObjFunction
                                                        block $assembly/object/Obj
                                                         block $assembly/object/ObjClosure
                                                          block $assembly/vm/CallFrame
                                                           block $assembly/vm/VM
                                                            block $~lib/arraybuffer/ArrayBufferView
                                                             block $~lib/string/String
                                                              block $~lib/arraybuffer/ArrayBuffer
                                                               block $~lib/object/Object
                                                                local.get $0
                                                                i32.const 8
                                                                i32.sub
                                                                i32.load $0
                                                                br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $assembly/vm/VM $assembly/vm/CallFrame $assembly/object/ObjClosure $assembly/object/Obj $assembly/object/ObjFunction $assembly/chunk/Chunk $~lib/staticarray/StaticArray<u8> $~lib/typedarray/Uint16Array $assembly/value/ValueArray $assembly/value/Value $~lib/staticarray/StaticArray<assembly/value/Value> $assembly/object/ObjString $assembly/object/ObjUpvalue $~lib/array/Array<assembly/object/ObjUpvalue> $~lib/staticarray/StaticArray<assembly/vm/CallFrame> $~lib/map/Map<assembly/object/ObjString,assembly/value/Value> $~lib/function/Function<%28i32%29=>i32> $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>> $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>> $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array> $~lib/function/Function<%28~lib/string/String%29=>void> $assembly/object/ObjBoundMethod $~lib/staticarray/StaticArray<~lib/string/String> $assembly/object/ObjClass $assembly/object/ObjInstance $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String> $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32> $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32> $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32> $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32> $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void> $~lib/array/Array<~lib/string/String> $assembly/scanner/Scanner $assembly/compiler/Parser $assembly/scanner/Token $assembly/compiler/Compiler $assembly/compiler/Local $~lib/array/Array<assembly/compiler/Local> $assembly/compiler/Upvalue $~lib/array/Array<assembly/compiler/Upvalue> $assembly/compiler/ClassCompiler $assembly/compiler/ParseRule $~lib/array/Array<assembly/compiler/ParseRule> $~lib/function/Function<%28bool%29=>void> $~lib/array/Array<assembly/object/ObjString> $~lib/array/Array<assembly/value/Value> $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value> $assembly/object/ObjNative $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8> $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value> $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16> $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString> $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32> $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32> $~lib/function/Function<%28f64%2Cf64%29=>bool> $~lib/function/Function<%28f64%2Cf64%29=>f64> $~lib/array/Array<i32> $invalid
                                                               end
                                                               return
                                                              end
                                                              return
                                                             end
                                                             return
                                                            end
                                                            local.get $0
                                                            local.get $1
                                                            call $~lib/arraybuffer/ArrayBufferView~visit
                                                            return
                                                           end
                                                           local.get $0
                                                           local.get $1
                                                           call $assembly/vm/VM~visit
                                                           return
                                                          end
                                                          local.get $0
                                                          local.get $1
                                                          call $assembly/vm/CallFrame~visit
                                                          return
                                                         end
                                                         local.get $0
                                                         local.get $1
                                                         call $assembly/object/ObjClosure~visit
                                                         return
                                                        end
                                                        local.get $0
                                                        local.get $1
                                                        call $assembly/object/Obj~visit
                                                        return
                                                       end
                                                       local.get $0
                                                       local.get $1
                                                       call $assembly/object/ObjFunction~visit
                                                       return
                                                      end
                                                      local.get $0
                                                      local.get $1
                                                      call $assembly/chunk/Chunk~visit
                                                      return
                                                     end
                                                     return
                                                    end
                                                    local.get $0
                                                    local.get $1
                                                    call $~lib/typedarray/Uint16Array~visit
                                                    return
                                                   end
                                                   local.get $0
                                                   local.get $1
                                                   call $assembly/value/ValueArray~visit
                                                   return
                                                  end
                                                  local.get $0
                                                  local.get $1
                                                  call $assembly/value/Value~visit
                                                  return
                                                 end
                                                 local.get $0
                                                 local.get $1
                                                 call $~lib/staticarray/StaticArray<assembly/value/Value>~visit
                                                 return
                                                end
                                                local.get $0
                                                local.get $1
                                                call $assembly/object/ObjString~visit
                                                return
                                               end
                                               local.get $0
                                               local.get $1
                                               call $assembly/object/ObjUpvalue~visit
                                               return
                                              end
                                              local.get $0
                                              local.get $1
                                              call $~lib/array/Array<assembly/object/ObjUpvalue>~visit
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>~visit
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $~lib/function/Function<%28i32%29=>i32>~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/function/Function<%28~lib/string/String%29=>void>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $assembly/object/ObjBoundMethod~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/staticarray/StaticArray<~lib/string/String>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $assembly/object/ObjClass~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $assembly/object/ObjInstance~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/array/Array<~lib/string/String>~visit
                            return
                           end
                           return
                          end
                          local.get $0
                          local.get $1
                          call $assembly/compiler/Parser~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $assembly/scanner/Token~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $assembly/compiler/Compiler~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $assembly/compiler/Local~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/array/Array<assembly/compiler/Local>~visit
                      return
                     end
                     return
                    end
                    local.get $0
                    local.get $1
                    call $~lib/array/Array<assembly/compiler/Upvalue>~visit
                    return
                   end
                   local.get $0
                   local.get $1
                   call $assembly/compiler/ClassCompiler~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $assembly/compiler/ParseRule~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/array/Array<assembly/compiler/ParseRule>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/function/Function<%28bool%29=>void>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<assembly/object/ObjString>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/array/Array<assembly/value/Value>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>~visit
             return
            end
            local.get $0
            local.get $1
            call $assembly/object/ObjNative~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>~visit
         return
        end
        local.get $0
        local.get $1
        call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>~visit
        return
       end
       local.get $0
       local.get $1
       call $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/function/Function<%28f64%2Cf64%29=>bool>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/function/Function<%28f64%2Cf64%29=>f64>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/array/Array<i32>~visit
   return
  end
  unreachable
 )
 (func $~start
  call $start:assembly/index
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 54560
   i32.const 54608
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/staticarray/StaticArray<u8>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<u8>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/staticarray/StaticArray<u8>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<u8>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<u8>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|1 (param $array i32) (param $oldCapacity i32) (param $newCapacity i32) (result i32)
  (local $newArray i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newCapacity
  call $~lib/staticarray/StaticArray<u8>#constructor
  local.tee $newArray
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $array
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<u8>#get:length
   i32.lt_s
   if
    local.get $newArray
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    local.get $array
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $i
    call $~lib/staticarray/StaticArray<u8>#__get
    call $~lib/staticarray/StaticArray<u8>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $newArray
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 544
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $index
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|2 (param $array i32) (param $oldCapacity i32) (param $newCapacity i32) (result i32)
  (local $newArray i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newCapacity
  call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
  local.tee $newArray
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $array
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<assembly/value/Value>#get:length
   i32.lt_s
   if
    local.get $newArray
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    local.get $array
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $i
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $newArray
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 800
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $buffer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint16Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint16Array#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.const 1
  i32.shr_u
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $target
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $source
  local.tee $source|4
  i32.store $0 offset=4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/typedarray/Uint16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 256
   i32.const 864
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $target
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 1
  i32.shl
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|3 (param $array i32) (param $oldCapacity i32) (param $newCapacity i32) (result i32)
  (local $newArray i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newCapacity
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $newArray
  i32.store $0
  local.get $newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $array
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint16Array>
  local.get $newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String#concat (param $this i32) (param $other i32) (result i32)
  (local $thisSize i32)
  (local $otherSize i32)
  (local $outSize i32)
  (local $out i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $other
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $otherSize
  local.get $thisSize
  local.get $otherSize
  i32.add
  local.set $outSize
  local.get $outSize
  i32.const 0
  i32.eq
  if
   i32.const 32
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $thisSize
  memory.copy $0 $0
  local.get $out
  local.get $thisSize
  i32.add
  local.get $other
  local.get $otherSize
  memory.copy $0 $0
  local.get $out
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/console/console.log (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/debugLog (param $line i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/index/debugFlag
  if
   local.get $line
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/console/console.log
  else
   nop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/memory~anonymous|4 (param $code i32)
  (local $storedString i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__heap_base
  i32.const 960
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__heap_base
  i32.load $0
  local.tee $storedString
  i32.store $0
  i32.const 1056
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $storedString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/index/debugLog
  global.get $~lib/memory/__heap_base
  i32.const 10
  call $~lib/number/Usize#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/value/AS_OBJ (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/Value#get:obj
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 4160
   i32.const 4288
   i32.const 57
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/OBJ_TYPE (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/value/AS_OBJ
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/object/Obj#get:type
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/AS_BOUND_METHOD (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjBoundMethod
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 165
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/string/joinStringArray (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $4 i32)
  (local $estLen i32)
  (local $value i32)
  (local $i i32)
  (local $offset i32)
  (local $sepLen i32)
  (local $result i32)
  (local $i|11 i32)
  (local $valueLen i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 32
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $dataStart
   i32.load $0
   local.tee $4
   i32.store $0
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 32
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  i32.const 0
  local.set $estLen
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $value
    i32.store $0 offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $estLen
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     i32.add
     local.set $estLen
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $offset
  local.get $separator
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $~lib/string/String#get:length
  local.set $sepLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  local.get $sepLen
  local.get $lastIndex
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0 offset=12
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $lastIndex
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i|11
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $value
    i32.store $0 offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     local.set $valueLen
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     local.get $valueLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $valueLen
     i32.add
     local.set $offset
    end
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $result
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $value
   local.get $value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=8
   local.get $13
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   memory.copy $0 $0
  end
  local.get $result
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $this i32) (param $separator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $this
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#get:length
  local.get $separator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/util/string/joinStringArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/printFunction (param $myFunction i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $myFunction
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjFunction#get:name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjString#get:chars
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String.__eq
  if
   i32.const 4480
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $myFunction
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/object/ObjFunction#get:name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/object/ObjString#get:chars
  local.tee $1
  i32.store $0 offset=16
  i32.const 4592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 1
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/AS_CLASS (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjClass
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 170
   i32.const 22
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/AS_INSTANCE (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjInstance
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 185
   i32.const 25
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/AS_AS_STRING (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=8
  local.get $1
  call $~instanceof|assembly/object/ObjString
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 200
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/object/ObjString#get:chars
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/AS_CLOSURE (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjClosure
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 175
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/AS_FUNCTION (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjFunction
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 180
   i32.const 25
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/value/objectToString (param $objectValue i32) (result i32)
  (local $1 i32)
  (local $myClosure i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  block $case7|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $objectValue
          local.set $3
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.store $0
          local.get $3
          call $assembly/object/OBJ_TYPE
          local.set $1
          local.get $1
          global.get $assembly/object/ObjType.OBJ_BOUND_METHOD
          i32.eq
          br_if $case0|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_CLASS
          i32.eq
          br_if $case1|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_INSTANCE
          i32.eq
          br_if $case2|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_STRING
          i32.eq
          br_if $case3|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_CLOSURE
          i32.eq
          br_if $case4|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_FUNCTION
          i32.eq
          br_if $case5|0
          local.get $1
          global.get $assembly/object/ObjType.OBJ_NATIVE
          i32.eq
          br_if $case6|0
          br $case7|0
         end
         local.get $objectValue
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=12
         local.get $3
         call $assembly/object/AS_BOUND_METHOD
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $3
         call $assembly/object/ObjBoundMethod#get:method
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=4
         local.get $3
         call $assembly/object/ObjClosure#get:func
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0
         local.get $3
         call $assembly/object/printFunction
         local.set $3
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $3
         return
        end
        local.get $objectValue
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0 offset=4
        local.get $3
        call $assembly/object/AS_CLASS
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0
        local.get $3
        call $assembly/object/ObjClass#get:name
        local.set $3
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $3
        return
       end
       local.get $objectValue
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=16
       local.get $3
       call $assembly/object/AS_INSTANCE
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=12
       local.get $3
       call $assembly/object/ObjInstance#get:klass
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=8
       local.get $3
       call $assembly/object/ObjClass#get:name
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       local.get $3
       i32.const 4624
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $3
       call $~lib/string/String#concat
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $3
       return
      end
      local.get $objectValue
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/object/AS_AS_STRING
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $objectValue
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $assembly/object/AS_CLOSURE
     local.tee $myClosure
     i32.store $0 offset=20
     local.get $myClosure
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $assembly/object/ObjClosure#get:func
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $assembly/object/printFunction
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $objectValue
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/object/AS_FUNCTION
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/object/printFunction
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 4672
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 32
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/value/valToString (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $case4|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $value
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       call $assembly/value/Value#get:type
       local.set $1
       local.get $1
       global.get $assembly/value/ValueType.VAL_BOOL
       i32.eq
       br_if $case0|0
       local.get $1
       global.get $assembly/value/ValueType.VAL_NIL
       i32.eq
       br_if $case1|0
       local.get $1
       global.get $assembly/value/ValueType.VAL_NUMBER
       i32.eq
       br_if $case2|0
       local.get $1
       global.get $assembly/value/ValueType.VAL_OBJ
       i32.eq
       br_if $case3|0
       br $case4|0
      end
      local.get $value
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      call $assembly/value/Value#get:boolean
      if (result i32)
       i32.const 2928
      else
       i32.const 2960
      end
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      return
     end
     i32.const 2992
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $value
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    call $assembly/value/Value#get:number
    i32.const 0
    call $~lib/number/F64#toString
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   local.get $value
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/value/objectToString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/value~anonymous|0 (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/valToString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/Obj#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/object/ObjType.OBJ_STRING
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/Obj#set:nextObj
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 4752
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/object/ObjUpvalue>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/value/Value#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/value/ValueType.VAL_NIL
  call $assembly/value/Value#set:type
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/Value#set:boolean
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  f64.const 0
  call $assembly/value/Value#set:number
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/Value#set:obj
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/object/ObjUpvalue#constructor (param $this i32) (param $t i32) (param $s i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/value/Value#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjUpvalue#set:locationValue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const -1
  call $assembly/object/ObjUpvalue#set:locationIndex
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjUpvalue#set:closed
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjUpvalue#set:nextUpvalue
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  global.get $assembly/object/ObjType.OBJ_UPVALUE
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $array
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 496
    i32.const 4752
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/itcms/__renew
   local.set $newData
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store $0
    local.get $array
    local.get $newData
    i32.store $0 offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 256
    i32.const 4752
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/object/ObjUpvalue>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/object/ObjClosure#constructor (param $this i32) (param $myFunc i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjClosure#set:func
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjUpvalue>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjClosure#set:upvalues
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjClosure#set:upvalueCount
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $myFunc
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjClosure#set:func
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  global.get $assembly/object/ObjType.OBJ_CLOSURE
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $myFunc
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/object/ObjFunction#get:upvalueCount
  i32.const 255
  i32.and
  call $~lib/array/Array<assembly/object/ObjUpvalue>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjClosure#set:upvalues
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $myFunc
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/object/ObjFunction#get:upvalueCount
   i32.const 255
   i32.and
   i32.lt_u
   if
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $assembly/object/ObjClosure#get:upvalues
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $i
    i32.const 0
    i32.const 1
    i32.const 0
    call $assembly/object/ObjUpvalue#constructor
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $myFunc
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjFunction#get:upvalueCount
  i32.const 255
  i32.and
  call $assembly/object/ObjClosure#set:upvalueCount
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/value/ValueArray#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#set:count
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#set:capacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#set:values
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#set:count
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#set:capacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/value/ValueArray#set:values
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/chunk/Chunk#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:count
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:capacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:code
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:lines
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:constants
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:count
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#set:capacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/staticarray/StaticArray<u8>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/chunk/Chunk#set:code
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint16Array#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/chunk/Chunk#set:lines
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/value/ValueArray#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/chunk/Chunk#set:constants
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/object/ObjString#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/ObjString#set:length
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 32
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/object/ObjString#set:chars
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/object/ObjFunction#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/ObjFunction#set:arity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/ObjFunction#set:upvalueCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/chunk/Chunk#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/object/ObjFunction#set:chunk
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/ObjString#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/object/ObjFunction#set:name
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/object/ObjType.OBJ_FUNCTION
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vm/CallFrame#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $assembly/object/ObjFunction#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/object/ObjClosure#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/vm/CallFrame#set:closure
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/vm/CallFrame#set:ip
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/vm/CallFrame#set:slotsIndex
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $index
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/staticarray/StaticArray<assembly/value/Value>#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<usize>
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#fill@varargs (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $start
  local.get $end
  call $~lib/staticarray/StaticArray<assembly/value/Value>#fill
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vm/VM#constructor (param $this i32) (result i32)
  (local $i i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  global.get $assembly/vm/FRAMES_MAX
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#set:frames
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/vm/VM#set:frameCount
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  global.get $assembly/vm/STACK_MAX
  call $~lib/staticarray/StaticArray<assembly/value/Value>#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 0
  call $assembly/value/Value#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#fill@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#set:stack
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/vm/VM#set:stackTop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#set:globals
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#set:strings
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/object/ObjString#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#set:initString
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/vm/VM#set:openUpvalues
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/vm/VM#set:objects
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   global.get $assembly/vm/FRAMES_MAX
   i32.lt_s
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    local.get $2
    call $assembly/vm/VM#get:frames
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    local.get $i
    i32.const 0
    call $assembly/vm/CallFrame#constructor
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    local.get $2
    call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:assembly/debug~anonymous|0 (param $name i32) (param $offset i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/debugLog
  local.get $offset
  i32.const 1
  i32.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/debug~anonymous|1 (param $name i32) (param $chunk i32) (param $offset i32) (result i32)
  (local $slot i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $chunk
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/chunk/Chunk#get:code
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $offset
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $slot
  global.get $~lib/memory/__stack_pointer
  local.get $name
  local.tee $4
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $slot
  i32.const 10
  call $~lib/number/U8#toString
  local.tee $5
  i32.store $0 offset=12
  i32.const 4864
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  local.get $4
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4864
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 2
  local.get $5
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4864
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 32
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/index/debugLog
  local.get $offset
  i32.const 2
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $start:assembly/debug~anonymous|2 (param $name i32) (param $sign i32) (param $chunk i32) (param $offset i32) (result i32)
  (local $jump i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $chunk
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $assembly/chunk/Chunk#get:code
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $offset
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  i32.const 8
  i32.const 7
  i32.and
  i32.shl
  i32.const 255
  i32.and
  local.set $jump
  local.get $jump
  local.get $chunk
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $assembly/chunk/Chunk#get:code
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $offset
  i32.const 2
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  i32.or
  local.set $jump
  global.get $~lib/memory/__stack_pointer
  local.get $name
  local.tee $5
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $offset
  i32.const 10
  call $~lib/number/U32#toString
  local.tee $6
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $offset
  i32.const 3
  i32.add
  local.get $sign
  local.get $jump
  i32.const 65535
  i32.and
  i32.mul
  i32.add
  i32.const 10
  call $~lib/number/U32#toString
  local.tee $7
  i32.store $0 offset=16
  i32.const 4960
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  local.get $5
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4960
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 2
  local.get $6
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4960
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 4
  local.get $7
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 4960
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 32
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/index/debugLog
  local.get $offset
  i32.const 3
  i32.add
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/debug~anonymous|3 (param $name i32) (param $chunk i32) (param $offset i32) (result i32)
  (local $constant i32)
  (local $valueToString i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $chunk
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $assembly/chunk/Chunk#get:code
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $offset
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $constant
  global.get $~lib/memory/__stack_pointer
  local.get $chunk
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $assembly/chunk/Chunk#get:constants
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/value/ValueArray#get:values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $constant
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/value/printValueToString
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.tee $valueToString
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $name
  local.tee $5
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $constant
  i32.const 10
  call $~lib/number/U8#toString
  local.tee $6
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $valueToString
  local.tee $7
  i32.store $0 offset=28
  i32.const 5152
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  local.get $5
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 5152
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 2
  local.get $6
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 5152
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 4
  local.get $7
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 5152
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 32
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/index/debugLog
  local.get $offset
  i32.const 2
  i32.add
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/typedarray/Uint16Array#__get (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 256
   i32.const 864
   i32.const 594
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/debug/invokeInstruction (param $name i32) (param $chunk i32) (param $offset i32) (result i32)
  (local $constant i32)
  (local $argCount i32)
  (local $valueToString i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $chunk
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/chunk/Chunk#get:code
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $offset
  i32.const 1
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $constant
  local.get $chunk
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/chunk/Chunk#get:code
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $offset
  i32.const 2
  i32.add
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $argCount
  global.get $~lib/memory/__stack_pointer
  local.get $chunk
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/chunk/Chunk#get:constants
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/value/ValueArray#get:values
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $constant
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/value/printValueToString
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.tee $valueToString
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $name
  local.tee $6
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $argCount
  i32.const 10
  call $~lib/number/U8#toString
  local.tee $7
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $constant
  i32.const 10
  call $~lib/number/U8#toString
  local.tee $8
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $valueToString
  local.tee $9
  i32.store $0 offset=32
  i32.const 6960
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  local.get $6
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6960
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 2
  local.get $7
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6960
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 4
  local.get $8
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6960
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 6
  local.get $9
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6960
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 32
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/index/debugLog
  local.get $offset
  i32.const 3
  i32.add
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/string/String.__concat (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/debug~anonymous|4 (param $chunk i32) (param $offset i32) (result i32)
  (local $info i32)
  (local $3 i32)
  (local $4 i32)
  (local $instruction i32)
  (local $6 i32)
  (local $7 i32)
  (local $constant i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $myStr i32)
  (local $myfunction i32)
  (local $j i32)
  (local $upStr i32)
  (local $16 i32)
  (local $isLocalConst i32)
  (local $isLocal i32)
  (local $19 i32)
  (local $index i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  local.tee $info
  i32.store $0
  local.get $offset
  i32.const 0
  i32.gt_u
  if (result i32)
   local.get $chunk
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   call $assembly/chunk/Chunk#get:lines
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   local.get $offset
   call $~lib/typedarray/Uint16Array#__get
   local.get $chunk
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   call $assembly/chunk/Chunk#get:lines
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   local.get $offset
   i32.const 1
   i32.sub
   call $~lib/typedarray/Uint16Array#__get
   i32.eq
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $offset
   i32.const 10
   call $~lib/number/U32#toString
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   i32.const 5232
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   call $~lib/string/String#concat
   local.tee $info
   i32.store $0
  else
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $offset
   i32.const 10
   call $~lib/number/U32#toString
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $chunk
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   call $assembly/chunk/Chunk#get:lines
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   local.get $offset
   call $~lib/typedarray/Uint16Array#__get
   i32.const 10
   call $~lib/number/U16#toString
   local.tee $4
   i32.store $0 offset=16
   i32.const 5344
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   i32.const 0
   local.get $3
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 5344
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   i32.const 2
   local.get $4
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 5344
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   i32.const 32
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $info
   i32.store $0
  end
  local.get $chunk
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=8
  local.get $26
  call $assembly/chunk/Chunk#get:code
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  local.get $offset
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $instruction
  block $case37|0
   block $case36|0
    block $case35|0
     block $case34|0
      block $case33|0
       block $case32|0
        block $case31|0
         block $case30|0
          block $case29|0
           block $case28|0
            block $case27|0
             block $case26|0
              block $case25|0
               block $case24|0
                block $case23|0
                 block $case22|0
                  block $case21|0
                   block $case20|0
                    block $case19|0
                     block $case18|0
                      block $case17|0
                       block $case16|0
                        block $case15|0
                         block $case14|0
                          block $case13|0
                           block $case12|0
                            block $case11|0
                             block $case10|0
                              block $case9|0
                               block $case8|0
                                block $case7|0
                                 block $case6|0
                                  block $case5|0
                                   block $case4|0
                                    block $case3|0
                                     block $case2|0
                                      block $case1|0
                                       block $case0|0
                                        local.get $instruction
                                        local.set $6
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_CONSTANT
                                        i32.eq
                                        br_if $case0|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_NIL
                                        i32.eq
                                        br_if $case1|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_TRUE
                                        i32.eq
                                        br_if $case2|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_FALSE
                                        i32.eq
                                        br_if $case3|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_POP
                                        i32.eq
                                        br_if $case4|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GET_LOCAL
                                        i32.eq
                                        br_if $case5|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SET_LOCAL
                                        i32.eq
                                        br_if $case6|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GET_GLOBAL
                                        i32.eq
                                        br_if $case7|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_DEFINE_GLOBAL
                                        i32.eq
                                        br_if $case8|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SET_GLOBAL
                                        i32.eq
                                        br_if $case9|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GET_UPVALUE
                                        i32.eq
                                        br_if $case10|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SET_UPVALUE
                                        i32.eq
                                        br_if $case11|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GET_PROPERTY
                                        i32.eq
                                        br_if $case12|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SET_PROPERTY
                                        i32.eq
                                        br_if $case13|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GET_SUPER
                                        i32.eq
                                        br_if $case14|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_EQUAL
                                        i32.eq
                                        br_if $case15|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_GREATER
                                        i32.eq
                                        br_if $case16|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_LESS
                                        i32.eq
                                        br_if $case17|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_ADD
                                        i32.eq
                                        br_if $case18|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SUBTRACT
                                        i32.eq
                                        br_if $case19|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_MULTIPLY
                                        i32.eq
                                        br_if $case20|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_DIVIDE
                                        i32.eq
                                        br_if $case21|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_NOT
                                        i32.eq
                                        br_if $case22|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_NEGATE
                                        i32.eq
                                        br_if $case23|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_PRINT
                                        i32.eq
                                        br_if $case24|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_JUMP
                                        i32.eq
                                        br_if $case25|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
                                        i32.eq
                                        br_if $case26|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_LOOP
                                        i32.eq
                                        br_if $case27|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_CALL
                                        i32.eq
                                        br_if $case28|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_INVOKE
                                        i32.eq
                                        br_if $case29|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_SUPER_INVOKE
                                        i32.eq
                                        br_if $case30|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_CLOSURE
                                        i32.eq
                                        br_if $case31|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_CLOSE_UPVALUE
                                        i32.eq
                                        br_if $case32|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_RETURN
                                        i32.eq
                                        br_if $case33|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_CLASS
                                        i32.eq
                                        br_if $case34|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_INHERIT
                                        i32.eq
                                        br_if $case35|0
                                        local.get $6
                                        global.get $assembly/chunk/OpCode.OP_METHOD
                                        i32.eq
                                        br_if $case36|0
                                        br $case37|0
                                       end
                                       local.get $info
                                       local.set $26
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $26
                                       i32.store $0 offset=20
                                       local.get $26
                                       i32.const 5392
                                       local.set $26
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $26
                                       i32.store $0 offset=24
                                       local.get $26
                                       call $~lib/string/String#concat
                                       local.set $26
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $26
                                       i32.store $0 offset=4
                                       local.get $26
                                       local.get $chunk
                                       local.set $26
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $26
                                       i32.store $0 offset=8
                                       local.get $26
                                       local.get $offset
                                       i32.const 3
                                       global.set $~argumentsLength
                                       global.get $assembly/debug/constantInstruction
                                       i32.load $0
                                       call_indirect $0 (type $i32_i32_i32_=>_i32)
                                       local.set $26
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 76
                                       i32.add
                                       global.set $~lib/memory/__stack_pointer
                                       local.get $26
                                       return
                                      end
                                      local.get $info
                                      local.set $26
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $26
                                      i32.store $0 offset=8
                                      local.get $26
                                      i32.const 5440
                                      local.set $26
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $26
                                      i32.store $0 offset=20
                                      local.get $26
                                      call $~lib/string/String#concat
                                      local.set $26
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $26
                                      i32.store $0 offset=4
                                      local.get $26
                                      local.get $offset
                                      i32.const 2
                                      global.set $~argumentsLength
                                      global.get $assembly/debug/simpleInstruction
                                      i32.load $0
                                      call_indirect $0 (type $i32_i32_=>_i32)
                                      local.set $26
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 76
                                      i32.add
                                      global.set $~lib/memory/__stack_pointer
                                      local.get $26
                                      return
                                     end
                                     local.get $info
                                     local.set $26
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $26
                                     i32.store $0 offset=8
                                     local.get $26
                                     i32.const 5488
                                     local.set $26
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $26
                                     i32.store $0 offset=20
                                     local.get $26
                                     call $~lib/string/String#concat
                                     local.set $26
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $26
                                     i32.store $0 offset=4
                                     local.get $26
                                     local.get $offset
                                     i32.const 2
                                     global.set $~argumentsLength
                                     global.get $assembly/debug/simpleInstruction
                                     i32.load $0
                                     call_indirect $0 (type $i32_i32_=>_i32)
                                     local.set $26
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 76
                                     i32.add
                                     global.set $~lib/memory/__stack_pointer
                                     local.get $26
                                     return
                                    end
                                    local.get $info
                                    local.set $26
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $26
                                    i32.store $0 offset=8
                                    local.get $26
                                    i32.const 5536
                                    local.set $26
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $26
                                    i32.store $0 offset=20
                                    local.get $26
                                    call $~lib/string/String#concat
                                    local.set $26
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $26
                                    i32.store $0 offset=4
                                    local.get $26
                                    local.get $offset
                                    i32.const 2
                                    global.set $~argumentsLength
                                    global.get $assembly/debug/simpleInstruction
                                    i32.load $0
                                    call_indirect $0 (type $i32_i32_=>_i32)
                                    local.set $26
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 76
                                    i32.add
                                    global.set $~lib/memory/__stack_pointer
                                    local.get $26
                                    return
                                   end
                                   local.get $info
                                   local.set $26
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $26
                                   i32.store $0 offset=8
                                   local.get $26
                                   i32.const 5584
                                   local.set $26
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $26
                                   i32.store $0 offset=20
                                   local.get $26
                                   call $~lib/string/String#concat
                                   local.set $26
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $26
                                   i32.store $0 offset=4
                                   local.get $26
                                   local.get $offset
                                   i32.const 2
                                   global.set $~argumentsLength
                                   global.get $assembly/debug/simpleInstruction
                                   i32.load $0
                                   call_indirect $0 (type $i32_i32_=>_i32)
                                   local.set $26
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 76
                                   i32.add
                                   global.set $~lib/memory/__stack_pointer
                                   local.get $26
                                   return
                                  end
                                  local.get $info
                                  local.set $26
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $26
                                  i32.store $0 offset=20
                                  local.get $26
                                  i32.const 5632
                                  local.set $26
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $26
                                  i32.store $0 offset=24
                                  local.get $26
                                  call $~lib/string/String#concat
                                  local.set $26
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $26
                                  i32.store $0 offset=4
                                  local.get $26
                                  local.get $chunk
                                  local.set $26
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $26
                                  i32.store $0 offset=8
                                  local.get $26
                                  local.get $offset
                                  i32.const 3
                                  global.set $~argumentsLength
                                  global.get $assembly/debug/byteInstruction
                                  i32.load $0
                                  call_indirect $0 (type $i32_i32_i32_=>_i32)
                                  local.set $26
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 76
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  local.get $26
                                  return
                                 end
                                 local.get $info
                                 local.set $26
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $26
                                 i32.store $0 offset=20
                                 local.get $26
                                 i32.const 5680
                                 local.set $26
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $26
                                 i32.store $0 offset=24
                                 local.get $26
                                 call $~lib/string/String#concat
                                 local.set $26
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $26
                                 i32.store $0 offset=4
                                 local.get $26
                                 local.get $chunk
                                 local.set $26
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $26
                                 i32.store $0 offset=8
                                 local.get $26
                                 local.get $offset
                                 i32.const 3
                                 global.set $~argumentsLength
                                 global.get $assembly/debug/byteInstruction
                                 i32.load $0
                                 call_indirect $0 (type $i32_i32_i32_=>_i32)
                                 local.set $26
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 76
                                 i32.add
                                 global.set $~lib/memory/__stack_pointer
                                 local.get $26
                                 return
                                end
                                local.get $info
                                local.set $26
                                global.get $~lib/memory/__stack_pointer
                                local.get $26
                                i32.store $0 offset=20
                                local.get $26
                                i32.const 5728
                                local.set $26
                                global.get $~lib/memory/__stack_pointer
                                local.get $26
                                i32.store $0 offset=24
                                local.get $26
                                call $~lib/string/String#concat
                                local.set $26
                                global.get $~lib/memory/__stack_pointer
                                local.get $26
                                i32.store $0 offset=4
                                local.get $26
                                local.get $chunk
                                local.set $26
                                global.get $~lib/memory/__stack_pointer
                                local.get $26
                                i32.store $0 offset=8
                                local.get $26
                                local.get $offset
                                i32.const 3
                                global.set $~argumentsLength
                                global.get $assembly/debug/constantInstruction
                                i32.load $0
                                call_indirect $0 (type $i32_i32_i32_=>_i32)
                                local.set $26
                                global.get $~lib/memory/__stack_pointer
                                i32.const 76
                                i32.add
                                global.set $~lib/memory/__stack_pointer
                                local.get $26
                                return
                               end
                               local.get $info
                               local.set $26
                               global.get $~lib/memory/__stack_pointer
                               local.get $26
                               i32.store $0 offset=20
                               local.get $26
                               i32.const 5776
                               local.set $26
                               global.get $~lib/memory/__stack_pointer
                               local.get $26
                               i32.store $0 offset=24
                               local.get $26
                               call $~lib/string/String#concat
                               local.set $26
                               global.get $~lib/memory/__stack_pointer
                               local.get $26
                               i32.store $0 offset=4
                               local.get $26
                               local.get $chunk
                               local.set $26
                               global.get $~lib/memory/__stack_pointer
                               local.get $26
                               i32.store $0 offset=8
                               local.get $26
                               local.get $offset
                               i32.const 3
                               global.set $~argumentsLength
                               global.get $assembly/debug/constantInstruction
                               i32.load $0
                               call_indirect $0 (type $i32_i32_i32_=>_i32)
                               local.set $26
                               global.get $~lib/memory/__stack_pointer
                               i32.const 76
                               i32.add
                               global.set $~lib/memory/__stack_pointer
                               local.get $26
                               return
                              end
                              local.get $info
                              local.set $26
                              global.get $~lib/memory/__stack_pointer
                              local.get $26
                              i32.store $0 offset=20
                              local.get $26
                              i32.const 5840
                              local.set $26
                              global.get $~lib/memory/__stack_pointer
                              local.get $26
                              i32.store $0 offset=24
                              local.get $26
                              call $~lib/string/String#concat
                              local.set $26
                              global.get $~lib/memory/__stack_pointer
                              local.get $26
                              i32.store $0 offset=4
                              local.get $26
                              local.get $chunk
                              local.set $26
                              global.get $~lib/memory/__stack_pointer
                              local.get $26
                              i32.store $0 offset=8
                              local.get $26
                              local.get $offset
                              i32.const 3
                              global.set $~argumentsLength
                              global.get $assembly/debug/constantInstruction
                              i32.load $0
                              call_indirect $0 (type $i32_i32_i32_=>_i32)
                              local.set $26
                              global.get $~lib/memory/__stack_pointer
                              i32.const 76
                              i32.add
                              global.set $~lib/memory/__stack_pointer
                              local.get $26
                              return
                             end
                             local.get $info
                             local.set $26
                             global.get $~lib/memory/__stack_pointer
                             local.get $26
                             i32.store $0 offset=20
                             local.get $26
                             i32.const 5888
                             local.set $26
                             global.get $~lib/memory/__stack_pointer
                             local.get $26
                             i32.store $0 offset=24
                             local.get $26
                             call $~lib/string/String#concat
                             local.set $26
                             global.get $~lib/memory/__stack_pointer
                             local.get $26
                             i32.store $0 offset=4
                             local.get $26
                             local.get $chunk
                             local.set $26
                             global.get $~lib/memory/__stack_pointer
                             local.get $26
                             i32.store $0 offset=8
                             local.get $26
                             local.get $offset
                             i32.const 3
                             global.set $~argumentsLength
                             global.get $assembly/debug/byteInstruction
                             i32.load $0
                             call_indirect $0 (type $i32_i32_i32_=>_i32)
                             local.set $26
                             global.get $~lib/memory/__stack_pointer
                             i32.const 76
                             i32.add
                             global.set $~lib/memory/__stack_pointer
                             local.get $26
                             return
                            end
                            local.get $info
                            local.set $26
                            global.get $~lib/memory/__stack_pointer
                            local.get $26
                            i32.store $0 offset=20
                            local.get $26
                            i32.const 5952
                            local.set $26
                            global.get $~lib/memory/__stack_pointer
                            local.get $26
                            i32.store $0 offset=24
                            local.get $26
                            call $~lib/string/String#concat
                            local.set $26
                            global.get $~lib/memory/__stack_pointer
                            local.get $26
                            i32.store $0 offset=4
                            local.get $26
                            local.get $chunk
                            local.set $26
                            global.get $~lib/memory/__stack_pointer
                            local.get $26
                            i32.store $0 offset=8
                            local.get $26
                            local.get $offset
                            i32.const 3
                            global.set $~argumentsLength
                            global.get $assembly/debug/byteInstruction
                            i32.load $0
                            call_indirect $0 (type $i32_i32_i32_=>_i32)
                            local.set $26
                            global.get $~lib/memory/__stack_pointer
                            i32.const 76
                            i32.add
                            global.set $~lib/memory/__stack_pointer
                            local.get $26
                            return
                           end
                           local.get $info
                           local.set $26
                           global.get $~lib/memory/__stack_pointer
                           local.get $26
                           i32.store $0 offset=20
                           local.get $26
                           i32.const 6016
                           local.set $26
                           global.get $~lib/memory/__stack_pointer
                           local.get $26
                           i32.store $0 offset=24
                           local.get $26
                           call $~lib/string/String#concat
                           local.set $26
                           global.get $~lib/memory/__stack_pointer
                           local.get $26
                           i32.store $0 offset=4
                           local.get $26
                           local.get $chunk
                           local.set $26
                           global.get $~lib/memory/__stack_pointer
                           local.get $26
                           i32.store $0 offset=8
                           local.get $26
                           local.get $offset
                           i32.const 3
                           global.set $~argumentsLength
                           global.get $assembly/debug/constantInstruction
                           i32.load $0
                           call_indirect $0 (type $i32_i32_i32_=>_i32)
                           local.set $26
                           global.get $~lib/memory/__stack_pointer
                           i32.const 76
                           i32.add
                           global.set $~lib/memory/__stack_pointer
                           local.get $26
                           return
                          end
                          local.get $info
                          local.set $26
                          global.get $~lib/memory/__stack_pointer
                          local.get $26
                          i32.store $0 offset=20
                          local.get $26
                          i32.const 6080
                          local.set $26
                          global.get $~lib/memory/__stack_pointer
                          local.get $26
                          i32.store $0 offset=24
                          local.get $26
                          call $~lib/string/String#concat
                          local.set $26
                          global.get $~lib/memory/__stack_pointer
                          local.get $26
                          i32.store $0 offset=4
                          local.get $26
                          local.get $chunk
                          local.set $26
                          global.get $~lib/memory/__stack_pointer
                          local.get $26
                          i32.store $0 offset=8
                          local.get $26
                          local.get $offset
                          i32.const 3
                          global.set $~argumentsLength
                          global.get $assembly/debug/constantInstruction
                          i32.load $0
                          call_indirect $0 (type $i32_i32_i32_=>_i32)
                          local.set $26
                          global.get $~lib/memory/__stack_pointer
                          i32.const 76
                          i32.add
                          global.set $~lib/memory/__stack_pointer
                          local.get $26
                          return
                         end
                         local.get $info
                         local.set $26
                         global.get $~lib/memory/__stack_pointer
                         local.get $26
                         i32.store $0 offset=20
                         local.get $26
                         i32.const 6144
                         local.set $26
                         global.get $~lib/memory/__stack_pointer
                         local.get $26
                         i32.store $0 offset=24
                         local.get $26
                         call $~lib/string/String#concat
                         local.set $26
                         global.get $~lib/memory/__stack_pointer
                         local.get $26
                         i32.store $0 offset=4
                         local.get $26
                         local.get $chunk
                         local.set $26
                         global.get $~lib/memory/__stack_pointer
                         local.get $26
                         i32.store $0 offset=8
                         local.get $26
                         local.get $offset
                         i32.const 3
                         global.set $~argumentsLength
                         global.get $assembly/debug/constantInstruction
                         i32.load $0
                         call_indirect $0 (type $i32_i32_i32_=>_i32)
                         local.set $26
                         global.get $~lib/memory/__stack_pointer
                         i32.const 76
                         i32.add
                         global.set $~lib/memory/__stack_pointer
                         local.get $26
                         return
                        end
                        local.get $info
                        local.set $26
                        global.get $~lib/memory/__stack_pointer
                        local.get $26
                        i32.store $0 offset=8
                        local.get $26
                        i32.const 6192
                        local.set $26
                        global.get $~lib/memory/__stack_pointer
                        local.get $26
                        i32.store $0 offset=20
                        local.get $26
                        call $~lib/string/String#concat
                        local.set $26
                        global.get $~lib/memory/__stack_pointer
                        local.get $26
                        i32.store $0 offset=4
                        local.get $26
                        local.get $offset
                        i32.const 2
                        global.set $~argumentsLength
                        global.get $assembly/debug/simpleInstruction
                        i32.load $0
                        call_indirect $0 (type $i32_i32_=>_i32)
                        local.set $26
                        global.get $~lib/memory/__stack_pointer
                        i32.const 76
                        i32.add
                        global.set $~lib/memory/__stack_pointer
                        local.get $26
                        return
                       end
                       local.get $info
                       local.set $26
                       global.get $~lib/memory/__stack_pointer
                       local.get $26
                       i32.store $0 offset=8
                       local.get $26
                       i32.const 6240
                       local.set $26
                       global.get $~lib/memory/__stack_pointer
                       local.get $26
                       i32.store $0 offset=20
                       local.get $26
                       call $~lib/string/String#concat
                       local.set $26
                       global.get $~lib/memory/__stack_pointer
                       local.get $26
                       i32.store $0 offset=4
                       local.get $26
                       local.get $offset
                       i32.const 2
                       global.set $~argumentsLength
                       global.get $assembly/debug/simpleInstruction
                       i32.load $0
                       call_indirect $0 (type $i32_i32_=>_i32)
                       local.set $26
                       global.get $~lib/memory/__stack_pointer
                       i32.const 76
                       i32.add
                       global.set $~lib/memory/__stack_pointer
                       local.get $26
                       return
                      end
                      local.get $info
                      local.set $26
                      global.get $~lib/memory/__stack_pointer
                      local.get $26
                      i32.store $0 offset=8
                      local.get $26
                      i32.const 6288
                      local.set $26
                      global.get $~lib/memory/__stack_pointer
                      local.get $26
                      i32.store $0 offset=20
                      local.get $26
                      call $~lib/string/String#concat
                      local.set $26
                      global.get $~lib/memory/__stack_pointer
                      local.get $26
                      i32.store $0 offset=4
                      local.get $26
                      local.get $offset
                      i32.const 2
                      global.set $~argumentsLength
                      global.get $assembly/debug/simpleInstruction
                      i32.load $0
                      call_indirect $0 (type $i32_i32_=>_i32)
                      local.set $26
                      global.get $~lib/memory/__stack_pointer
                      i32.const 76
                      i32.add
                      global.set $~lib/memory/__stack_pointer
                      local.get $26
                      return
                     end
                     local.get $info
                     local.set $26
                     global.get $~lib/memory/__stack_pointer
                     local.get $26
                     i32.store $0 offset=8
                     local.get $26
                     i32.const 6336
                     local.set $26
                     global.get $~lib/memory/__stack_pointer
                     local.get $26
                     i32.store $0 offset=20
                     local.get $26
                     call $~lib/string/String#concat
                     local.set $26
                     global.get $~lib/memory/__stack_pointer
                     local.get $26
                     i32.store $0 offset=4
                     local.get $26
                     local.get $offset
                     i32.const 2
                     global.set $~argumentsLength
                     global.get $assembly/debug/simpleInstruction
                     i32.load $0
                     call_indirect $0 (type $i32_i32_=>_i32)
                     local.set $26
                     global.get $~lib/memory/__stack_pointer
                     i32.const 76
                     i32.add
                     global.set $~lib/memory/__stack_pointer
                     local.get $26
                     return
                    end
                    local.get $info
                    local.set $26
                    global.get $~lib/memory/__stack_pointer
                    local.get $26
                    i32.store $0 offset=8
                    local.get $26
                    i32.const 6384
                    local.set $26
                    global.get $~lib/memory/__stack_pointer
                    local.get $26
                    i32.store $0 offset=20
                    local.get $26
                    call $~lib/string/String#concat
                    local.set $26
                    global.get $~lib/memory/__stack_pointer
                    local.get $26
                    i32.store $0 offset=4
                    local.get $26
                    local.get $offset
                    i32.const 2
                    global.set $~argumentsLength
                    global.get $assembly/debug/simpleInstruction
                    i32.load $0
                    call_indirect $0 (type $i32_i32_=>_i32)
                    local.set $26
                    global.get $~lib/memory/__stack_pointer
                    i32.const 76
                    i32.add
                    global.set $~lib/memory/__stack_pointer
                    local.get $26
                    return
                   end
                   local.get $info
                   local.set $26
                   global.get $~lib/memory/__stack_pointer
                   local.get $26
                   i32.store $0 offset=8
                   local.get $26
                   i32.const 6432
                   local.set $26
                   global.get $~lib/memory/__stack_pointer
                   local.get $26
                   i32.store $0 offset=20
                   local.get $26
                   call $~lib/string/String#concat
                   local.set $26
                   global.get $~lib/memory/__stack_pointer
                   local.get $26
                   i32.store $0 offset=4
                   local.get $26
                   local.get $offset
                   i32.const 2
                   global.set $~argumentsLength
                   global.get $assembly/debug/simpleInstruction
                   i32.load $0
                   call_indirect $0 (type $i32_i32_=>_i32)
                   local.set $26
                   global.get $~lib/memory/__stack_pointer
                   i32.const 76
                   i32.add
                   global.set $~lib/memory/__stack_pointer
                   local.get $26
                   return
                  end
                  local.get $info
                  local.set $26
                  global.get $~lib/memory/__stack_pointer
                  local.get $26
                  i32.store $0 offset=8
                  local.get $26
                  i32.const 6480
                  local.set $26
                  global.get $~lib/memory/__stack_pointer
                  local.get $26
                  i32.store $0 offset=20
                  local.get $26
                  call $~lib/string/String#concat
                  local.set $26
                  global.get $~lib/memory/__stack_pointer
                  local.get $26
                  i32.store $0 offset=4
                  local.get $26
                  local.get $offset
                  i32.const 2
                  global.set $~argumentsLength
                  global.get $assembly/debug/simpleInstruction
                  i32.load $0
                  call_indirect $0 (type $i32_i32_=>_i32)
                  local.set $26
                  global.get $~lib/memory/__stack_pointer
                  i32.const 76
                  i32.add
                  global.set $~lib/memory/__stack_pointer
                  local.get $26
                  return
                 end
                 local.get $info
                 local.set $26
                 global.get $~lib/memory/__stack_pointer
                 local.get $26
                 i32.store $0 offset=8
                 local.get $26
                 i32.const 6528
                 local.set $26
                 global.get $~lib/memory/__stack_pointer
                 local.get $26
                 i32.store $0 offset=20
                 local.get $26
                 call $~lib/string/String#concat
                 local.set $26
                 global.get $~lib/memory/__stack_pointer
                 local.get $26
                 i32.store $0 offset=4
                 local.get $26
                 local.get $offset
                 i32.const 2
                 global.set $~argumentsLength
                 global.get $assembly/debug/simpleInstruction
                 i32.load $0
                 call_indirect $0 (type $i32_i32_=>_i32)
                 local.set $26
                 global.get $~lib/memory/__stack_pointer
                 i32.const 76
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 local.get $26
                 return
                end
                local.get $info
                local.set $26
                global.get $~lib/memory/__stack_pointer
                local.get $26
                i32.store $0 offset=8
                local.get $26
                i32.const 6576
                local.set $26
                global.get $~lib/memory/__stack_pointer
                local.get $26
                i32.store $0 offset=20
                local.get $26
                call $~lib/string/String#concat
                local.set $26
                global.get $~lib/memory/__stack_pointer
                local.get $26
                i32.store $0 offset=4
                local.get $26
                local.get $offset
                i32.const 2
                global.set $~argumentsLength
                global.get $assembly/debug/simpleInstruction
                i32.load $0
                call_indirect $0 (type $i32_i32_=>_i32)
                local.set $26
                global.get $~lib/memory/__stack_pointer
                i32.const 76
                i32.add
                global.set $~lib/memory/__stack_pointer
                local.get $26
                return
               end
               local.get $info
               local.set $26
               global.get $~lib/memory/__stack_pointer
               local.get $26
               i32.store $0 offset=8
               local.get $26
               i32.const 6624
               local.set $26
               global.get $~lib/memory/__stack_pointer
               local.get $26
               i32.store $0 offset=20
               local.get $26
               call $~lib/string/String#concat
               local.set $26
               global.get $~lib/memory/__stack_pointer
               local.get $26
               i32.store $0 offset=4
               local.get $26
               local.get $offset
               i32.const 2
               global.set $~argumentsLength
               global.get $assembly/debug/simpleInstruction
               i32.load $0
               call_indirect $0 (type $i32_i32_=>_i32)
               local.set $26
               global.get $~lib/memory/__stack_pointer
               i32.const 76
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $26
               return
              end
              local.get $info
              local.set $26
              global.get $~lib/memory/__stack_pointer
              local.get $26
              i32.store $0 offset=20
              local.get $26
              i32.const 6672
              local.set $26
              global.get $~lib/memory/__stack_pointer
              local.get $26
              i32.store $0 offset=24
              local.get $26
              call $~lib/string/String#concat
              local.set $26
              global.get $~lib/memory/__stack_pointer
              local.get $26
              i32.store $0 offset=4
              local.get $26
              i32.const 1
              local.get $chunk
              local.set $26
              global.get $~lib/memory/__stack_pointer
              local.get $26
              i32.store $0 offset=20
              local.get $26
              local.get $offset
              i32.const 4
              global.set $~argumentsLength
              global.get $assembly/debug/jumpInstruction
              i32.load $0
              call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
              local.set $26
              global.get $~lib/memory/__stack_pointer
              i32.const 76
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $26
              return
             end
             local.get $info
             local.set $26
             global.get $~lib/memory/__stack_pointer
             local.get $26
             i32.store $0 offset=20
             local.get $26
             i32.const 6720
             local.set $26
             global.get $~lib/memory/__stack_pointer
             local.get $26
             i32.store $0 offset=24
             local.get $26
             call $~lib/string/String#concat
             local.set $26
             global.get $~lib/memory/__stack_pointer
             local.get $26
             i32.store $0 offset=4
             local.get $26
             i32.const 1
             local.get $chunk
             local.set $26
             global.get $~lib/memory/__stack_pointer
             local.get $26
             i32.store $0 offset=20
             local.get $26
             local.get $offset
             i32.const 4
             global.set $~argumentsLength
             global.get $assembly/debug/jumpInstruction
             i32.load $0
             call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
             local.set $26
             global.get $~lib/memory/__stack_pointer
             i32.const 76
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $26
             return
            end
            local.get $info
            local.set $26
            global.get $~lib/memory/__stack_pointer
            local.get $26
            i32.store $0 offset=20
            local.get $26
            i32.const 6784
            local.set $26
            global.get $~lib/memory/__stack_pointer
            local.get $26
            i32.store $0 offset=24
            local.get $26
            call $~lib/string/String#concat
            local.set $26
            global.get $~lib/memory/__stack_pointer
            local.get $26
            i32.store $0 offset=4
            local.get $26
            i32.const -1
            local.get $chunk
            local.set $26
            global.get $~lib/memory/__stack_pointer
            local.get $26
            i32.store $0 offset=20
            local.get $26
            local.get $offset
            i32.const 4
            global.set $~argumentsLength
            global.get $assembly/debug/jumpInstruction
            i32.load $0
            call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
            local.set $26
            global.get $~lib/memory/__stack_pointer
            i32.const 76
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $26
            return
           end
           local.get $info
           local.set $26
           global.get $~lib/memory/__stack_pointer
           local.get $26
           i32.store $0 offset=20
           local.get $26
           i32.const 6832
           local.set $26
           global.get $~lib/memory/__stack_pointer
           local.get $26
           i32.store $0 offset=24
           local.get $26
           call $~lib/string/String#concat
           local.set $26
           global.get $~lib/memory/__stack_pointer
           local.get $26
           i32.store $0 offset=4
           local.get $26
           local.get $chunk
           local.set $26
           global.get $~lib/memory/__stack_pointer
           local.get $26
           i32.store $0 offset=8
           local.get $26
           local.get $offset
           i32.const 3
           global.set $~argumentsLength
           global.get $assembly/debug/byteInstruction
           i32.load $0
           call_indirect $0 (type $i32_i32_i32_=>_i32)
           local.set $26
           global.get $~lib/memory/__stack_pointer
           i32.const 76
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $26
           return
          end
          local.get $info
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=20
          local.get $26
          i32.const 6880
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=24
          local.get $26
          call $~lib/string/String#concat
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=4
          local.get $26
          local.get $chunk
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=8
          local.get $26
          local.get $offset
          call $assembly/debug/invokeInstruction
          local.set $26
          global.get $~lib/memory/__stack_pointer
          i32.const 76
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $26
          return
         end
         local.get $info
         local.set $26
         global.get $~lib/memory/__stack_pointer
         local.get $26
         i32.store $0 offset=20
         local.get $26
         i32.const 7024
         local.set $26
         global.get $~lib/memory/__stack_pointer
         local.get $26
         i32.store $0 offset=24
         local.get $26
         call $~lib/string/String#concat
         local.set $26
         global.get $~lib/memory/__stack_pointer
         local.get $26
         i32.store $0 offset=4
         local.get $26
         local.get $chunk
         local.set $26
         global.get $~lib/memory/__stack_pointer
         local.get $26
         i32.store $0 offset=8
         local.get $26
         local.get $offset
         call $assembly/debug/invokeInstruction
         local.set $26
         global.get $~lib/memory/__stack_pointer
         i32.const 76
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $26
         return
        end
        local.get $offset
        i32.const 1
        i32.add
        local.set $offset
        local.get $chunk
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=8
        local.get $26
        call $assembly/chunk/Chunk#get:code
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        local.get $offset
        local.tee $7
        i32.const 1
        i32.add
        local.set $offset
        local.get $7
        call $~lib/staticarray/StaticArray<u8>#__get
        local.set $constant
        global.get $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $info
        local.tee $9
        i32.store $0 offset=28
        global.get $~lib/memory/__stack_pointer
        local.get $constant
        i32.const 10
        call $~lib/number/U8#toString
        local.tee $10
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $chunk
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=24
        local.get $26
        call $assembly/chunk/Chunk#get:constants
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=20
        local.get $26
        call $assembly/value/ValueArray#get:values
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=8
        local.get $26
        local.get $constant
        call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        i32.const 1
        global.set $~argumentsLength
        global.get $assembly/value/printValueToString
        i32.load $0
        call_indirect $0 (type $i32_=>_i32)
        local.tee $11
        i32.store $0 offset=36
        i32.const 7136
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        i32.const 0
        local.get $9
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=20
        local.get $26
        call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
        i32.const 7136
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        i32.const 2
        local.get $10
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=20
        local.get $26
        call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
        i32.const 7136
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        i32.const 4
        local.get $11
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=20
        local.get $26
        call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
        i32.const 7136
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        i32.const 32
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=8
        local.get $26
        call $~lib/staticarray/StaticArray<~lib/string/String>#join
        local.tee $myStr
        i32.store $0 offset=40
        local.get $myStr
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        call $assembly/index/debugLog
        global.get $~lib/memory/__stack_pointer
        local.get $chunk
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=24
        local.get $26
        call $assembly/chunk/Chunk#get:constants
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=20
        local.get $26
        call $assembly/value/ValueArray#get:values
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=8
        local.get $26
        local.get $constant
        call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
        local.set $26
        global.get $~lib/memory/__stack_pointer
        local.get $26
        i32.store $0 offset=4
        local.get $26
        call $assembly/object/AS_FUNCTION
        local.tee $myfunction
        i32.store $0 offset=44
        i32.const 0
        local.set $j
        loop $for-loop|1
         local.get $j
         local.get $myfunction
         local.set $26
         global.get $~lib/memory/__stack_pointer
         local.get $26
         i32.store $0 offset=4
         local.get $26
         call $assembly/object/ObjFunction#get:upvalueCount
         i32.const 255
         i32.and
         i32.lt_u
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 32
          local.tee $upStr
          i32.store $0 offset=48
          local.get $chunk
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=8
          local.get $26
          call $assembly/chunk/Chunk#get:code
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=4
          local.get $26
          local.get $offset
          local.tee $16
          i32.const 1
          i32.add
          local.set $offset
          local.get $16
          call $~lib/staticarray/StaticArray<u8>#__get
          local.set $isLocalConst
          local.get $isLocalConst
          local.set $isLocal
          local.get $chunk
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=8
          local.get $26
          call $assembly/chunk/Chunk#get:code
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=4
          local.get $26
          local.get $offset
          local.tee $19
          i32.const 1
          i32.add
          local.set $offset
          local.get $19
          call $~lib/staticarray/StaticArray<u8>#__get
          local.set $index
          global.get $~lib/memory/__stack_pointer
          local.get $upStr
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=4
          local.get $26
          global.get $~lib/memory/__stack_pointer
          local.get $offset
          i32.const 2
          i32.sub
          i32.const 10
          call $~lib/number/U32#toString
          local.tee $21
          i32.store $0 offset=52
          global.get $~lib/memory/__stack_pointer
          local.get $isLocal
          if (result i32)
           i32.const 7280
          else
           i32.const 7312
          end
          local.tee $22
          i32.store $0 offset=56
          global.get $~lib/memory/__stack_pointer
          local.get $index
          i32.const 10
          call $~lib/number/I32#toString
          local.tee $23
          i32.store $0 offset=60
          i32.const 7232
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=20
          local.get $26
          i32.const 0
          local.get $21
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=64
          local.get $26
          call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
          i32.const 7232
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=20
          local.get $26
          i32.const 2
          local.get $22
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=64
          local.get $26
          call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
          i32.const 7232
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=20
          local.get $26
          i32.const 4
          local.get $23
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=64
          local.get $26
          call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
          i32.const 7232
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=20
          local.get $26
          i32.const 32
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=24
          local.get $26
          call $~lib/staticarray/StaticArray<~lib/string/String>#join
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=8
          local.get $26
          call $~lib/string/String.__concat
          local.tee $upStr
          i32.store $0 offset=48
          local.get $upStr
          local.set $26
          global.get $~lib/memory/__stack_pointer
          local.get $26
          i32.store $0 offset=4
          local.get $26
          call $assembly/index/debugLog
          local.get $j
          i32.const 1
          i32.add
          local.set $j
          br $for-loop|1
         end
        end
        local.get $offset
        local.set $26
        global.get $~lib/memory/__stack_pointer
        i32.const 76
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $26
        return
       end
       local.get $info
       local.set $26
       global.get $~lib/memory/__stack_pointer
       local.get $26
       i32.store $0 offset=8
       local.get $26
       i32.const 7360
       local.set $26
       global.get $~lib/memory/__stack_pointer
       local.get $26
       i32.store $0 offset=20
       local.get $26
       call $~lib/string/String#concat
       local.set $26
       global.get $~lib/memory/__stack_pointer
       local.get $26
       i32.store $0 offset=4
       local.get $26
       local.get $offset
       i32.const 2
       global.set $~argumentsLength
       global.get $assembly/debug/simpleInstruction
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       local.set $26
       global.get $~lib/memory/__stack_pointer
       i32.const 76
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $26
       return
      end
      local.get $info
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0 offset=8
      local.get $26
      i32.const 7424
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0 offset=20
      local.get $26
      call $~lib/string/String#concat
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0 offset=4
      local.get $26
      local.get $offset
      i32.const 2
      global.set $~argumentsLength
      global.get $assembly/debug/simpleInstruction
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      local.set $26
      global.get $~lib/memory/__stack_pointer
      i32.const 76
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $26
      return
     end
     local.get $info
     local.set $26
     global.get $~lib/memory/__stack_pointer
     local.get $26
     i32.store $0 offset=20
     local.get $26
     i32.const 7472
     local.set $26
     global.get $~lib/memory/__stack_pointer
     local.get $26
     i32.store $0 offset=24
     local.get $26
     call $~lib/string/String#concat
     local.set $26
     global.get $~lib/memory/__stack_pointer
     local.get $26
     i32.store $0 offset=4
     local.get $26
     local.get $chunk
     local.set $26
     global.get $~lib/memory/__stack_pointer
     local.get $26
     i32.store $0 offset=8
     local.get $26
     local.get $offset
     i32.const 3
     global.set $~argumentsLength
     global.get $assembly/debug/constantInstruction
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.set $26
     global.get $~lib/memory/__stack_pointer
     i32.const 76
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $26
     return
    end
    local.get $info
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=8
    local.get $26
    i32.const 7520
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    call $~lib/string/String#concat
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $offset
    i32.const 2
    global.set $~argumentsLength
    global.get $assembly/debug/simpleInstruction
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    local.set $26
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $26
    return
   end
   local.get $info
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   i32.const 7568
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=24
   local.get $26
   call $~lib/string/String#concat
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   local.get $chunk
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=8
   local.get $26
   local.get $offset
   i32.const 3
   global.set $~argumentsLength
   global.get $assembly/debug/constantInstruction
   i32.load $0
   call_indirect $0 (type $i32_i32_i32_=>_i32)
   local.set $26
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $26
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $offset
  i32.const 10
  call $~lib/number/U32#toString
  local.tee $24
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $instruction
  i32.const 10
  call $~lib/number/U8#toString
  local.tee $25
  i32.store $0 offset=72
  i32.const 7680
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=8
  local.get $26
  i32.const 0
  local.get $24
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=24
  local.get $26
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7680
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=8
  local.get $26
  i32.const 2
  local.get $25
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=24
  local.get $26
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7680
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=8
  local.get $26
  i32.const 32
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  call $assembly/index/debugLog
  local.get $offset
  i32.const 1
  i32.add
  local.set $26
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $26
  return
 )
 (func $start:assembly/debug~anonymous|5 (param $chunk i32) (param $name i32)
  (local $2 i32)
  (local $offset i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 32
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  local.get $name
  local.tee $2
  i32.store $0 offset=4
  i32.const 7808
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 1
  local.get $2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7808
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 32
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/index/debugLog
  i32.const 7840
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/index/debugLog
  i32.const 0
  local.set $offset
  loop $for-loop|0
   local.get $offset
   local.get $chunk
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/chunk/Chunk#get:count
   i32.lt_s
   if
    local.get $chunk
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $offset
    i32.const 2
    global.set $~argumentsLength
    global.get $assembly/debug/disassembleInstruction
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    local.set $offset
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/scanner/Scanner#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 36
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Scanner#set:start
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Scanner#set:current
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Scanner#set:line
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/scanner/Token#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/scanner/TokenType.TOKEN_ERROR
  call $assembly/scanner/Token#set:type
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 32
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/scanner/Token#set:lexeme
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Token#set:line
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/Parser#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Parser#set:current
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Parser#set:previous
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Parser#set:hadError
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Parser#set:panicMode
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/compiler/Local>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Local>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Local>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Local>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Local>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 4752
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/compiler/Local>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/compiler/Local>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/compiler/Local>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/compiler/Local>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/compiler/Local#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 40
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Local#set:name
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const -1
  call $assembly/compiler/Local#set:depth
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Local#set:isCaptured
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/compiler/Local>#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/compiler/Local>#get:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/compiler/Local>#get:length_
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<usize>
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/compiler/Local>#fill@varargs (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $start
  local.get $end
  call $~lib/array/Array<assembly/compiler/Local>#fill
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 4752
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/compiler/Upvalue>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/compiler/Upvalue#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Upvalue#set:index
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Upvalue#set:isLocal
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:length_
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<usize>
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#fill@varargs (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $start
  local.get $end
  call $~lib/array/Array<assembly/compiler/Upvalue>#fill
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/compiler/Compiler#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 39
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Compiler#set:enclosing
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/object/ObjFunction#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Compiler#set:function
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/compiler/FunctionType.TYPE_SCRIPT
  call $assembly/compiler/Compiler#set:type
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  global.get $assembly/compiler/U8_COUNT
  call $~lib/array/Array<assembly/compiler/Local>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  call $assembly/compiler/Local#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Local>#fill@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Compiler#set:locals
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Compiler#set:localCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  global.get $assembly/compiler/U8_COUNT
  call $~lib/array/Array<assembly/compiler/Upvalue>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  call $assembly/compiler/Upvalue#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<assembly/compiler/Upvalue>#fill@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Compiler#set:upvalues
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/Compiler#set:scopeDepth
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/ParseRule#constructor (param $this i32) (param $prefix i32) (param $infix i32) (param $precedence i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 45
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/compiler/ParseRule#set:prefix
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/compiler/ParseRule#set:infix
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/compiler/ParseRule#set:precedence
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $prefix
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/ParseRule#set:prefix
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $infix
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/ParseRule#set:infix
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $precedence
  call $assembly/compiler/ParseRule#set:precedence
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/string/String#charCodeAt (param $this i32) (param $pos i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $pos
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const -1
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/scanner/peek (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/scanner/codestring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/scanner/Scanner#get:current
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/advance (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/scanner/Scanner#get:current
  i32.const 1
  i32.add
  call $assembly/scanner/Scanner#set:current
  global.get $assembly/scanner/codestring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/scanner/Scanner#get:current
  i32.const 1
  i32.sub
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/isAtEnd (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/scanner/Scanner#get:current
  global.get $assembly/scanner/codestring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  i32.eq
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/peekNext (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/scanner/isAtEnd
  if
   i32.const 10592
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $assembly/scanner/codestring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/scanner/scanner
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/scanner/Scanner#get:current
  i32.const 1
  i32.add
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/skipWhitespace
  (local $c i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   i32.const 1
   if
    call $assembly/scanner/peek
    local.set $c
    block $break|1
     block $case5|1
      block $case4|1
       block $case3|1
        block $case2|1
         block $case1|1
          block $case0|1
           local.get $c
           local.set $1
           local.get $1
           i32.const 4832
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           br_if $case0|1
           local.get $1
           i32.const 10464
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           br_if $case1|1
           local.get $1
           i32.const 10496
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           br_if $case2|1
           local.get $1
           i32.const 10528
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           br_if $case3|1
           local.get $1
           i32.const 10560
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0
           local.get $2
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           br_if $case4|1
           br $case5|1
          end
         end
        end
        call $assembly/scanner/advance
        drop
        br $break|1
       end
       global.get $assembly/scanner/scanner
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       global.get $assembly/scanner/scanner
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=4
       local.get $2
       call $assembly/scanner/Scanner#get:line
       i32.const 1
       i32.add
       call $assembly/scanner/Scanner#set:line
       call $assembly/scanner/advance
       drop
       br $break|1
      end
      call $assembly/scanner/peekNext
      i32.const 10560
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      if
       loop $while-continue|2
        call $assembly/scanner/peek
        i32.const 10528
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $2
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.ne
        if (result i32)
         call $assembly/scanner/isAtEnd
         i32.eqz
        else
         i32.const 0
        end
        if
         call $assembly/scanner/advance
         drop
         br $while-continue|2
        end
       end
      else
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       return
      end
      br $break|1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    br $while-continue|0
   end
  end
  unreachable
 )
 (func $~lib/string/String#substring (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $finalStart i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $finalEnd i32)
  (local $14 i32)
  (local $15 i32)
  (local $fromPos i32)
  (local $17 i32)
  (local $18 i32)
  (local $toPos i32)
  (local $size i32)
  (local $out i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store $0
  local.get $22
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $finalStart
  local.get $end
  local.tee $9
  i32.const 0
  local.tee $10
  local.get $9
  local.get $10
  i32.gt_s
  select
  local.tee $11
  local.get $len
  local.tee $12
  local.get $11
  local.get $12
  i32.lt_s
  select
  local.set $finalEnd
  local.get $finalStart
  local.tee $14
  local.get $finalEnd
  local.tee $15
  local.get $14
  local.get $15
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $fromPos
  local.get $finalStart
  local.tee $17
  local.get $finalEnd
  local.tee $18
  local.get $17
  local.get $18
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $toPos
  local.get $toPos
  local.get $fromPos
  i32.sub
  local.set $size
  local.get $size
  i32.eqz
  if
   i32.const 32
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $fromPos
  i32.eqz
  if (result i32)
   local.get $toPos
   local.get $len
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $fromPos
  i32.add
  local.get $size
  memory.copy $0 $0
  local.get $out
  local.set $22
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $22
  return
 )
 (func $assembly/scanner/makeToken (param $type i32) (result i32)
  (local $token i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.tee $token
  i32.store $0
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $type
  call $assembly/scanner/Token#set:type
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/codestring
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/scanner/Scanner#get:start
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/scanner/Scanner#get:current
  call $~lib/string/String#substring
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#set:lexeme
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Scanner#get:line
  call $assembly/scanner/Token#set:line
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/scanner/isAlpha (param $c i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $c
  i32.const 10624
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ge_s
  if (result i32)
   local.get $c
   i32.const 10656
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.le_s
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   i32.const 10688
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.ge_s
   if (result i32)
    local.get $c
    i32.const 10720
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.le_s
   else
    i32.const 0
   end
  end
  if (result i32)
   i32.const 1
  else
   local.get $c
   i32.const 10752
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/scanner/isDigit (param $c i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $c
  i32.const 1312
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ge_s
  if (result i32)
   local.get $c
   i32.const 10784
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.le_s
  else
   i32.const 0
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#charAt (param $this i32) (param $pos i32) (result i32)
  (local $out i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $pos
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  local.get $out
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/scanner/checkKeyword (param $start i32) (param $length i32) (param $rest i32) (param $type i32) (result i32)
  (local $startIndex i32)
  (local $endIndex i32)
  (local $wordEnd i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/scanner/scanner
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/scanner/Scanner#get:start
  local.get $start
  i32.add
  local.set $startIndex
  global.get $assembly/scanner/scanner
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/scanner/Scanner#get:current
  local.set $endIndex
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/codestring
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $startIndex
  local.get $endIndex
  call $~lib/string/String#substring
  local.tee $wordEnd
  i32.store $0 offset=4
  global.get $assembly/scanner/scanner
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/scanner/Scanner#get:current
  global.get $assembly/scanner/scanner
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/scanner/Scanner#get:start
  i32.sub
  local.get $start
  local.get $length
  i32.add
  i32.eq
  if (result i32)
   local.get $rest
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $wordEnd
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/string/String.__eq
  else
   i32.const 0
  end
  if
   local.get $type
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  else
   global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  unreachable
 )
 (func $assembly/scanner/identifierType (result i32)
  (local $c i32)
  (local $cCode i32)
  (local $2 i32)
  (local $s i32)
  (local $sCode i32)
  (local $5 i32)
  (local $t i32)
  (local $tCode i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/scanner/codestring
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  global.get $assembly/scanner/scanner
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/scanner/Scanner#get:start
  call $~lib/string/String#charAt
  local.tee $c
  i32.store $0 offset=8
  local.get $c
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.set $cCode
  block $break|0
   block $case12|0
    block $case11|0
     block $case10|0
      block $case9|0
       block $case8|0
        block $case7|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               block $case0|0
                local.get $cCode
                local.set $2
                local.get $2
                i32.const 10624
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case0|0
                local.get $2
                i32.const 10816
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case1|0
                local.get $2
                i32.const 10848
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case2|0
                local.get $2
                i32.const 10880
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case3|0
                local.get $2
                i32.const 10912
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case4|0
                local.get $2
                i32.const 10944
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case5|0
                local.get $2
                i32.const 10976
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case6|0
                local.get $2
                i32.const 11008
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case7|0
                local.get $2
                i32.const 11040
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case8|0
                local.get $2
                i32.const 11072
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case9|0
                local.get $2
                i32.const 11104
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case10|0
                local.get $2
                i32.const 11136
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case11|0
                local.get $2
                i32.const 11168
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0
                local.get $9
                i32.const 0
                call $~lib/string/String#charCodeAt
                i32.eq
                br_if $case12|0
                br $break|0
               end
               i32.const 1
               i32.const 2
               i32.const 11200
               local.set $9
               global.get $~lib/memory/__stack_pointer
               local.get $9
               i32.store $0 offset=12
               local.get $9
               global.get $assembly/scanner/TokenType.TOKEN_AND
               call $assembly/scanner/checkKeyword
               local.set $9
               global.get $~lib/memory/__stack_pointer
               i32.const 24
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $9
               return
              end
              i32.const 1
              i32.const 4
              i32.const 11232
              local.set $9
              global.get $~lib/memory/__stack_pointer
              local.get $9
              i32.store $0 offset=12
              local.get $9
              global.get $assembly/scanner/TokenType.TOKEN_CLASS
              call $assembly/scanner/checkKeyword
              local.set $9
              global.get $~lib/memory/__stack_pointer
              i32.const 24
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $9
              return
             end
             i32.const 1
             i32.const 3
             i32.const 11264
             local.set $9
             global.get $~lib/memory/__stack_pointer
             local.get $9
             i32.store $0 offset=12
             local.get $9
             global.get $assembly/scanner/TokenType.TOKEN_ELSE
             call $assembly/scanner/checkKeyword
             local.set $9
             global.get $~lib/memory/__stack_pointer
             i32.const 24
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $9
             return
            end
            global.get $assembly/scanner/scanner
            local.set $9
            global.get $~lib/memory/__stack_pointer
            local.get $9
            i32.store $0
            local.get $9
            call $assembly/scanner/Scanner#get:current
            global.get $assembly/scanner/scanner
            local.set $9
            global.get $~lib/memory/__stack_pointer
            local.get $9
            i32.store $0
            local.get $9
            call $assembly/scanner/Scanner#get:start
            i32.sub
            i32.const 1
            i32.gt_u
            if
             global.get $~lib/memory/__stack_pointer
             global.get $assembly/scanner/codestring
             local.set $9
             global.get $~lib/memory/__stack_pointer
             local.get $9
             i32.store $0
             local.get $9
             global.get $assembly/scanner/scanner
             local.set $9
             global.get $~lib/memory/__stack_pointer
             local.get $9
             i32.store $0 offset=4
             local.get $9
             call $assembly/scanner/Scanner#get:start
             i32.const 1
             i32.add
             call $~lib/string/String#charAt
             local.tee $s
             i32.store $0 offset=16
             local.get $s
             local.set $9
             global.get $~lib/memory/__stack_pointer
             local.get $9
             i32.store $0
             local.get $9
             i32.const 0
             call $~lib/string/String#charCodeAt
             local.set $sCode
             block $break|1
              block $case2|1
               block $case1|1
                block $case0|1
                 local.get $sCode
                 local.set $5
                 local.get $5
                 i32.const 10624
                 local.set $9
                 global.get $~lib/memory/__stack_pointer
                 local.get $9
                 i32.store $0
                 local.get $9
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 i32.eq
                 br_if $case0|1
                 local.get $5
                 i32.const 10976
                 local.set $9
                 global.get $~lib/memory/__stack_pointer
                 local.get $9
                 i32.store $0
                 local.get $9
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 i32.eq
                 br_if $case1|1
                 local.get $5
                 i32.const 11296
                 local.set $9
                 global.get $~lib/memory/__stack_pointer
                 local.get $9
                 i32.store $0
                 local.get $9
                 i32.const 0
                 call $~lib/string/String#charCodeAt
                 i32.eq
                 br_if $case2|1
                 br $break|1
                end
                i32.const 2
                i32.const 3
                i32.const 11264
                local.set $9
                global.get $~lib/memory/__stack_pointer
                local.get $9
                i32.store $0 offset=12
                local.get $9
                global.get $assembly/scanner/TokenType.TOKEN_FALSE
                call $assembly/scanner/checkKeyword
                local.set $9
                global.get $~lib/memory/__stack_pointer
                i32.const 24
                i32.add
                global.set $~lib/memory/__stack_pointer
                local.get $9
                return
               end
               i32.const 2
               i32.const 1
               i32.const 11040
               local.set $9
               global.get $~lib/memory/__stack_pointer
               local.get $9
               i32.store $0 offset=12
               local.get $9
               global.get $assembly/scanner/TokenType.TOKEN_FOR
               call $assembly/scanner/checkKeyword
               local.set $9
               global.get $~lib/memory/__stack_pointer
               i32.const 24
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $9
               return
              end
              i32.const 2
              i32.const 1
              i32.const 10944
              local.set $9
              global.get $~lib/memory/__stack_pointer
              local.get $9
              i32.store $0 offset=12
              local.get $9
              global.get $assembly/scanner/TokenType.TOKEN_FUN
              call $assembly/scanner/checkKeyword
              local.set $9
              global.get $~lib/memory/__stack_pointer
              i32.const 24
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $9
              return
             end
            end
            br $break|0
           end
           i32.const 1
           i32.const 1
           i32.const 10880
           local.set $9
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.store $0 offset=12
           local.get $9
           global.get $assembly/scanner/TokenType.TOKEN_IF
           call $assembly/scanner/checkKeyword
           local.set $9
           global.get $~lib/memory/__stack_pointer
           i32.const 24
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $9
           return
          end
          i32.const 1
          i32.const 2
          i32.const 11328
          local.set $9
          global.get $~lib/memory/__stack_pointer
          local.get $9
          i32.store $0 offset=12
          local.get $9
          global.get $assembly/scanner/TokenType.TOKEN_NIL
          call $assembly/scanner/checkKeyword
          local.set $9
          global.get $~lib/memory/__stack_pointer
          i32.const 24
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $9
          return
         end
         i32.const 1
         i32.const 1
         i32.const 11040
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=12
         local.get $9
         global.get $assembly/scanner/TokenType.TOKEN_OR
         call $assembly/scanner/checkKeyword
         local.set $9
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $9
         return
        end
        i32.const 1
        i32.const 4
        i32.const 11360
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        global.get $assembly/scanner/TokenType.TOKEN_PRINT
        call $assembly/scanner/checkKeyword
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       end
       i32.const 1
       i32.const 5
       i32.const 11392
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=12
       local.get $9
       global.get $assembly/scanner/TokenType.TOKEN_RETURN
       call $assembly/scanner/checkKeyword
       local.set $9
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $9
       return
      end
      i32.const 1
      i32.const 4
      i32.const 11424
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $9
      global.get $assembly/scanner/TokenType.TOKEN_SUPER
      call $assembly/scanner/checkKeyword
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     end
     global.get $assembly/scanner/scanner
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $assembly/scanner/Scanner#get:current
     global.get $assembly/scanner/scanner
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $assembly/scanner/Scanner#get:start
     i32.sub
     i32.const 1
     i32.gt_u
     if
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/scanner/codestring
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      global.get $assembly/scanner/scanner
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      call $assembly/scanner/Scanner#get:start
      i32.const 1
      i32.add
      call $~lib/string/String#charAt
      local.tee $t
      i32.store $0 offset=20
      local.get $t
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.set $tCode
      block $break|2
       block $case1|2
        block $case0|2
         local.get $tCode
         local.set $8
         local.get $8
         i32.const 11456
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         br_if $case0|2
         local.get $8
         i32.const 11040
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         br_if $case1|2
         br $break|2
        end
        i32.const 2
        i32.const 2
        i32.const 11488
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        global.get $assembly/scanner/TokenType.TOKEN_THIS
        call $assembly/scanner/checkKeyword
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       end
       i32.const 2
       i32.const 2
       i32.const 11520
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=12
       local.get $9
       global.get $assembly/scanner/TokenType.TOKEN_TRUE
       call $assembly/scanner/checkKeyword
       local.set $9
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $9
       return
      end
     end
     br $break|0
    end
    i32.const 1
    i32.const 2
    i32.const 11552
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    global.get $assembly/scanner/TokenType.TOKEN_VAR
    call $assembly/scanner/checkKeyword
    local.set $9
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   end
   i32.const 1
   i32.const 4
   i32.const 11584
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   global.get $assembly/scanner/TokenType.TOKEN_WHILE
   call $assembly/scanner/checkKeyword
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/scanner/number (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  loop $while-continue|0
   call $assembly/scanner/peek
   call $assembly/scanner/isDigit
   if
    call $assembly/scanner/advance
    drop
    br $while-continue|0
   end
  end
  call $assembly/scanner/peek
  i32.const 11616
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if (result i32)
   call $assembly/scanner/peekNext
   call $assembly/scanner/isDigit
  else
   i32.const 0
  end
  if
   call $assembly/scanner/advance
   drop
   loop $while-continue|1
    call $assembly/scanner/peek
    call $assembly/scanner/isDigit
    if
     call $assembly/scanner/advance
     drop
     br $while-continue|1
    end
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_NUMBER
  call $assembly/scanner/makeToken
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/match (param $expected i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/scanner/isAtEnd
  if
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $assembly/scanner/codestring
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/scanner/Scanner#get:current
  call $~lib/string/String#charCodeAt
  local.get $expected
  i32.ne
  if
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/scanner/Scanner#get:current
  i32.const 1
  i32.add
  call $assembly/scanner/Scanner#set:current
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/scanner/errorToken (param $message i32) (result i32)
  (local $token i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.tee $token
  i32.store $0
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_ERROR
  call $assembly/scanner/Token#set:type
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#set:lexeme
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Scanner#get:line
  call $assembly/scanner/Token#set:line
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/scanner/mString (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   call $assembly/scanner/peek
   i32.const 12032
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.ne
   if (result i32)
    call $assembly/scanner/isAtEnd
    i32.eqz
   else
    i32.const 0
   end
   if
    call $assembly/scanner/peek
    i32.const 10528
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     global.get $assembly/scanner/scanner
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     global.get $assembly/scanner/scanner
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $assembly/scanner/Scanner#get:line
     i32.const 1
     i32.add
     call $assembly/scanner/Scanner#set:line
    end
    call $assembly/scanner/advance
    drop
    br $while-continue|0
   end
  end
  call $assembly/scanner/isAtEnd
  if
   i32.const 12064
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/scanner/errorToken
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  call $assembly/scanner/advance
  drop
  global.get $assembly/scanner/TokenType.TOKEN_STRING
  call $assembly/scanner/makeToken
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/scanner/scanToken (result i32)
  (local $c i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/scanner/skipWhitespace
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/scanner
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/scanner/Scanner#get:current
  call $assembly/scanner/Scanner#set:start
  call $assembly/scanner/isAtEnd
  if
   global.get $assembly/scanner/TokenType.TOKEN_EOF
   call $assembly/scanner/makeToken
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  call $assembly/scanner/advance
  local.set $c
  local.get $c
  call $assembly/scanner/isAlpha
  if
   call $assembly/scanner/identifier
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $c
  call $assembly/scanner/isDigit
  if
   call $assembly/scanner/number
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  block $break|0
   block $case15|0
    block $case14|0
     block $case13|0
      block $case12|0
       block $case11|0
        block $case10|0
         block $case9|0
          block $case8|0
           block $case7|0
            block $case6|0
             block $case5|0
              block $case4|0
               block $case3|0
                block $case2|0
                 block $case1|0
                  block $case0|0
                   local.get $c
                   local.set $1
                   local.get $1
                   i32.const 11648
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case0|0
                   local.get $1
                   i32.const 11680
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case1|0
                   local.get $1
                   i32.const 11712
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case2|0
                   local.get $1
                   i32.const 11744
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case3|0
                   local.get $1
                   i32.const 11776
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case4|0
                   local.get $1
                   i32.const 11808
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case5|0
                   local.get $1
                   i32.const 11616
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case6|0
                   local.get $1
                   i32.const 11840
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case7|0
                   local.get $1
                   i32.const 11872
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case8|0
                   local.get $1
                   i32.const 10560
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case9|0
                   local.get $1
                   i32.const 11904
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case10|0
                   local.get $1
                   i32.const 11936
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case11|0
                   local.get $1
                   i32.const 11968
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case12|0
                   local.get $1
                   i32.const 12000
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case13|0
                   local.get $1
                   i32.const 4560
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case14|0
                   local.get $1
                   i32.const 12032
                   local.set $2
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store $0
                   local.get $2
                   i32.const 0
                   call $~lib/string/String#charCodeAt
                   i32.eq
                   br_if $case15|0
                   br $break|0
                  end
                  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
                  call $assembly/scanner/makeToken
                  local.set $2
                  global.get $~lib/memory/__stack_pointer
                  i32.const 8
                  i32.add
                  global.set $~lib/memory/__stack_pointer
                  local.get $2
                  return
                 end
                 global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
                 call $assembly/scanner/makeToken
                 local.set $2
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 local.get $2
                 return
                end
                global.get $assembly/scanner/TokenType.TOKEN_LEFT_BRACE
                call $assembly/scanner/makeToken
                local.set $2
                global.get $~lib/memory/__stack_pointer
                i32.const 8
                i32.add
                global.set $~lib/memory/__stack_pointer
                local.get $2
                return
               end
               global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
               call $assembly/scanner/makeToken
               local.set $2
               global.get $~lib/memory/__stack_pointer
               i32.const 8
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $2
               return
              end
              global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
              call $assembly/scanner/makeToken
              local.set $2
              global.get $~lib/memory/__stack_pointer
              i32.const 8
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $2
              return
             end
             global.get $assembly/scanner/TokenType.TOKEN_COMMA
             call $assembly/scanner/makeToken
             local.set $2
             global.get $~lib/memory/__stack_pointer
             i32.const 8
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $2
             return
            end
            global.get $assembly/scanner/TokenType.TOKEN_DOT
            call $assembly/scanner/makeToken
            local.set $2
            global.get $~lib/memory/__stack_pointer
            i32.const 8
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $2
            return
           end
           global.get $assembly/scanner/TokenType.TOKEN_MINUS
           call $assembly/scanner/makeToken
           local.set $2
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $2
           return
          end
          global.get $assembly/scanner/TokenType.TOKEN_PLUS
          call $assembly/scanner/makeToken
          local.set $2
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $2
          return
         end
         global.get $assembly/scanner/TokenType.TOKEN_SLASH
         call $assembly/scanner/makeToken
         local.set $2
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $2
         return
        end
        global.get $assembly/scanner/TokenType.TOKEN_STAR
        call $assembly/scanner/makeToken
        local.set $2
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $2
        return
       end
       i32.const 11968
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       i32.const 0
       call $~lib/string/String#charCodeAt
       call $assembly/scanner/match
       if (result i32)
        global.get $assembly/scanner/TokenType.TOKEN_BANG_EQUAL
       else
        global.get $assembly/scanner/TokenType.TOKEN_BANG
       end
       call $assembly/scanner/makeToken
       local.set $2
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       return
      end
      i32.const 11968
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      i32.const 0
      call $~lib/string/String#charCodeAt
      call $assembly/scanner/match
      if (result i32)
       global.get $assembly/scanner/TokenType.TOKEN_EQUAL_EQUAL
      else
       global.get $assembly/scanner/TokenType.TOKEN_EQUAL
      end
      call $assembly/scanner/makeToken
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      return
     end
     i32.const 11968
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     i32.const 0
     call $~lib/string/String#charCodeAt
     call $assembly/scanner/match
     if (result i32)
      global.get $assembly/scanner/TokenType.TOKEN_LESS_EQUAL
     else
      global.get $assembly/scanner/TokenType.TOKEN_LESS
     end
     call $assembly/scanner/makeToken
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    i32.const 11968
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.const 0
    call $~lib/string/String#charCodeAt
    call $assembly/scanner/match
    if (result i32)
     global.get $assembly/scanner/TokenType.TOKEN_GREATER_EQUAL
    else
     global.get $assembly/scanner/TokenType.TOKEN_GREATER
    end
    call $assembly/scanner/makeToken
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   call $assembly/scanner/mString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 12128
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/scanner/errorToken
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/index/printout (param $myStr i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $assembly/index/outputstring
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  local.get $myStr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 10528
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__concat
  global.set $assembly/index/outputstring
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/errorAt (param $token i32) (param $message i32)
  (local $errorStr i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $assembly/compiler/parser
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/compiler/Parser#get:panicMode
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $assembly/compiler/parser
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  i32.const 1
  call $assembly/compiler/Parser#set:panicMode
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  local.tee $errorStr
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $errorStr
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  global.get $~lib/memory/__stack_pointer
  local.get $token
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $assembly/scanner/Token#get:line
  i32.const 10
  call $~lib/number/U16#toString
  local.tee $3
  i32.store $0 offset=16
  i32.const 12272
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 1
  local.get $3
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 12272
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 32
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $~lib/string/String.__concat
  local.tee $errorStr
  i32.store $0 offset=4
  local.get $token
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/scanner/Token#get:type
  global.get $assembly/scanner/TokenType.TOKEN_EOF
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $errorStr
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   i32.const 12304
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $8
   call $~lib/string/String.__concat
   local.tee $errorStr
   i32.store $0 offset=4
  else
   local.get $token
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $assembly/scanner/Token#get:type
   global.get $assembly/scanner/TokenType.TOKEN_ERROR
   i32.eq
   if
    nop
   else
    global.get $~lib/memory/__stack_pointer
    local.get $errorStr
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    i32.const 12352
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    local.get $token
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=20
    local.get $8
    call $assembly/scanner/Token#get:lexeme
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=24
    local.get $8
    call $~lib/string/String#concat
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/string/String.__concat
    local.tee $errorStr
    i32.store $0 offset=4
   end
  end
  i32.const 12384
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $errorStr
  local.tee $4
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.tee $5
  i32.store $0 offset=32
  i32.const 12464
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 0
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 12464
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 2
  local.get $5
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 12464
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 32
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  local.get $errorStr
  local.tee $6
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.tee $7
  i32.store $0 offset=40
  i32.const 12496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 0
  local.get $6
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 12496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 2
  local.get $7
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=24
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 12496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 32
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/index/debugLog
  global.get $assembly/compiler/parser
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  i32.const 1
  call $assembly/compiler/Parser#set:hadError
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/errorAtCurrent (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Parser#get:current
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/errorAt
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/advance
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/compiler/parser
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/compiler/Parser#get:current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/Parser#set:previous
  block $while-break|0
   loop $while-continue|0
    i32.const 1
    if
     global.get $assembly/compiler/parser
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/scanner/scanToken
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $assembly/compiler/Parser#set:current
     global.get $assembly/compiler/parser
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $assembly/compiler/Parser#get:current
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/scanner/Token#get:type
     global.get $assembly/scanner/TokenType.TOKEN_ERROR
     i32.ne
     if
      br $while-break|0
     end
     global.get $assembly/compiler/parser
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $assembly/compiler/Parser#get:current
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $assembly/scanner/Token#get:lexeme
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/compiler/errorAtCurrent
     br $while-continue|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/compiler/getRule (param $type i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/compiler/rules
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $type
  call $~lib/array/Array<assembly/compiler/ParseRule>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/error (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Parser#get:previous
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/errorAt
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/check (param $type i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/Parser#get:current
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/scanner/Token#get:type
  local.get $type
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/parsePrecedence (param $precedence i32)
  (local $prefixRule i32)
  (local $canAssign i32)
  (local $infixRule i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  call $assembly/compiler/advance
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/Parser#get:previous
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/scanner/Token#get:type
  call $assembly/compiler/getRule
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/ParseRule#get:prefix
  local.tee $prefixRule
  i32.store $0 offset=12
  local.get $prefixRule
  i32.const 0
  i32.eq
  if
   i32.const 12528
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/error
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $precedence
  global.get $assembly/compiler/Precedence.PREC_ASSIGNMENT
  i32.le_s
  local.set $canAssign
  local.get $canAssign
  i32.const 1
  global.set $~argumentsLength
  local.get $prefixRule
  i32.load $0
  call_indirect $0 (type $i32_=>_none)
  loop $while-continue|0
   local.get $precedence
   global.get $assembly/compiler/parser
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/Parser#get:current
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/scanner/Token#get:type
   call $assembly/compiler/getRule
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/ParseRule#get:precedence
   i32.le_s
   if
    call $assembly/compiler/advance
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/parser
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    call $assembly/compiler/Parser#get:previous
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/scanner/Token#get:type
    call $assembly/compiler/getRule
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $assembly/compiler/ParseRule#get:infix
    local.tee $infixRule
    i32.store $0 offset=16
    local.get $infixRule
    i32.const 0
    i32.ne
    if
     local.get $canAssign
     i32.const 1
     global.set $~argumentsLength
     local.get $infixRule
     i32.load $0
     call_indirect $0 (type $i32_=>_none)
    end
    br $while-continue|0
   end
  end
  local.get $canAssign
  if (result i32)
   global.get $assembly/scanner/TokenType.TOKEN_EQUAL
   call $assembly/compiler/match
  else
   i32.const 0
  end
  if
   i32.const 12592
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/error
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/consume (param $type i32) (param $message i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/compiler/Parser#get:current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/scanner/Token#get:type
  local.get $type
  i32.eq
  if
   call $assembly/compiler/advance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/errorAtCurrent
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/grouping (param $canAssign i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  call $assembly/compiler/expression
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 12672
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/argumentList (result i32)
  (local $argCount i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $argCount
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  call $assembly/compiler/check
  i32.eqz
  if
   loop $do-loop|1
    call $assembly/compiler/expression
    local.get $argCount
    i32.const 255
    i32.and
    i32.const 255
    i32.eq
    if
     i32.const 12784
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $assembly/compiler/error
    end
    local.get $argCount
    i32.const 1
    i32.add
    local.set $argCount
    global.get $assembly/scanner/TokenType.TOKEN_COMMA
    call $assembly/compiler/match
    br_if $do-loop|1
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 12880
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/consume
  local.get $argCount
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/currentChunk (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/Compiler#get:function
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/object/ObjFunction#get:chunk
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $~lib/typedarray/Uint16Array#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 256
   i32.const 864
   i32.const 605
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/chunk/Chunk#writeChunk (param $this i32) (param $byte i32) (param $line i32)
  (local $oldCapacity i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/chunk/Chunk#get:capacity
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/chunk/Chunk#get:count
  i32.const 1
  i32.add
  i32.lt_s
  if
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/chunk/Chunk#get:capacity
   local.set $oldCapacity
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $oldCapacity
   i32.const 1
   global.set $~argumentsLength
   global.get $assembly/memory/GROW_CAPACITY
   i32.load $0
   call_indirect $0 (type $i32_=>_i32)
   call $assembly/chunk/Chunk#set:capacity
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/chunk/Chunk#get:code
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $oldCapacity
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/chunk/Chunk#get:capacity
   i32.const 3
   global.set $~argumentsLength
   global.get $assembly/memory/GROW_UINT8_ARRAY
   i32.load $0
   call_indirect $0 (type $i32_i32_i32_=>_i32)
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/chunk/Chunk#set:code
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/chunk/Chunk#get:lines
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $oldCapacity
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/chunk/Chunk#get:capacity
   i32.const 3
   global.set $~argumentsLength
   global.get $assembly/memory/GROW_UINT16_ARRAY
   i32.load $0
   call_indirect $0 (type $i32_i32_i32_=>_i32)
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/chunk/Chunk#set:lines
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:code
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:count
  local.get $byte
  call $~lib/staticarray/StaticArray<u8>#__set
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:lines
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:count
  local.get $line
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:count
  i32.const 1
  i32.add
  call $assembly/chunk/Chunk#set:count
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitByte (param $byte i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  call $assembly/compiler/currentChunk
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $byte
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/compiler/Parser#get:previous
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/scanner/Token#get:line
  call $assembly/chunk/Chunk#writeChunk
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 256
    i32.const 4752
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/compiler/ParseRule>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/object/ObjString>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 48
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjString>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjString>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjString>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/object/ObjString>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 4752
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/object/ObjString>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/object/ObjString>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/object/ObjString>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/object/ObjString>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/object/ObjString>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjString>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 256
    i32.const 4752
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/object/ObjString>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjString>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/object/ObjString>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<assembly/object/ObjString>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<assembly/object/ObjString>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.1 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.1
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<assembly/object/ObjString>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<assembly/object/ObjString>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/object/ObjString>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/object/ObjString>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/object/ObjString>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjString>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjString>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/table/tableFindString (param $map i32) (param $myString i32) (result i32)
  (local $foundKey i32)
  (local $keys i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  i32.const 13088
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $myString
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/string/String#concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/index/debugLog
  i32.const 0
  local.set $foundKey
  global.get $~lib/memory/__stack_pointer
  local.get $map
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys
  local.tee $keys
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/array/Array<assembly/object/ObjString>#get:length
   i32.lt_s
   if
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/object/ObjString>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $assembly/object/ObjString#get:chars
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $myString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/string/String.__eq
    if
     i32.const 13136
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     local.get $keys
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=20
     local.get $5
     local.get $i
     call $~lib/array/Array<assembly/object/ObjString>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=16
     local.get $5
     call $assembly/object/ObjString#get:chars
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $5
     call $~lib/string/String#concat
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $assembly/index/debugLog
     global.get $~lib/memory/__stack_pointer
     local.get $keys
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $i
     call $~lib/array/Array<assembly/object/ObjString>#__get
     local.tee $foundKey
     i32.store $0 offset=24
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $foundKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/string/String#slice (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $out i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.set $len
  local.get $len
  i32.const 0
  i32.le_s
  if
   i32.const 32
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $start
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  i32.const 1
  i32.shl
  memory.copy $0 $0
  local.get $out
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $~lib/string/String#slice@varargs (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $end
  call $~lib/string/String#slice
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/object/ALLOCATE_OBJ (param $type i32) (result i32)
  (local $obj i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/object/Obj#constructor
  local.tee $obj
  i32.store $0
  block $break|0
   block $case1|0
    block $case0|0
     local.get $type
     local.set $2
     local.get $2
     global.get $assembly/object/ObjType.OBJ_STRING
     i32.eq
     br_if $case0|0
     local.get $2
     global.get $assembly/object/ObjType.OBJ_UPVALUE
     i32.eq
     br_if $case1|0
     br $break|0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $assembly/object/ObjString#constructor
    local.tee $obj
    i32.store $0
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 1
   i32.const 0
   call $assembly/object/ObjUpvalue#constructor
   local.tee $obj
   i32.store $0
   br $break|0
  end
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  global.get $assembly/vm/vm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/vm/VM#get:objects
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/Obj#set:nextObj
  global.get $assembly/vm/vm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/vm/VM#set:objects
  local.get $obj
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 4416
   i32.const 284
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/value/NIL_VAL (result i32)
  (local $val i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/value/Value#constructor
  local.tee $val
  i32.store $0
  local.get $val
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  global.get $assembly/value/ValueType.VAL_NIL
  call $assembly/value/Value#set:type
  local.get $val
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:key
     local.get $key
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<assembly/object/ObjString>
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.2
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.3 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.3
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<assembly/object/ObjString>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.4 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.4
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.5 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.5
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<assembly/object/ObjString>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.6 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.6
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/table/tableSet (param $map i32) (param $key i32) (param $value i32) (result i32)
  (local $existed i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $map
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
  local.set $existed
  local.get $map
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set
  drop
  local.get $existed
  i32.eqz
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/object/allocateString (param $myString i32) (result i32)
  (local $1 i32)
  (local $allocatedString i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/object/ObjType.OBJ_STRING
  call $assembly/object/ALLOCATE_OBJ
  local.tee $1
  i32.store $0
  local.get $1
  call $~instanceof|assembly/object/ObjString
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 258
   i32.const 51
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $allocatedString
  i32.store $0 offset=4
  local.get $allocatedString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $myString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/object/ObjString#set:chars
  global.get $assembly/vm/vm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/vm/VM#get:strings
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $allocatedString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/value/NIL_VAL
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/table/tableSet
  drop
  local.get $allocatedString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/object/copyString (param $myString i32) (result i32)
  (local $interned i32)
  (local $copy i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/vm/VM#get:strings
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $myString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/table/tableFindString
  local.tee $interned
  i32.store $0 offset=12
  local.get $interned
  i32.const 0
  i32.ne
  if
   i32.const 13168
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/index/debugLog
   local.get $interned
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $myString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String#slice@varargs
  local.tee $copy
  i32.store $0 offset=16
  local.get $copy
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/object/allocateString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/value/OBJ_VAL (param $obj i32) (result i32)
  (local $val i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/value/Value#constructor
  local.tee $val
  i32.store $0
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/value/ValueType.VAL_OBJ
  call $assembly/value/Value#set:type
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $obj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/value/Value#set:obj
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/value/ValueArray#writeValueArray (param $this i32) (param $value i32)
  (local $oldCapacity i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/ValueArray#get:capacity
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/ValueArray#get:count
  i32.const 1
  i32.add
  i32.lt_s
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/ValueArray#get:capacity
   local.set $oldCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $oldCapacity
   i32.const 1
   global.set $~argumentsLength
   global.get $assembly/memory/GROW_CAPACITY
   i32.load $0
   call_indirect $0 (type $i32_=>_i32)
   call $assembly/value/ValueArray#set:capacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/value/ValueArray#get:values
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $oldCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/value/ValueArray#get:capacity
   i32.const 3
   global.set $~argumentsLength
   global.get $assembly/memory/GROW_VALUE_ARRAY
   i32.load $0
   call_indirect $0 (type $i32_i32_i32_=>_i32)
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/value/ValueArray#set:values
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/value/ValueArray#get:values
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/value/ValueArray#get:count
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/value/ValueArray#get:count
  i32.const 1
  i32.add
  call $assembly/value/ValueArray#set:count
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/chunk/Chunk#addConstant (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/chunk/Chunk#get:constants
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/ValueArray#writeValueArray
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:constants
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/ValueArray#get:count
  i32.const 1
  i32.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/makeConstant (param $value i32) (result i32)
  (local $constant i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#addConstant
  local.set $constant
  local.get $constant
  i32.const 255
  i32.and
  global.get $~lib/builtins/u8.MAX_VALUE
  i32.gt_u
  if
   i32.const 13264
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/compiler/error
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $constant
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/identifierConstant (param $name i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $name
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/scanner/Token#get:lexeme
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/object/copyString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/value/OBJ_VAL
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/makeConstant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/dot (param $canAssign i32)
  (local $name i32)
  (local $argCount i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  i32.const 12992
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/consume
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Parser#get:previous
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/compiler/identifierConstant
  local.set $name
  local.get $canAssign
  if (result i32)
   global.get $assembly/scanner/TokenType.TOKEN_EQUAL
   call $assembly/compiler/match
  else
   i32.const 0
  end
  if
   call $assembly/compiler/expression
   global.get $assembly/chunk/OpCode.OP_SET_PROPERTY
   local.get $name
   i32.const 255
   i32.and
   call $assembly/compiler/emitBytes
  else
   global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
   call $assembly/compiler/match
   if
    call $assembly/compiler/argumentList
    local.set $argCount
    global.get $assembly/chunk/OpCode.OP_INVOKE
    local.get $name
    i32.const 255
    i32.and
    call $assembly/compiler/emitBytes
    local.get $argCount
    i32.const 255
    i32.and
    call $assembly/compiler/emitByte
   else
    global.get $assembly/chunk/OpCode.OP_GET_PROPERTY
    local.get $name
    i32.const 255
    i32.and
    call $assembly/compiler/emitBytes
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/unary (param $canAssign i32)
  (local $operatorType i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/compiler/Parser#get:previous
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/scanner/Token#get:type
  local.set $operatorType
  global.get $assembly/compiler/Precedence.PREC_UNARY
  call $assembly/compiler/parsePrecedence
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      local.get $operatorType
      local.set $2
      local.get $2
      global.get $assembly/scanner/TokenType.TOKEN_BANG
      i32.eq
      br_if $case0|0
      local.get $2
      global.get $assembly/scanner/TokenType.TOKEN_MINUS
      i32.eq
      br_if $case1|0
      br $case2|0
     end
     global.get $assembly/chunk/OpCode.OP_NOT
     call $assembly/compiler/emitByte
     br $break|0
    end
    global.get $assembly/chunk/OpCode.OP_NEGATE
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/binary (param $canAssign i32)
  (local $operatorType i32)
  (local $rule i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/Parser#get:previous
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/scanner/Token#get:type
  local.set $operatorType
  global.get $~lib/memory/__stack_pointer
  local.get $operatorType
  call $assembly/compiler/getRule
  local.tee $rule
  i32.store $0 offset=8
  local.get $rule
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/ParseRule#get:precedence
  i32.const 1
  i32.add
  call $assembly/compiler/parsePrecedence
  block $break|0
   block $case10|0
    block $case9|0
     block $case8|0
      block $case7|0
       block $case6|0
        block $case5|0
         block $case4|0
          block $case3|0
           block $case2|0
            block $case1|0
             block $case0|0
              local.get $operatorType
              local.set $3
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_BANG_EQUAL
              i32.eq
              br_if $case0|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_EQUAL_EQUAL
              i32.eq
              br_if $case1|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_GREATER
              i32.eq
              br_if $case2|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_GREATER_EQUAL
              i32.eq
              br_if $case3|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_LESS
              i32.eq
              br_if $case4|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_LESS_EQUAL
              i32.eq
              br_if $case5|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_PLUS
              i32.eq
              br_if $case6|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_MINUS
              i32.eq
              br_if $case7|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_STAR
              i32.eq
              br_if $case8|0
              local.get $3
              global.get $assembly/scanner/TokenType.TOKEN_SLASH
              i32.eq
              br_if $case9|0
              br $case10|0
             end
             global.get $assembly/chunk/OpCode.OP_EQUAL
             global.get $assembly/chunk/OpCode.OP_NOT
             call $assembly/compiler/emitBytes
             br $break|0
            end
            global.get $assembly/chunk/OpCode.OP_EQUAL
            call $assembly/compiler/emitByte
            br $break|0
           end
           global.get $assembly/chunk/OpCode.OP_GREATER
           call $assembly/compiler/emitByte
           br $break|0
          end
          global.get $assembly/chunk/OpCode.OP_LESS
          global.get $assembly/chunk/OpCode.OP_NOT
          call $assembly/compiler/emitBytes
          br $break|0
         end
         global.get $assembly/chunk/OpCode.OP_LESS
         call $assembly/compiler/emitByte
         br $break|0
        end
        global.get $assembly/chunk/OpCode.OP_GREATER
        global.get $assembly/chunk/OpCode.OP_NOT
        call $assembly/compiler/emitBytes
        br $break|0
       end
       global.get $assembly/chunk/OpCode.OP_ADD
       call $assembly/compiler/emitByte
       br $break|0
      end
      global.get $assembly/chunk/OpCode.OP_SUBTRACT
      call $assembly/compiler/emitByte
      br $break|0
     end
     global.get $assembly/chunk/OpCode.OP_MULTIPLY
     call $assembly/compiler/emitByte
     br $break|0
    end
    global.get $assembly/chunk/OpCode.OP_DIVIDE
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/Local>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Local>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Local>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/compiler/identifiersEqual (param $a i32) (param $b i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $a
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $b
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String.__eq
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/resolveLocal (param $compiler i32) (param $name i32) (result i32)
  (local $i i32)
  (local $local i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $compiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/Compiler#get:localCount
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $compiler
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/compiler/Compiler#get:locals
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/array/Array<assembly/compiler/Local>#__get
    local.tee $local
    i32.store $0 offset=8
    local.get $name
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $local
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $assembly/compiler/Local#get:name
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/compiler/identifiersEqual
    if
     local.get $local
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     call $assembly/compiler/Local#get:depth
     i32.const -1
     i32.eq
     if
      i32.const 13456
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      call $assembly/compiler/error
     end
     local.get $i
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  i32.const -1
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 256
    i32.const 4752
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/compiler/Upvalue>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/addUpvalue (param $compiler i32) (param $index i32) (param $isLocal i32) (result i32)
  (local $localStr i32)
  (local $upvalueCount i32)
  (local $i i32)
  (local $upvalue i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $isLocal
  if (result i32)
   i32.const 2928
  else
   i32.const 2960
  end
  local.tee $localStr
  i32.store $0
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/compiler/Compiler#get:function
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $assembly/object/ObjFunction#get:upvalueCount
  i32.const 255
  i32.and
  local.set $upvalueCount
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $upvalueCount
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $compiler
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $assembly/compiler/Compiler#get:upvalues
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $i
    call $~lib/array/Array<assembly/compiler/Upvalue>#__get
    local.tee $upvalue
    i32.store $0 offset=12
    local.get $upvalue
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $assembly/compiler/Upvalue#get:index
    i32.const 255
    i32.and
    local.get $index
    i32.const 255
    i32.and
    i32.eq
    if (result i32)
     local.get $upvalue
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $assembly/compiler/Upvalue#get:isLocal
     i32.const 0
     i32.ne
     local.get $isLocal
     i32.const 0
     i32.ne
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $i
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $8
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $upvalueCount
  global.get $assembly/compiler/U8_COUNT
  i32.eq
  if
   i32.const 13728
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $assembly/compiler/error
   i32.const 0
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/compiler/Compiler#get:upvalues
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $upvalueCount
  i32.const 0
  call $assembly/compiler/Upvalue#constructor
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $~lib/array/Array<assembly/compiler/Upvalue>#__set
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/compiler/Compiler#get:upvalues
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  local.get $upvalueCount
  call $~lib/array/Array<assembly/compiler/Upvalue>#__get
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $isLocal
  call $assembly/compiler/Upvalue#set:isLocal
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/compiler/Compiler#get:upvalues
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  local.get $upvalueCount
  call $~lib/array/Array<assembly/compiler/Upvalue>#__get
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $index
  call $assembly/compiler/Upvalue#set:index
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/compiler/Compiler#get:function
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $compiler
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/compiler/Compiler#get:function
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/object/ObjFunction#get:upvalueCount
  local.tee $7
  i32.const 1
  i32.add
  call $assembly/object/ObjFunction#set:upvalueCount
  local.get $7
  i32.const 255
  i32.and
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/compiler/resolveUpvalue (param $compiler i32) (param $name i32) (result i32)
  (local $2 i32)
  (local $local i32)
  (local $4 i32)
  (local $5 i32)
  (local $upvalue i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $compiler
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/compiler/Compiler#get:enclosing
  i32.const 0
  i32.eq
  if
   i32.const -1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $compiler
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/compiler/Compiler#get:enclosing
  local.tee $2
  i32.store $0 offset=12
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 4160
   i32.const 13584
   i32.const 655
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $name
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $assembly/compiler/resolveLocal
  local.set $local
  local.get $local
  i32.const -1
  i32.ne
  if
   i32.const 13648
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $name
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $assembly/scanner/Token#get:lexeme
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/string/String.__concat
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   local.get $compiler
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $assembly/compiler/Compiler#get:enclosing
   local.tee $4
   i32.store $0 offset=20
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 4160
    i32.const 13584
    i32.const 658
    i32.const 20
    call $~lib/builtins/abort
    unreachable
   end
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $assembly/compiler/Compiler#get:locals
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $local
   call $~lib/array/Array<assembly/compiler/Local>#__get
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 1
   call $assembly/compiler/Local#set:isCaptured
   local.get $compiler
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $local
   i32.const 1
   call $assembly/compiler/addUpvalue
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $compiler
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/compiler/Compiler#get:enclosing
  local.tee $5
  i32.store $0 offset=24
  local.get $5
  if (result i32)
   local.get $5
  else
   i32.const 4160
   i32.const 13584
   i32.const 663
   i32.const 51
   call $~lib/builtins/abort
   unreachable
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $name
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $assembly/compiler/resolveUpvalue
  local.set $upvalue
  local.get $upvalue
  i32.const -1
  i32.ne
  if
   i32.const 13840
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $name
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $assembly/scanner/Token#get:lexeme
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/string/String.__concat
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $assembly/index/debugLog
   local.get $compiler
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $upvalue
   i32.const 0
   call $assembly/compiler/addUpvalue
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  i32.const -1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/compiler/namedVariable (param $name i32) (param $canAssign i32)
  (local $getOp i32)
  (local $setOp i32)
  (local $arg i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $getOp
  i32.const 0
  local.set $setOp
  global.get $assembly/compiler/current
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $name
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/compiler/resolveLocal
  local.set $arg
  local.get $arg
  i32.const -1
  i32.ne
  if
   global.get $assembly/chunk/OpCode.OP_GET_LOCAL
   local.set $getOp
   global.get $assembly/chunk/OpCode.OP_SET_LOCAL
   local.set $setOp
  else
   global.get $assembly/compiler/current
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $name
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/compiler/resolveUpvalue
   local.set $arg
   local.get $arg
   i32.const -1
   i32.ne
   if
    global.get $assembly/chunk/OpCode.OP_GET_UPVALUE
    local.set $getOp
    global.get $assembly/chunk/OpCode.OP_SET_UPVALUE
    local.set $setOp
   else
    local.get $name
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/compiler/identifierConstant
    i32.const 255
    i32.and
    local.set $arg
    global.get $assembly/chunk/OpCode.OP_GET_GLOBAL
    local.set $getOp
    global.get $assembly/chunk/OpCode.OP_SET_GLOBAL
    local.set $setOp
   end
  end
  local.get $canAssign
  if (result i32)
   global.get $assembly/scanner/TokenType.TOKEN_EQUAL
   call $assembly/compiler/match
  else
   i32.const 0
  end
  if
   call $assembly/compiler/expression
   local.get $setOp
   local.get $arg
   i32.const 255
   i32.and
   call $assembly/compiler/emitBytes
  else
   local.get $getOp
   local.get $arg
   i32.const 255
   i32.and
   call $assembly/compiler/emitBytes
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/variable (param $canAssign i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/Parser#get:previous
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $canAssign
  call $assembly/compiler/namedVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitConstant (param $value i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/chunk/OpCode.OP_CONSTANT
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/makeConstant
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/mString (param $canAssign i32)
  (local $myString i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/compiler/Parser#get:previous
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 1
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/compiler/Parser#get:previous
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#get:length
  i32.const 1
  i32.sub
  call $~lib/string/String#substring
  local.tee $myString
  i32.store $0 offset=16
  local.get $myString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/copyString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/OBJ_VAL
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/emitConstant
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/string/strtod (param $str i32) (result f64)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $sign f64)
  (local $savedPtr i32)
  (local $pointed i32)
  (local $consumed i32)
  (local $position i32)
  (local $x i64)
  (local $noDigits i32)
  (local $digit i32)
  (local $12 i32)
  (local $13 i32)
  (local $ptr|14 i32)
  (local $len|15 i32)
  (local $sign|16 i32)
  (local $magnitude i32)
  (local $code|18 i32)
  (local $digit|19 i32)
  (local $significand i64)
  (local $exp i32)
  (local $significandf f64)
  (local $n i32)
  (local $24 i32)
  (local $25 i32)
  (local $n|26 i32)
  (local $n|27 i32)
  (local $significand|28 i64)
  (local $exp|29 i32)
  (local $shift i64)
  (local $q i64)
  (local $r i64)
  (local $s i64)
  (local $b i64)
  (local $q|35 i64)
  (local $r|36 i64)
  (local $s|37 i64)
  (local $significand|38 i64)
  (local $exp|39 i32)
  (local $shift|40 i64)
  (local $a i64)
  (local $b|42 i32)
  (local $low i64)
  (local $high i64)
  (local $overflow i32)
  (local $space i32)
  (local $revspace i64)
  (local $a|48 i64)
  (local $b|49 i32)
  (local $low|50 i64)
  (local $high|51 i64)
  (local $overflow|52 i32)
  (local $space|53 i32)
  (local $revspace|54 i64)
  (local $55 i32)
  (local $56 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $55
  global.get $~lib/memory/__stack_pointer
  local.get $55
  i32.store $0
  local.get $55
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u $0
  local.set $code
  f64.const 1
  local.set $sign
  loop $while-continue|0
   local.get $len
   if (result i32)
    local.get $code
    call $~lib/util/string/isSpace
   else
    i32.const 0
   end
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 45
  i32.eq
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u $0
   local.set $code
   f64.const -1
   local.set $sign
  else
   local.get $code
   i32.const 43
   i32.eq
   if
    local.get $len
    i32.const 1
    i32.sub
    local.tee $len
    i32.eqz
    if
     f64.const nan:0x8000000000000
     local.set $56
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $56
     return
    end
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
   end
  end
  local.get $len
  i32.const 8
  i32.ge_s
  if (result i32)
   local.get $code
   i32.const 73
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $ptr
   i64.load $0
   i64.const 29555310648492105
   i64.eq
   if (result i32)
    local.get $ptr
    i64.load $0 offset=8
    i64.const 34058970405077102
    i64.eq
   else
    i32.const 0
   end
   if
    f64.const inf
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 46
  i32.ne
  if (result i32)
   local.get $code
   i32.const 48
   i32.sub
   i32.const 10
   i32.ge_u
  else
   i32.const 0
  end
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $ptr
  local.set $savedPtr
  loop $while-continue|1
   local.get $code
   i32.const 48
   i32.eq
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|1
   end
  end
  local.get $len
  i32.const 0
  i32.le_s
  if
   f64.const 0
   local.get $sign
   f64.mul
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  i32.const 0
  local.set $pointed
  i32.const 0
  local.set $consumed
  i32.const 0
  local.set $position
  i64.const 0
  local.set $x
  local.get $code
  i32.const 46
  i32.eq
  if
   local.get $savedPtr
   local.get $ptr
   i32.sub
   i32.eqz
   local.set $noDigits
   local.get $ptr
   i32.const 2
   i32.add
   local.set $ptr
   local.get $len
   i32.const 1
   i32.sub
   local.set $len
   local.get $len
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   i32.const 1
   local.set $pointed
   loop $for-loop|2
    local.get $ptr
    i32.load16_u $0
    local.tee $code
    i32.const 48
    i32.eq
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $len
     local.get $position
     i32.const 1
     i32.sub
     local.set $position
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $for-loop|2
    end
   end
   local.get $len
   i32.const 0
   i32.le_s
   if
    f64.const 0
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $position
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if (result i32)
    local.get $code
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
  end
  local.get $code
  i32.const 48
  i32.sub
  local.set $digit
  block $for-break3
   loop $for-loop|3
    local.get $digit
    i32.const 10
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $code
     i32.const 46
     i32.eq
     if (result i32)
      local.get $pointed
      i32.eqz
     else
      i32.const 0
     end
    end
    if
     local.get $digit
     i32.const 10
     i32.lt_u
     if
      local.get $consumed
      i32.const 19
      i32.lt_s
      if (result i64)
       i64.const 10
       local.get $x
       i64.mul
       local.get $digit
       i64.extend_i32_u
       i64.add
      else
       local.get $x
       local.get $digit
       i32.eqz
       i32.eqz
       i64.extend_i32_u
       i64.or
      end
      local.set $x
      local.get $consumed
      i32.const 1
      i32.add
      local.set $consumed
     else
      local.get $consumed
      local.set $position
      i32.const 1
      local.set $pointed
     end
     local.get $len
     i32.const 1
     i32.sub
     local.tee $len
     i32.eqz
     if
      br $for-break3
     end
     local.get $ptr
     i32.const 2
     i32.add
     local.tee $ptr
     i32.load16_u $0
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     local.set $digit
     br $for-loop|3
    end
   end
  end
  local.get $pointed
  i32.eqz
  if
   local.get $consumed
   local.set $position
  end
  block $~lib/util/string/scientific|inlined.0 (result f64)
   local.get $x
   local.set $significand
   local.get $position
   i32.const 19
   local.tee $12
   local.get $consumed
   local.tee $13
   local.get $12
   local.get $13
   i32.lt_s
   select
   i32.sub
   block $~lib/util/string/parseExp|inlined.0 (result i32)
    local.get $ptr
    local.set $ptr|14
    local.get $len
    local.set $len|15
    i32.const 1
    local.set $sign|16
    i32.const 0
    local.set $magnitude
    local.get $ptr|14
    i32.load16_u $0
    local.set $code|18
    local.get $code|18
    i32.const 32
    i32.or
    i32.const 101
    i32.ne
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $len|15
    i32.const 1
    i32.sub
    local.tee $len|15
    i32.eqz
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $ptr|14
    i32.const 2
    i32.add
    local.tee $ptr|14
    i32.load16_u $0
    local.set $code|18
    local.get $code|18
    i32.const 45
    i32.eq
    if
     local.get $len|15
     i32.const 1
     i32.sub
     local.tee $len|15
     i32.eqz
     if
      i32.const 0
      br $~lib/util/string/parseExp|inlined.0
     end
     local.get $ptr|14
     i32.const 2
     i32.add
     local.tee $ptr|14
     i32.load16_u $0
     local.set $code|18
     i32.const -1
     local.set $sign|16
    else
     local.get $code|18
     i32.const 43
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
     end
    end
    loop $while-continue|4
     local.get $code|18
     i32.const 48
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
      br $while-continue|4
     end
    end
    local.get $code|18
    i32.const 48
    i32.sub
    local.set $digit|19
    loop $for-loop|5
     local.get $len|15
     if (result i32)
      local.get $digit|19
      i32.const 10
      i32.lt_u
     else
      i32.const 0
     end
     if
      local.get $magnitude
      i32.const 3200
      i32.ge_s
      if
       local.get $sign|16
       i32.const 3200
       i32.mul
       br $~lib/util/string/parseExp|inlined.0
      end
      i32.const 10
      local.get $magnitude
      i32.mul
      local.get $digit|19
      i32.add
      local.set $magnitude
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
      local.get $len|15
      i32.const 1
      i32.sub
      local.set $len|15
      local.get $code|18
      i32.const 48
      i32.sub
      local.set $digit|19
      br $for-loop|5
     end
    end
    local.get $sign|16
    local.get $magnitude
    i32.mul
    br $~lib/util/string/parseExp|inlined.0
   end
   i32.add
   local.set $exp
   local.get $significand
   i64.const 0
   i64.ne
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $exp
    i32.const -342
    i32.lt_s
   end
   if
    f64.const 0
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 308
   i32.gt_s
   if
    f64.const inf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $significand
   f64.convert_i64_u
   local.set $significandf
   local.get $exp
   i32.eqz
   if
    local.get $significandf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 22
   i32.gt_s
   if (result i32)
    local.get $exp
    i32.const 22
    i32.const 15
    i32.add
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $significandf
    block $~lib/util/string/pow10|inlined.0 (result f64)
     local.get $exp
     i32.const 22
     i32.sub
     local.set $n
     i32.const 13984
     local.get $n
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     br $~lib/util/string/pow10|inlined.0
    end
    f64.mul
    local.set $significandf
    i32.const 22
    local.set $exp
   end
   local.get $significand
   i64.const 9007199254740991
   i64.le_u
   if (result i32)
    local.get $exp
    local.tee $24
    i32.const 31
    i32.shr_s
    local.tee $25
    local.get $24
    i32.add
    local.get $25
    i32.xor
    i32.const 22
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $exp
    i32.const 0
    i32.gt_s
    if
     local.get $significandf
     block $~lib/util/string/pow10|inlined.1 (result f64)
      local.get $exp
      local.set $n|26
      i32.const 13984
      local.get $n|26
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      br $~lib/util/string/pow10|inlined.1
     end
     f64.mul
     br $~lib/util/string/scientific|inlined.0
    end
    local.get $significandf
    block $~lib/util/string/pow10|inlined.2 (result f64)
     i32.const 0
     local.get $exp
     i32.sub
     local.set $n|27
     i32.const 13984
     local.get $n|27
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     br $~lib/util/string/pow10|inlined.2
    end
    f64.div
    br $~lib/util/string/scientific|inlined.0
   else
    local.get $exp
    i32.const 0
    i32.lt_s
    if
     block $~lib/util/string/scaledown|inlined.0 (result f64)
      local.get $significand
      local.set $significand|28
      local.get $exp
      local.set $exp|29
      local.get $significand|28
      i64.clz
      local.set $shift
      local.get $significand|28
      local.get $shift
      i64.shl
      local.set $significand|28
      local.get $exp|29
      i64.extend_i32_s
      local.get $shift
      i64.sub
      local.set $shift
      loop $for-loop|6
       local.get $exp|29
       i32.const -14
       i32.le_s
       if
        local.get $significand|28
        i64.const 6103515625
        i64.div_u
        local.set $q
        local.get $significand|28
        i64.const 6103515625
        i64.rem_u
        local.set $r
        local.get $q
        i64.clz
        local.set $s
        local.get $q
        local.get $s
        i64.shl
        f64.const 0.00004294967296
        local.get $r
        local.get $s
        i64.const 18
        i64.sub
        i64.shl
        f64.convert_i64_u
        f64.mul
        f64.nearest
        i64.trunc_sat_f64_u
        i64.add
        local.set $significand|28
        local.get $shift
        local.get $s
        i64.sub
        local.set $shift
        local.get $exp|29
        i32.const 14
        i32.add
        local.set $exp|29
        br $for-loop|6
       end
      end
      i32.const 5
      i32.const 0
      local.get $exp|29
      i32.sub
      call $~lib/math/ipow32
      i64.extend_i32_s
      local.set $b
      local.get $significand|28
      local.get $b
      i64.div_u
      local.set $q|35
      local.get $significand|28
      local.get $b
      i64.rem_u
      local.set $r|36
      local.get $q|35
      i64.clz
      local.set $s|37
      local.get $q|35
      local.get $s|37
      i64.shl
      local.get $r|36
      f64.convert_i64_u
      i64.reinterpret_f64
      local.get $s|37
      i64.const 52
      i64.shl
      i64.add
      f64.reinterpret_i64
      local.get $b
      f64.convert_i64_u
      f64.div
      i64.trunc_sat_f64_u
      i64.add
      local.set $significand|28
      local.get $shift
      local.get $s|37
      i64.sub
      local.set $shift
      local.get $significand|28
      f64.convert_i64_u
      local.get $shift
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaledown|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    else
     block $~lib/util/string/scaleup|inlined.0 (result f64)
      local.get $significand
      local.set $significand|38
      local.get $exp
      local.set $exp|39
      local.get $significand|38
      i64.ctz
      local.set $shift|40
      local.get $significand|38
      local.get $shift|40
      i64.shr_u
      local.set $significand|38
      local.get $shift|40
      local.get $exp|39
      i64.extend_i32_s
      i64.add
      local.set $shift|40
      local.get $shift|40
      global.set $~lib/util/string/__fixmulShift
      loop $for-loop|7
       local.get $exp|39
       i32.const 13
       i32.ge_s
       if
        block $~lib/util/string/fixmul|inlined.0 (result i64)
         local.get $significand|38
         local.set $a
         i32.const 1220703125
         local.set $b|42
         local.get $a
         i64.const 4294967295
         i64.and
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.set $low
         local.get $a
         i64.const 32
         i64.shr_u
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.get $low
         i64.const 32
         i64.shr_u
         i64.add
         local.set $high
         local.get $high
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         local.set $overflow
         local.get $overflow
         i32.clz
         local.set $space
         i64.const 32
         local.get $space
         i64.extend_i32_u
         i64.sub
         local.set $revspace
         global.get $~lib/util/string/__fixmulShift
         local.get $revspace
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $high
         local.get $space
         i64.extend_i32_u
         i64.shl
         local.get $low
         i64.const 4294967295
         i64.and
         local.get $revspace
         i64.shr_u
         i64.or
         local.get $low
         local.get $space
         i64.extend_i32_u
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         i64.add
         br $~lib/util/string/fixmul|inlined.0
        end
        local.set $significand|38
        local.get $exp|39
        i32.const 13
        i32.sub
        local.set $exp|39
        br $for-loop|7
       end
      end
      block $~lib/util/string/fixmul|inlined.1 (result i64)
       local.get $significand|38
       local.set $a|48
       i32.const 5
       local.get $exp|39
       call $~lib/math/ipow32
       local.set $b|49
       local.get $a|48
       i64.const 4294967295
       i64.and
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.set $low|50
       local.get $a|48
       i64.const 32
       i64.shr_u
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.get $low|50
       i64.const 32
       i64.shr_u
       i64.add
       local.set $high|51
       local.get $high|51
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       local.set $overflow|52
       local.get $overflow|52
       i32.clz
       local.set $space|53
       i64.const 32
       local.get $space|53
       i64.extend_i32_u
       i64.sub
       local.set $revspace|54
       global.get $~lib/util/string/__fixmulShift
       local.get $revspace|54
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $high|51
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       local.get $low|50
       i64.const 4294967295
       i64.and
       local.get $revspace|54
       i64.shr_u
       i64.or
       local.get $low|50
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       i64.add
       br $~lib/util/string/fixmul|inlined.1
      end
      local.set $significand|38
      global.get $~lib/util/string/__fixmulShift
      local.set $shift|40
      local.get $significand|38
      f64.convert_i64_u
      local.get $shift|40
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaleup|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    end
    unreachable
   end
   unreachable
  end
  local.get $sign
  f64.copysign
  local.set $56
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $56
  return
 )
 (func $~lib/string/parseFloat (param $str i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/util/string/strtod
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/value/NUMBER_VAL (param $value f64) (result i32)
  (local $val i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/value/Value#constructor
  local.tee $val
  i32.store $0
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/value/ValueType.VAL_NUMBER
  call $assembly/value/Value#set:type
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $value
  call $assembly/value/Value#set:number
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/number (param $canAssign i32)
  (local $value f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/compiler/Parser#get:previous
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/string/parseFloat
  local.set $value
  local.get $value
  call $assembly/value/NUMBER_VAL
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/emitConstant
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitJump (param $instruction i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $instruction
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  i32.const 255
  call $assembly/compiler/emitByte
  i32.const 255
  call $assembly/compiler/emitByte
  call $assembly/compiler/currentChunk
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/chunk/Chunk#get:count
  i32.const 2
  i32.sub
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/patchJump (param $offset i32)
  (local $jump i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/chunk/Chunk#get:count
  local.get $offset
  i32.sub
  i32.const 2
  i32.sub
  local.set $jump
  local.get $jump
  i32.const 65535
  i32.and
  global.get $~lib/builtins/u16.MAX_VALUE
  i32.gt_u
  if
   i32.const 14224
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/compiler/error
  end
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $offset
  local.get $jump
  i32.const 8
  i32.shr_s
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<u8>#__set
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $offset
  i32.const 1
  i32.add
  local.get $jump
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<u8>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/literal (param $canAssign i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $break|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       global.get $assembly/compiler/parser
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=4
       local.get $2
       call $assembly/compiler/Parser#get:previous
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       call $assembly/scanner/Token#get:type
       local.set $1
       local.get $1
       global.get $assembly/scanner/TokenType.TOKEN_FALSE
       i32.eq
       br_if $case0|0
       local.get $1
       global.get $assembly/scanner/TokenType.TOKEN_NIL
       i32.eq
       br_if $case1|0
       local.get $1
       global.get $assembly/scanner/TokenType.TOKEN_TRUE
       i32.eq
       br_if $case2|0
       br $case3|0
      end
      global.get $assembly/chunk/OpCode.OP_FALSE
      call $assembly/compiler/emitByte
      br $break|0
     end
     global.get $assembly/chunk/OpCode.OP_NIL
     call $assembly/compiler/emitByte
     br $break|0
    end
    global.get $assembly/chunk/OpCode.OP_TRUE
    call $assembly/compiler/emitByte
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/syntheticToken (param $text i32) (result i32)
  (local $token i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/scanner/Token#constructor
  local.tee $token
  i32.store $0
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $text
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#set:lexeme
  local.get $token
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/super_ (param $canAssign i32)
  (local $1 i32)
  (local $name i32)
  (local $argCount i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/currentClass
  i32.const 0
  i32.eq
  if
   i32.const 14400
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/error
  else
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/currentClass
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 4160
    i32.const 13584
    i32.const 491
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/ClassCompiler#get:hasSuperclass
   i32.eqz
   if
    i32.const 14496
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $assembly/compiler/error
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_DOT
  i32.const 14624
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/consume
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  i32.const 14704
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/consume
  global.get $assembly/compiler/parser
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/Parser#get:previous
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/identifierConstant
  local.set $name
  i32.const 14784
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/syntheticToken
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/compiler/namedVariable
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  call $assembly/compiler/match
  if
   call $assembly/compiler/argumentList
   local.set $argCount
   i32.const 14816
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/syntheticToken
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   call $assembly/compiler/namedVariable
   global.get $assembly/chunk/OpCode.OP_SUPER_INVOKE
   local.get $name
   i32.const 255
   i32.and
   call $assembly/compiler/emitBytes
   local.get $argCount
   i32.const 255
   i32.and
   call $assembly/compiler/emitByte
  else
   i32.const 14816
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/syntheticToken
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   call $assembly/compiler/namedVariable
   global.get $assembly/chunk/OpCode.OP_GET_SUPER
   local.get $name
   i32.const 255
   i32.and
   call $assembly/compiler/emitBytes
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/this_ (param $canAssign i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/compiler/currentClass
  i32.const 0
  i32.eq
  if
   i32.const 14880
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/compiler/error
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 0
  call $assembly/compiler/variable
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/compiler
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  call $start:assembly/scanner
  i32.const 0
  call $assembly/compiler/Parser#constructor
  global.set $assembly/compiler/parser
  i32.const 0
  call $assembly/compiler/Compiler#constructor
  global.set $assembly/compiler/current
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  i32.const 0
  i32.const 12752
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12960
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_CALL
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_BRACE
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_COMMA
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_DOT
  i32.const 0
  i32.const 0
  i32.const 13360
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_CALL
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_MINUS
  i32.const 0
  i32.const 13392
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_TERM
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_PLUS
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_TERM
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_SLASH
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_FACTOR
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_STAR
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_FACTOR
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_BANG
  i32.const 0
  i32.const 13392
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_BANG_EQUAL
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_EQUALITY
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_EQUAL
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_EQUAL_EQUAL
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_EQUALITY
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_GREATER
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_COMPARISON
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_GREATER_EQUAL
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_COMPARISON
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_LESS
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_COMPARISON
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_LESS_EQUAL
  i32.const 0
  i32.const 0
  i32.const 13424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_COMPARISON
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  i32.const 0
  i32.const 13936
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_STRING
  i32.const 0
  i32.const 13968
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_NUMBER
  i32.const 0
  i32.const 14192
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_AND
  i32.const 0
  i32.const 0
  i32.const 14304
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_AND
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_CLASS
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_ELSE
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_FALSE
  i32.const 0
  i32.const 14336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_FOR
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_FUN
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_IF
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_NIL
  i32.const 0
  i32.const 14336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_OR
  i32.const 0
  i32.const 0
  i32.const 14368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  global.get $assembly/compiler/Precedence.PREC_OR
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_PRINT
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_RETURN
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_SUPER
  i32.const 0
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_THIS
  i32.const 0
  i32.const 14976
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_TRUE
  i32.const 0
  i32.const 14336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_VAR
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_WHILE
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_ERROR
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $assembly/compiler/rules
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/scanner/TokenType.TOKEN_EOF
  i32.const 0
  i32.const 0
  i32.const 0
  global.get $assembly/compiler/Precedence.PREC_NONE
  call $assembly/compiler/ParseRule#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/compiler/ParseRule>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setDebugFlag (param $flag i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $flag
  i32.const 0
  i32.ne
  global.set $assembly/index/debugFlag
  i32.const 15008
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $flag
  i32.const 0
  call $~lib/number/Bool#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/resetStack
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $assembly/vm/VM#set:stackTop
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $assembly/vm/VM#set:objects
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $assembly/vm/VM#set:frameCount
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $assembly/vm/VM#set:openUpvalues
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/push (param $value i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/vm/VM#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/vm/VM#get:stackTop
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/vm/VM#get:stackTop
  i32.const 1
  i32.add
  call $assembly/vm/VM#set:stackTop
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/object/ObjNative#constructor (param $this i32) (param $nativefn i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 51
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 15264
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjNative#set:natFunction
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $nativefn
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjNative#set:natFunction
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/object/ObjType.OBJ_NATIVE
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/object/AS_STRING (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~instanceof|assembly/object/ObjString
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 195
   i32.const 23
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/vm/pop (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#get:stackTop
  i32.const 1
  i32.sub
  call $assembly/vm/VM#set:stackTop
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#get:stack
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#get:stackTop
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  return
 )
 (func $assembly/vm/defineNative (param $name i32) (param $myfunction i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/copyString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/OBJ_VAL
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/vm/push
  i32.const 0
  local.get $myfunction
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjNative#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/OBJ_VAL
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/vm/push
  global.get $assembly/vm/vm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/vm/VM#get:globals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/vm/vm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/vm/VM#get:stack
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  i32.const 0
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/AS_STRING
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/vm/vm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/vm/VM#get:stack
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 1
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/table/tableSet
  drop
  call $assembly/vm/pop
  drop
  call $assembly/vm/pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/initVM
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  call $assembly/vm/VM#constructor
  global.set $assembly/vm/vm
  call $assembly/vm/resetStack
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/table/initTable
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#set:globals
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/table/initTable
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#set:strings
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 15168
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/object/copyString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#set:initString
  i32.const 15200
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 15232
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/defineNative
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/scanner/initScanner (param $source i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $assembly/scanner/Scanner#set:start
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $assembly/scanner/Scanner#set:current
  global.get $assembly/scanner/scanner
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 1
  call $assembly/scanner/Scanner#set:line
  local.get $source
  global.set $assembly/scanner/codestring
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/compiler/printTokens (param $source i32)
  (local $line i32)
  (local $lineStr i32)
  (local $token i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  i32.const 32
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/index/debugLog
  i32.const 15296
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/index/debugLog
  local.get $source
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/scanner/initScanner
  i32.const -1
  local.set $line
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  local.tee $lineStr
  i32.store $0 offset=4
  block $while-break|0
   loop $while-continue|0
    i32.const 1
    if
     global.get $~lib/memory/__stack_pointer
     call $assembly/scanner/scanToken
     local.tee $token
     i32.store $0 offset=8
     local.get $token
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/scanner/Token#get:line
     i32.const 65535
     i32.and
     local.get $line
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      local.get $lineStr
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $token
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=16
      local.get $6
      call $assembly/scanner/Token#get:line
      i32.const 10
      call $~lib/number/U16#toString
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $6
      call $~lib/string/String.__concat
      local.tee $lineStr
      i32.store $0 offset=4
      local.get $token
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      call $assembly/scanner/Token#get:line
      i32.const 65535
      i32.and
      local.set $line
     else
      global.get $~lib/memory/__stack_pointer
      local.get $lineStr
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      i32.const 15360
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $6
      call $~lib/string/String.__concat
      local.tee $lineStr
      i32.store $0 offset=4
     end
     global.get $~lib/memory/__stack_pointer
     local.get $lineStr
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/scanner/tokenTypeStrings
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     local.get $token
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=20
     local.get $6
     call $assembly/scanner/Token#get:type
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $4
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $token
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $assembly/scanner/Token#get:lexeme
     local.tee $5
     i32.store $0 offset=28
     i32.const 15456
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     i32.const 1
     local.get $4
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=32
     local.get $6
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     i32.const 15456
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     i32.const 3
     local.get $5
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=32
     local.get $6
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     i32.const 15456
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     i32.const 32
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=20
     local.get $6
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $6
     call $~lib/string/String.__concat
     local.tee $lineStr
     i32.store $0 offset=4
     local.get $token
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/scanner/Token#get:type
     global.get $assembly/scanner/TokenType.TOKEN_EOF
     i32.eq
     if
      br $while-break|0
     end
     br $while-continue|0
    end
   end
  end
  local.get $lineStr
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/Local>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Local>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 256
    i32.const 4752
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/compiler/Local>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/compiler/Local>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/initCompiler (param $compiler i32) (param $type i32)
  (local $2 i32)
  (local $local i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $type
  global.get $assembly/compiler/FunctionType.TYPE_SCRIPT
  i32.eq
  if
   i32.const 15504
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/index/debugLog
   local.get $compiler
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   call $assembly/compiler/Compiler#set:enclosing
  else
   local.get $compiler
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   global.get $assembly/compiler/current
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/compiler/Compiler#set:enclosing
  end
  local.get $compiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $type
  call $assembly/compiler/Compiler#set:type
  local.get $compiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/compiler/Compiler#set:localCount
  local.get $compiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/compiler/Compiler#set:scopeDepth
  local.get $compiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/object/ObjFunction#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/Compiler#set:function
  local.get $compiler
  global.set $assembly/compiler/current
  local.get $type
  global.get $assembly/compiler/FunctionType.TYPE_SCRIPT
  i32.ne
  if
   global.get $assembly/compiler/current
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/Compiler#get:function
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   global.get $assembly/compiler/parser
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/compiler/Parser#get:previous
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/scanner/Token#get:lexeme
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/object/copyString
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/object/ObjFunction#set:name
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/compiler/Compiler#get:function
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/object/ObjFunction#get:name
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/object/ObjString#get:chars
   local.tee $2
   i32.store $0 offset=20
   i32.const 15712
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 1
   local.get $2
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 15712
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/index/debugLog
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/compiler/Local#constructor
  local.tee $local
  i32.store $0 offset=24
  global.get $assembly/compiler/current
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/Compiler#get:locals
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  global.get $assembly/compiler/current
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/compiler/Compiler#get:localCount
  local.get $local
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<assembly/compiler/Local>#__set
  global.get $assembly/compiler/current
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  global.get $assembly/compiler/current
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/Compiler#get:localCount
  i32.const 1
  i32.add
  call $assembly/compiler/Compiler#set:localCount
  local.get $local
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/compiler/Local#set:depth
  local.get $local
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/compiler/Local#set:isCaptured
  local.get $type
  global.get $assembly/compiler/FunctionType.TYPE_FUNCTION
  i32.ne
  if
   local.get $local
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/Local#get:name
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 14784
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/scanner/Token#set:lexeme
  else
   local.get $local
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $assembly/compiler/Local#get:name
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/scanner/Token#set:lexeme
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/printLocals
  (local $i i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  i32.const 16032
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/index/debugLog
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   global.get $assembly/compiler/current
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/compiler/Compiler#get:localCount
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/compiler/Compiler#get:locals
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/compiler/Local>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $assembly/compiler/Local#get:name
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/scanner/Token#get:lexeme
    local.tee $1
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/compiler/current
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $assembly/compiler/Compiler#get:locals
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/compiler/Local>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/compiler/Local#get:depth
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $2
    i32.store $0 offset=24
    i32.const 16176
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 1
    local.get $1
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 16176
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 3
    local.get $2
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 16176
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 32
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/index/debugLog
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/addLocal (param $name i32)
  (local $local i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $assembly/compiler/current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/Compiler#get:localCount
  global.get $assembly/compiler/U8_COUNT
  i32.eq
  if
   i32.const 15936
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/compiler/error
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/compiler/Local#constructor
  local.tee $local
  i32.store $0 offset=4
  global.get $assembly/compiler/current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/compiler/Compiler#get:locals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/compiler/current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/compiler/Compiler#get:localCount
  local.get $local
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/array/Array<assembly/compiler/Local>#__set
  global.get $assembly/compiler/current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $assembly/compiler/current
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/compiler/Compiler#get:localCount
  i32.const 1
  i32.add
  call $assembly/compiler/Compiler#set:localCount
  local.get $local
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/compiler/Local#set:name
  local.get $local
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const -1
  call $assembly/compiler/Local#set:depth
  call $assembly/compiler/printLocals
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/declareVariable
  (local $name i32)
  (local $i i32)
  (local $local i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $assembly/compiler/current
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Parser#get:previous
  local.tee $name
  i32.store $0 offset=4
  global.get $assembly/compiler/current
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Compiler#get:localCount
  i32.const 1
  i32.sub
  local.set $i
  block $for-break0
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/compiler/current
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $3
     call $assembly/compiler/Compiler#get:locals
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     local.get $i
     call $~lib/array/Array<assembly/compiler/Local>#__get
     local.tee $local
     i32.store $0 offset=12
     local.get $local
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $assembly/compiler/Local#get:depth
     i32.const -1
     i32.ne
     if (result i32)
      local.get $local
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/compiler/Local#get:depth
      global.get $assembly/compiler/current
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/compiler/Compiler#get:scopeDepth
      i32.lt_s
     else
      i32.const 0
     end
     if
      br $for-break0
     end
     local.get $name
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     local.get $local
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=16
     local.get $3
     call $assembly/compiler/Local#get:name
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $3
     call $assembly/compiler/identifiersEqual
     if
      i32.const 15808
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/compiler/error
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
  end
  local.get $name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/addLocal
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/markInitialized
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/compiler/Compiler#get:locals
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $assembly/compiler/Compiler#get:localCount
  i32.const 1
  i32.sub
  call $~lib/array/Array<assembly/compiler/Local>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/Compiler#get:scopeDepth
  call $assembly/compiler/Local#set:depth
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/defineVariable (param $global i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/compiler/current
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 0
  i32.gt_s
  if
   call $assembly/compiler/markInitialized
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $assembly/chunk/OpCode.OP_DEFINE_GLOBAL
  local.get $global
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/ClassCompiler#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/ClassCompiler#set:enclosing
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/ClassCompiler#set:hasSuperclass
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/compiler/ClassCompiler#set:enclosing
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/compiler/beginScope
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 16400
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 1
  i32.add
  call $assembly/compiler/Compiler#set:scopeDepth
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/parseVariable (param $errorMessage i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  local.get $errorMessage
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/consume
  call $assembly/compiler/declareVariable
  global.get $assembly/compiler/current
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 0
  i32.gt_s
  if
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/Parser#get:previous
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/identifierConstant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/compiler/block
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  loop $while-continue|0
   global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
   call $assembly/compiler/check
   i32.eqz
   if (result i32)
    global.get $assembly/scanner/TokenType.TOKEN_EOF
    call $assembly/compiler/check
    i32.eqz
   else
    i32.const 0
   end
   if
    call $assembly/compiler/declaration
    br $while-continue|0
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
  i32.const 17040
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitReturn
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/Compiler#get:type
  global.get $assembly/compiler/FunctionType.TYPE_INITIALIZER
  i32.eq
  if
   global.get $assembly/chunk/OpCode.OP_GET_LOCAL
   i32.const 0
   call $assembly/compiler/emitBytes
  else
   global.get $assembly/chunk/OpCode.OP_NIL
   call $assembly/compiler/emitByte
  end
  global.get $assembly/chunk/OpCode.OP_RETURN
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String.__ne (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/compiler/endCompiler (result i32)
  (local $myFunction i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  call $assembly/compiler/emitReturn
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/current
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Compiler#get:function
  local.tee $myFunction
  i32.store $0 offset=4
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Parser#get:hadError
  i32.eqz
  if
   call $assembly/compiler/currentChunk
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $myFunction
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=24
   local.get $3
   call $assembly/object/ObjFunction#get:name
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $3
   call $assembly/object/ObjString#get:chars
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   i32.const 32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $~lib/string/String.__ne
   if (result i32)
    local.get $myFunction
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/object/ObjFunction#get:name
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $assembly/object/ObjString#get:chars
   else
    i32.const 4480
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.const 2
   global.set $~argumentsLength
   global.get $assembly/debug/disassembleChunk
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_none)
  end
  global.get $assembly/compiler/current
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Compiler#get:enclosing
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/compiler/Compiler#get:function
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/object/ObjFunction#get:name
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $assembly/object/ObjString#get:chars
   local.tee $1
   i32.store $0 offset=28
   i32.const 17216
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.const 1
   local.get $1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17216
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.const 32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/index/debugLog
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/compiler/current
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/compiler/Compiler#get:enclosing
   local.tee $2
   i32.store $0 offset=32
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 4160
    i32.const 13584
    i32.const 312
    i32.const 29
    call $~lib/builtins/abort
    unreachable
   end
   global.set $assembly/compiler/current
  else
   i32.const 17248
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/index/debugLog
  end
  local.get $myFunction
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/compiler/funCompile (param $type i32)
  (local $compiler i32)
  (local $paramConstant i32)
  (local $myFunction i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/compiler/Compiler#constructor
  local.tee $compiler
  i32.store $0
  local.get $compiler
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $type
  call $assembly/compiler/initCompiler
  call $assembly/compiler/beginScope
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  i32.const 16608
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/compiler/consume
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  call $assembly/compiler/check
  i32.eqz
  if
   loop $do-loop|0
    global.get $assembly/compiler/current
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $assembly/compiler/Compiler#get:function
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    global.get $assembly/compiler/current
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $assembly/compiler/Compiler#get:function
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $assembly/object/ObjFunction#get:arity
    i32.const 1
    i32.add
    call $assembly/object/ObjFunction#set:arity
    global.get $assembly/compiler/current
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $assembly/compiler/Compiler#get:function
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/object/ObjFunction#get:arity
    i32.const 255
    i32.and
    i32.const 255
    i32.gt_u
    if
     i32.const 16704
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $assembly/compiler/errorAtCurrent
    end
    i32.const 16800
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/compiler/parseVariable
    local.set $paramConstant
    local.get $paramConstant
    call $assembly/compiler/defineVariable
    global.get $assembly/scanner/TokenType.TOKEN_COMMA
    call $assembly/compiler/match
    br_if $do-loop|0
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 16864
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/compiler/consume
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_BRACE
  i32.const 16944
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/compiler/consume
  call $assembly/compiler/block
  global.get $~lib/memory/__stack_pointer
  call $assembly/compiler/endCompiler
  local.tee $myFunction
  i32.store $0 offset=16
  global.get $assembly/chunk/OpCode.OP_CLOSURE
  local.get $myFunction
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/value/OBJ_VAL
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/compiler/makeConstant
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $myFunction
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/object/ObjFunction#get:upvalueCount
   i32.const 255
   i32.and
   i32.lt_u
   if
    local.get $compiler
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $assembly/compiler/Compiler#get:upvalues
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/compiler/Upvalue>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/compiler/Upvalue#get:isLocal
    if
     i32.const 17344
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $assembly/index/debugLog
    else
     i32.const 17408
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $assembly/index/debugLog
    end
    i32.const 17488
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $compiler
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $assembly/compiler/Compiler#get:upvalues
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/compiler/Upvalue>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $assembly/compiler/Upvalue#get:index
    i32.const 10
    call $~lib/number/U8#toString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $~lib/string/String.__concat
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/index/debugLog
    local.get $compiler
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $assembly/compiler/Compiler#get:upvalues
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/compiler/Upvalue>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/compiler/Upvalue#get:isLocal
    if (result i32)
     i32.const 1
    else
     i32.const 0
    end
    call $assembly/compiler/emitByte
    local.get $compiler
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $assembly/compiler/Compiler#get:upvalues
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/compiler/Upvalue>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/compiler/Upvalue#get:index
    i32.const 255
    i32.and
    call $assembly/compiler/emitByte
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/method
  (local $constant i32)
  (local $type i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  i32.const 16544
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/consume
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/Parser#get:previous
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/compiler/identifierConstant
  local.set $constant
  global.get $assembly/compiler/FunctionType.TYPE_METHOD
  local.set $type
  global.get $assembly/compiler/parser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/compiler/Parser#get:previous
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/scanner/Token#get:lexeme
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 15168
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/string/String.__eq
  if
   global.get $assembly/compiler/FunctionType.TYPE_INITIALIZER
   local.set $type
  end
  local.get $type
  call $assembly/compiler/funCompile
  global.get $assembly/chunk/OpCode.OP_METHOD
  local.get $constant
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/endScope
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/compiler/Compiler#get:scopeDepth
  i32.const 1
  i32.sub
  call $assembly/compiler/Compiler#set:scopeDepth
  i32.const 17632
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  loop $while-continue|0
   global.get $assembly/compiler/current
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/compiler/Compiler#get:localCount
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $assembly/compiler/Compiler#get:locals
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $assembly/compiler/Compiler#get:localCount
    i32.const 1
    i32.sub
    call $~lib/array/Array<assembly/compiler/Local>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/compiler/Local#get:depth
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/compiler/Compiler#get:scopeDepth
    i32.gt_s
   else
    i32.const 0
   end
   if
    i32.const 17680
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/index/debugLog
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $assembly/compiler/Compiler#get:locals
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $assembly/compiler/Compiler#get:localCount
    i32.const 1
    i32.sub
    call $~lib/array/Array<assembly/compiler/Local>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/compiler/Local#get:isCaptured
    if
     global.get $assembly/chunk/OpCode.OP_CLOSE_UPVALUE
     call $assembly/compiler/emitByte
    else
     global.get $assembly/chunk/OpCode.OP_POP
     call $assembly/compiler/emitByte
    end
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    global.get $assembly/compiler/current
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $assembly/compiler/Compiler#get:localCount
    i32.const 1
    i32.sub
    call $assembly/compiler/Compiler#set:localCount
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/classDeclaration
  (local $className i32)
  (local $nameConstant i32)
  (local $classCompiler i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
  i32.const 15744
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/consume
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/parser
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/Parser#get:previous
  local.tee $className
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/Parser#get:previous
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/identifierConstant
  local.set $nameConstant
  call $assembly/compiler/declareVariable
  global.get $assembly/chunk/OpCode.OP_CLASS
  local.get $nameConstant
  i32.const 255
  i32.and
  call $assembly/compiler/emitBytes
  local.get $nameConstant
  call $assembly/compiler/defineVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/compiler/ClassCompiler#constructor
  local.tee $classCompiler
  i32.store $0 offset=12
  local.get $classCompiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  global.get $assembly/compiler/currentClass
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/ClassCompiler#set:enclosing
  local.get $classCompiler
  global.set $assembly/compiler/currentClass
  global.get $assembly/scanner/TokenType.TOKEN_LESS
  call $assembly/compiler/match
  if
   global.get $assembly/scanner/TokenType.TOKEN_IDENTIFIER
   i32.const 16224
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/consume
   i32.const 0
   call $assembly/compiler/variable
   local.get $className
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   global.get $assembly/compiler/parser
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/compiler/Parser#get:previous
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/identifiersEqual
   if
    i32.const 16304
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/compiler/error
   end
   call $assembly/compiler/beginScope
   i32.const 14816
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/syntheticToken
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/compiler/addLocal
   i32.const 0
   call $assembly/compiler/defineVariable
   local.get $className
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   call $assembly/compiler/namedVariable
   global.get $assembly/chunk/OpCode.OP_INHERIT
   call $assembly/compiler/emitByte
   local.get $classCompiler
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 1
   call $assembly/compiler/ClassCompiler#set:hasSuperclass
  end
  local.get $className
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/compiler/namedVariable
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_BRACE
  i32.const 16464
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/consume
  loop $while-continue|0
   global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
   call $assembly/compiler/check
   i32.eqz
   if (result i32)
    global.get $assembly/scanner/TokenType.TOKEN_EOF
    call $assembly/compiler/check
    i32.eqz
   else
    i32.const 0
   end
   if
    call $assembly/compiler/method
    br $while-continue|0
   end
  end
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_BRACE
  i32.const 17552
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/consume
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  local.get $classCompiler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/ClassCompiler#get:hasSuperclass
  if
   call $assembly/compiler/endScope
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/compiler/currentClass
  local.tee $3
  i32.store $0 offset=20
  local.get $3
  if (result i32)
   local.get $3
  else
   i32.const 4160
   i32.const 13584
   i32.const 879
   i32.const 36
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/compiler/ClassCompiler#get:enclosing
  global.set $assembly/compiler/currentClass
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/funDeclaration
  (local $global i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 17776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/parseVariable
  local.set $global
  call $assembly/compiler/markInitialized
  global.get $assembly/compiler/FunctionType.TYPE_FUNCTION
  call $assembly/compiler/funCompile
  local.get $global
  call $assembly/compiler/defineVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/varDeclaration
  (local $global i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 17840
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/compiler/parseVariable
  local.set $global
  global.get $assembly/scanner/TokenType.TOKEN_EQUAL
  call $assembly/compiler/match
  if
   call $assembly/compiler/expression
  else
   global.get $assembly/chunk/OpCode.OP_NIL
   call $assembly/compiler/emitByte
  end
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  i32.const 17904
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/compiler/consume
  local.get $global
  call $assembly/compiler/defineVariable
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/printStatement
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  call $assembly/compiler/expression
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  i32.const 18000
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/consume
  global.get $assembly/chunk/OpCode.OP_PRINT
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/expressionStatement
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  call $assembly/compiler/expression
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  i32.const 18160
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/consume
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/emitLoop (param $loopStart i32)
  (local $offset i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/chunk/OpCode.OP_LOOP
  call $assembly/compiler/emitByte
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/chunk/Chunk#get:count
  local.get $loopStart
  i32.sub
  i32.const 2
  i32.add
  local.set $offset
  local.get $offset
  i32.const 65535
  i32.and
  global.get $~lib/builtins/u16.MAX_VALUE
  i32.gt_u
  if
   i32.const 18416
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/compiler/error
  end
  local.get $offset
  i32.const 65535
  i32.and
  i32.const 8
  i32.const 15
  i32.and
  i32.shr_u
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  local.get $offset
  i32.const 255
  i32.and
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/forStatement
  (local $loopStart i32)
  (local $exitJump i32)
  (local $bodyJump i32)
  (local $incrementStart i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/compiler/beginScope
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  i32.const 18080
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/compiler/consume
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  call $assembly/compiler/match
  if
   nop
  else
   global.get $assembly/scanner/TokenType.TOKEN_VAR
   call $assembly/compiler/match
   if
    call $assembly/compiler/varDeclaration
   else
    call $assembly/compiler/expressionStatement
   end
  end
  call $assembly/compiler/currentChunk
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/chunk/Chunk#get:count
  local.set $loopStart
  i32.const -1
  local.set $exitJump
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  call $assembly/compiler/match
  i32.eqz
  if
   call $assembly/compiler/expression
   global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
   i32.const 18240
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/consume
   global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
   call $assembly/compiler/emitJump
   local.set $exitJump
   global.get $assembly/chunk/OpCode.OP_POP
   call $assembly/compiler/emitByte
  end
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  call $assembly/compiler/match
  i32.eqz
  if
   global.get $assembly/chunk/OpCode.OP_JUMP
   call $assembly/compiler/emitJump
   local.set $bodyJump
   call $assembly/compiler/currentChunk
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/chunk/Chunk#get:count
   local.set $incrementStart
   call $assembly/compiler/expression
   global.get $assembly/chunk/OpCode.OP_POP
   call $assembly/compiler/emitByte
   global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
   i32.const 18336
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/compiler/consume
   local.get $loopStart
   call $assembly/compiler/emitLoop
   local.get $incrementStart
   local.set $loopStart
   local.get $bodyJump
   call $assembly/compiler/patchJump
  end
  call $assembly/compiler/statement
  local.get $loopStart
  call $assembly/compiler/emitLoop
  local.get $exitJump
  i32.const -1
  i32.ne
  if
   local.get $exitJump
   call $assembly/compiler/patchJump
   global.get $assembly/chunk/OpCode.OP_POP
   call $assembly/compiler/emitByte
  end
  call $assembly/compiler/endScope
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/ifStatement
  (local $thenJump i32)
  (local $elseJump i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  i32.const 18480
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/consume
  call $assembly/compiler/expression
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 18544
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/compiler/consume
  global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
  call $assembly/compiler/emitJump
  local.set $thenJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  call $assembly/compiler/statement
  global.get $assembly/chunk/OpCode.OP_JUMP
  call $assembly/compiler/emitJump
  local.set $elseJump
  local.get $thenJump
  call $assembly/compiler/patchJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  global.get $assembly/scanner/TokenType.TOKEN_ELSE
  call $assembly/compiler/match
  if
   call $assembly/compiler/statement
  end
  local.get $elseJump
  call $assembly/compiler/patchJump
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/returnStatement
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/current
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/Compiler#get:type
  global.get $assembly/compiler/FunctionType.TYPE_SCRIPT
  i32.eq
  if
   i32.const 18624
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/compiler/error
  end
  global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
  call $assembly/compiler/match
  if
   call $assembly/compiler/emitReturn
  else
   global.get $assembly/compiler/current
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/compiler/Compiler#get:type
   global.get $assembly/compiler/FunctionType.TYPE_INITIALIZER
   i32.eq
   if
    i32.const 18720
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/compiler/error
   end
   call $assembly/compiler/expression
   global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
   i32.const 18832
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/compiler/consume
   global.get $assembly/chunk/OpCode.OP_RETURN
   call $assembly/compiler/emitByte
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/whileStatement
  (local $loopStart i32)
  (local $exitJump i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $assembly/compiler/currentChunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/chunk/Chunk#get:count
  local.set $loopStart
  global.get $assembly/scanner/TokenType.TOKEN_LEFT_PAREN
  i32.const 18912
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/compiler/consume
  call $assembly/compiler/expression
  global.get $assembly/scanner/TokenType.TOKEN_RIGHT_PAREN
  i32.const 18544
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/compiler/consume
  global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
  call $assembly/compiler/emitJump
  local.set $exitJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  call $assembly/compiler/statement
  local.get $loopStart
  call $assembly/compiler/emitLoop
  local.get $exitJump
  call $assembly/compiler/patchJump
  global.get $assembly/chunk/OpCode.OP_POP
  call $assembly/compiler/emitByte
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/synchronize
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/compiler/parser
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $assembly/compiler/Parser#set:panicMode
  loop $while-continue|0
   global.get $assembly/compiler/parser
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $assembly/compiler/Parser#get:current
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/scanner/Token#get:type
   global.get $assembly/scanner/TokenType.TOKEN_EOF
   i32.ne
   if
    global.get $assembly/compiler/parser
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $assembly/compiler/Parser#get:previous
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $assembly/scanner/Token#get:type
    global.get $assembly/scanner/TokenType.TOKEN_SEMICOLON
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    block $case8|1
     block $case7|1
      block $case6|1
       block $case5|1
        block $case4|1
         block $case3|1
          block $case2|1
           block $case1|1
            block $case0|1
             global.get $assembly/compiler/parser
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store $0 offset=4
             local.get $1
             call $assembly/compiler/Parser#get:current
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store $0
             local.get $1
             call $assembly/scanner/Token#get:type
             local.set $0
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_CLASS
             i32.eq
             br_if $case0|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_FUN
             i32.eq
             br_if $case1|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_VAR
             i32.eq
             br_if $case2|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_FOR
             i32.eq
             br_if $case3|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_IF
             i32.eq
             br_if $case4|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_WHILE
             i32.eq
             br_if $case5|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_PRINT
             i32.eq
             br_if $case6|1
             local.get $0
             global.get $assembly/scanner/TokenType.TOKEN_RETURN
             i32.eq
             br_if $case7|1
             br $case8|1
            end
           end
          end
         end
        end
       end
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    call $assembly/compiler/advance
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/declaration
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/scanner/TokenType.TOKEN_CLASS
  call $assembly/compiler/match
  if
   call $assembly/compiler/classDeclaration
  else
   global.get $assembly/scanner/TokenType.TOKEN_FUN
   call $assembly/compiler/match
   if
    call $assembly/compiler/funDeclaration
   else
    global.get $assembly/scanner/TokenType.TOKEN_VAR
    call $assembly/compiler/match
    if
     call $assembly/compiler/varDeclaration
    else
     call $assembly/compiler/statement
    end
   end
  end
  global.get $assembly/compiler/parser
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/compiler/Parser#get:panicMode
  if
   call $assembly/compiler/synchronize
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/compiler/compile (param $source i32) (result i32)
  (local $compiler i32)
  (local $myFunction i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $source
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/scanner/initScanner
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/compiler/Compiler#constructor
  local.tee $compiler
  i32.store $0 offset=4
  local.get $compiler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  global.get $assembly/compiler/FunctionType.TYPE_SCRIPT
  call $assembly/compiler/initCompiler
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $assembly/compiler/Parser#set:hadError
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $assembly/compiler/Parser#set:panicMode
  call $assembly/compiler/advance
  loop $while-continue|0
   global.get $assembly/scanner/TokenType.TOKEN_EOF
   call $assembly/compiler/match
   i32.eqz
   if
    call $assembly/compiler/declaration
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  call $assembly/compiler/endCompiler
  local.tee $myFunction
  i32.store $0 offset=8
  global.get $assembly/compiler/parser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/Parser#get:hadError
  if (result i32)
   i32.const 0
  else
   local.get $myFunction
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#get:length
  i32.ge_u
  if
   i32.const 256
   i32.const 544
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 544
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/vm/runtimeError (param $format i32)
  (local $errorStr i32)
  (local $i i32)
  (local $frame i32)
  (local $myfunction i32)
  (local $instructionIndex i32)
  (local $line i32)
  (local $7 i32)
  (local $fnName i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  local.tee $errorStr
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $errorStr
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  local.get $format
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=16
  local.get $9
  call $~lib/string/String.__concat
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 10528
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/string/String.__concat
  local.tee $errorStr
  i32.store $0
  global.get $assembly/vm/vm
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/vm/VM#get:frameCount
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/vm/vm
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $assembly/vm/VM#get:frames
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    local.get $i
    call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
    local.tee $frame
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $frame
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $assembly/vm/CallFrame#get:closure
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    call $assembly/object/ObjClosure#get:func
    local.tee $myfunction
    i32.store $0 offset=24
    local.get $frame
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    call $assembly/vm/CallFrame#get:ip
    i32.const 1
    i32.sub
    local.set $instructionIndex
    local.get $myfunction
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $assembly/object/ObjFunction#get:chunk
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $assembly/chunk/Chunk#get:lines
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    local.get $instructionIndex
    call $~lib/typedarray/Uint16Array#__get
    local.set $line
    global.get $~lib/memory/__stack_pointer
    local.get $errorStr
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    global.get $~lib/memory/__stack_pointer
    local.get $line
    i32.const 10
    call $~lib/number/U16#toString
    local.tee $7
    i32.store $0 offset=28
    i32.const 19184
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    i32.const 1
    local.get $7
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=32
    local.get $9
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 19184
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    i32.const 32
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=16
    local.get $9
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/string/String.__concat
    local.tee $errorStr
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    local.tee $fnName
    i32.store $0 offset=36
    local.get $myfunction
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=16
    local.get $9
    call $assembly/object/ObjFunction#get:name
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $assembly/object/ObjString#get:chars
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    i32.const 32
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 19216
     local.tee $fnName
     i32.store $0 offset=36
    else
     global.get $~lib/memory/__stack_pointer
     local.get $myfunction
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=16
     local.get $9
     call $assembly/object/ObjFunction#get:name
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     call $assembly/object/ObjString#get:chars
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     i32.const 10528
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $fnName
     i32.store $0 offset=36
    end
    global.get $~lib/memory/__stack_pointer
    local.get $errorStr
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    local.get $fnName
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/string/String.__concat
    local.tee $errorStr
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 19264
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/index/printout
  local.get $errorStr
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/index/printout
  local.get $errorStr
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/index/debugLog
  call $assembly/vm/resetStack
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/call (param $closure i32) (param $argCount i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $frame i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $argCount
  i32.const 255
  i32.and
  local.get $closure
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/object/ObjClosure#get:func
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/object/ObjFunction#get:arity
  i32.const 255
  i32.and
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $closure
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/object/ObjClosure#get:func
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/object/ObjFunction#get:arity
   i32.const 10
   call $~lib/number/U8#toString
   local.tee $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $argCount
   i32.const 10
   call $~lib/number/U8#toString
   local.tee $3
   i32.store $0 offset=16
   i32.const 19104
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 1
   local.get $2
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=20
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 19104
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 3
   local.get $3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=20
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 19104
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 32
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $assembly/vm/runtimeError
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $assembly/vm/vm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/vm/VM#get:frameCount
  global.get $assembly/vm/FRAMES_MAX
  i32.eq
  if
   i32.const 19312
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $assembly/vm/runtimeError
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/vm/VM#get:frames
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  global.get $assembly/vm/vm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  global.get $assembly/vm/vm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/vm/VM#get:frameCount
  local.tee $4
  i32.const 1
  i32.add
  call $assembly/vm/VM#set:frameCount
  local.get $4
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
  local.tee $frame
  i32.store $0 offset=24
  local.get $frame
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $closure
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/vm/CallFrame#set:closure
  local.get $frame
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 0
  call $assembly/vm/CallFrame#set:ip
  local.get $frame
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  global.get $assembly/vm/vm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/vm/VM#get:stackTop
  local.get $argCount
  i32.const 255
  i32.and
  i32.sub
  i32.const 1
  i32.sub
  call $assembly/vm/CallFrame#set:slotsIndex
  i32.const 1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/vm/run~anonymous|0 (param $myFrame i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/vm/CallFrame#get:closure
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjClosure#get:func
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjFunction#get:chunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/CallFrame#get:ip
  local.tee $1
  i32.const 1
  i32.add
  call $assembly/vm/CallFrame#set:ip
  local.get $1
  call $~lib/staticarray/StaticArray<u8>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/vm/run~anonymous|1 (param $myFrame i32) (result i32)
  (local $valueIndex i32)
  (local $constant i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $myFrame
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 1
  global.set $~argumentsLength
  i32.const 19376
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.set $valueIndex
  global.get $~lib/memory/__stack_pointer
  local.get $myFrame
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/vm/CallFrame#get:closure
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/object/ObjClosure#get:func
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/object/ObjFunction#get:chunk
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/chunk/Chunk#get:constants
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/value/ValueArray#get:values
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $valueIndex
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.tee $constant
  i32.store $0 offset=24
  local.get $constant
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/vm/run~anonymous|2 (param $myFrame i32) (result i32)
  (local $short i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/vm/CallFrame#get:ip
  i32.const 2
  i32.add
  call $assembly/vm/CallFrame#set:ip
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/vm/CallFrame#get:closure
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjClosure#get:func
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjFunction#get:chunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/vm/CallFrame#get:ip
  i32.const 2
  i32.sub
  call $~lib/staticarray/StaticArray<u8>#__get
  i32.const 8
  i32.const 7
  i32.and
  i32.shl
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/vm/CallFrame#get:closure
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjClosure#get:func
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjFunction#get:chunk
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/chunk/Chunk#get:code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $myFrame
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/vm/CallFrame#get:ip
  i32.const 1
  i32.sub
  call $~lib/staticarray/StaticArray<u8>#__get
  i32.or
  i32.const 255
  i32.and
  local.set $short
  local.get $short
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/vm/run~anonymous|3 (param $myFrame i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $myFrame
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  global.set $~argumentsLength
  i32.const 19408
  i32.load $0
  call_indirect $0 (type $i32_=>_i32)
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/object/AS_STRING
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/vm/peek (param $distance i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/vm/VM#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/vm/vm
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $assembly/vm/VM#get:stackTop
  i32.const 1
  i32.sub
  local.get $distance
  i32.sub
  call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/value/IS_NUMBER (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:type
  global.get $assembly/value/ValueType.VAL_NUMBER
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/value/AS_NUMBER (param $value i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:number
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/value/BOOL_VAL (param $value i32) (result i32)
  (local $val i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/value/Value#constructor
  local.tee $val
  i32.store $0
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/value/ValueType.VAL_BOOL
  call $assembly/value/Value#set:type
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $value
  call $assembly/value/Value#set:boolean
  local.get $val
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/vm/run~anonymous|4 (param $operatorFn i32) (result i32)
  (local $b f64)
  (local $a f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  call $assembly/vm/peek
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/IS_NUMBER
  i32.eqz
  if (result i32)
   i32.const 1
  else
   i32.const 1
   call $assembly/vm/peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/IS_NUMBER
   i32.eqz
  end
  if
   i32.const 19504
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/vm/runtimeError
   global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $b
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $a
  local.get $a
  local.get $b
  i32.const 2
  global.set $~argumentsLength
  local.get $operatorFn
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  call $assembly/value/BOOL_VAL
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/vm/push
  global.get $assembly/vm/InterpretResult.INTERPRET_OK
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/vm/run~anonymous|5 (param $operatorFn i32) (result i32)
  (local $b f64)
  (local $a f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  call $assembly/vm/peek
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/IS_NUMBER
  i32.eqz
  if (result i32)
   i32.const 1
  else
   i32.const 1
   call $assembly/vm/peek
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/IS_NUMBER
   i32.eqz
  end
  if
   i32.const 19504
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/vm/runtimeError
   global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $b
  call $assembly/vm/pop
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/AS_NUMBER
  local.set $a
  local.get $a
  local.get $b
  i32.const 2
  global.set $~argumentsLength
  local.get $operatorFn
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_f64)
  call $assembly/value/NUMBER_VAL
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/vm/push
  global.get $assembly/vm/InterpretResult.INTERPRET_OK
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<assembly/object/ObjString>
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 19872
   i32.const 19936
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/table/tableGet (param $map i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $map
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
  if
   local.get $map
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $key
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  else
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  unreachable
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#delete (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $halfBucketsMask i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/util/hash/HASH<assembly/object/ObjString>
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $entry
  local.get $entry
  call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext
  i32.const 1
  i32.or
  call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#set:taggedNext
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
  i32.const 1
  i32.sub
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#set:entriesCount
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:bucketsMask
  i32.const 1
  i32.shr_u
  local.set $halfBucketsMask
  local.get $halfBucketsMask
  i32.const 1
  i32.add
  i32.const 4
  local.tee $4
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_u
  select
  i32.ge_u
  if (result i32)
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCount
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesCapacity
   i32.const 3
   i32.mul
   i32.const 4
   i32.div_s
   i32.lt_s
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $halfBucketsMask
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#rehash
  end
  i32.const 1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/table/tableDelete (param $map i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $map
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#has
  if
   local.get $map
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $key
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#delete
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  else
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  unreachable
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:length_
  i32.ge_u
  if
   i32.const 256
   i32.const 4752
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 640
   i32.const 4752
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/value/IS_OBJ (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:type
  global.get $assembly/value/ValueType.VAL_OBJ
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/isObjectType (param $value i32) (param $type i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/value/IS_OBJ
  if (result i32)
   local.get $value
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $assembly/value/AS_OBJ
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/object/Obj#get:type
   local.get $type
   i32.eq
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/object/IS_INSTANCE (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/object/ObjType.OBJ_INSTANCE
  call $assembly/object/isObjectType
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/ObjBoundMethod#constructor (param $this i32) (param $receiver i32) (param $method i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjBoundMethod#set:receiver
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/object/ObjBoundMethod#set:method
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  global.get $assembly/object/ObjType.OBJ_BOUND_METHOD
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $receiver
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjBoundMethod#set:receiver
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $method
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjBoundMethod#set:method
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/vm/bindMethod (param $klass i32) (param $name i32) (result i32)
  (local $method i32)
  (local $3 i32)
  (local $bound i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $klass
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/object/ObjClass#get:methods
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $name
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/table/tableGet
  local.tee $method
  i32.store $0 offset=12
  local.get $method
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $name
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/object/ObjString#get:chars
   local.tee $3
   i32.store $0 offset=16
   i32.const 20400
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 20400
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 32
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/vm/runtimeError
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $assembly/vm/peek
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $method
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/object/AS_CLOSURE
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/object/ObjBoundMethod#constructor
  local.tee $bound
  i32.store $0 offset=24
  call $assembly/vm/pop
  drop
  local.get $bound
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/value/OBJ_VAL
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/vm/push
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/value/AS_BOOL (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:boolean
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/value/valuesEqual (param $a i32) (param $b i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $a
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/Value#get:type
  local.get $b
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/value/Value#get:type
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  block $case4|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $a
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       local.get $3
       call $assembly/value/Value#get:type
       local.set $2
       local.get $2
       global.get $assembly/value/ValueType.VAL_BOOL
       i32.eq
       br_if $case0|0
       local.get $2
       global.get $assembly/value/ValueType.VAL_NIL
       i32.eq
       br_if $case1|0
       local.get $2
       global.get $assembly/value/ValueType.VAL_NUMBER
       i32.eq
       br_if $case2|0
       local.get $2
       global.get $assembly/value/ValueType.VAL_OBJ
       i32.eq
       br_if $case3|0
       br $case4|0
      end
      local.get $a
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/value/AS_BOOL
      i32.const 0
      i32.ne
      local.get $b
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $assembly/value/AS_BOOL
      i32.const 0
      i32.ne
      i32.eq
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      return
     end
     i32.const 1
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $a
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/value/AS_NUMBER
    local.get $b
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/value/AS_NUMBER
    f64.eq
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   local.get $a
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/AS_OBJ
   local.get $b
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/value/AS_OBJ
   i32.eq
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/object/IS_STRING (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/object/ObjType.OBJ_STRING
  call $assembly/object/isObjectType
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/takeString (param $myString i32) (result i32)
  (local $interned i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/vm/VM#get:strings
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $myString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/table/tableFindString
  local.tee $interned
  i32.store $0 offset=12
  local.get $interned
  i32.const 0
  i32.ne
  if
   i32.const 20576
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/index/debugLog
   local.get $interned
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $myString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/object/allocateString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/vm/concatenate
  (local $b i32)
  (local $a i32)
  (local $chars i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  call $assembly/vm/pop
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/object/AS_STRING
  local.tee $b
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  call $assembly/vm/pop
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/object/AS_STRING
  local.tee $a
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $a
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/object/ObjString#get:chars
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $b
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/object/ObjString#get:chars
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/string/String#concat
  local.tee $chars
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $chars
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/object/takeString
  local.tee $result
  i32.store $0 offset=24
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/value/OBJ_VAL
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/vm/push
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/value/IS_NIL (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:type
  global.get $assembly/value/ValueType.VAL_NIL
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/value/IS_BOOL (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/Value#get:type
  global.get $assembly/value/ValueType.VAL_BOOL
  i32.eq
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/vm/isFalsey (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/value/IS_NIL
  if (result i32)
   i32.const 1
  else
   local.get $value
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/value/IS_BOOL
   if (result i32)
    local.get $value
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $assembly/value/AS_BOOL
    i32.eqz
   else
    i32.const 0
   end
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/object/ObjInstance#constructor (param $this i32) (param $myKlass i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/object/ObjInstance#set:klass
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/object/ObjInstance#set:fields
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/object/ObjType.OBJ_INSTANCE
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $myKlass
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjInstance#set:klass
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/table/initTable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjInstance#set:fields
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/object/AS_NATIVE (param $value i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/value/AS_OBJ
  local.tee $1
  i32.store $0 offset=8
  local.get $1
  call $~instanceof|assembly/object/ObjNative
  if (result i32)
   local.get $1
  else
   i32.const 4352
   i32.const 4416
   i32.const 190
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/object/ObjNative#get:natFunction
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#slice<~lib/array/Array<assembly/value/Value>> (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $length i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $sourceStart i32)
  (local $size i32)
  (local $out i32)
  (local $outStart i32)
  (local $off i32)
  (local $ref i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0
  local.get $20
  call $~lib/staticarray/StaticArray<assembly/value/Value>#get:length
  local.set $length
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $length
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $length
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $length
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $length
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $length
  local.get $this
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $sourceStart
  local.get $length
  i32.const 2
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $out
  i32.store $0 offset=4
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 2
  i32.const 49
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0
  local.get $20
  call $~lib/array/Array<assembly/value/Value>#get:dataStart
  local.set $outStart
  i32.const 1
  drop
  i32.const 0
  local.set $off
  loop $while-continue|0
   local.get $off
   local.get $size
   i32.lt_u
   if
    local.get $sourceStart
    local.get $off
    i32.add
    i32.load $0
    local.set $ref
    local.get $outStart
    local.get $off
    i32.add
    local.get $ref
    i32.store $0
    local.get $out
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $off
    i32.const 4
    i32.add
    local.set $off
    br $while-continue|0
   end
  end
  local.get $out
  local.set $20
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $20
  return
 )
 (func $assembly/vm/callValue (param $callee i32) (param $argCount i32) (result i32)
  (local $2 i32)
  (local $bound i32)
  (local $klass i32)
  (local $initializer i32)
  (local $6 i32)
  (local $native i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $callee
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/value/IS_OBJ
  if
   block $break|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $callee
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         call $assembly/object/OBJ_TYPE
         local.set $2
         local.get $2
         global.get $assembly/object/ObjType.OBJ_BOUND_METHOD
         i32.eq
         br_if $case0|0
         local.get $2
         global.get $assembly/object/ObjType.OBJ_CLASS
         i32.eq
         br_if $case1|0
         local.get $2
         global.get $assembly/object/ObjType.OBJ_CLOSURE
         i32.eq
         br_if $case2|0
         local.get $2
         global.get $assembly/object/ObjType.OBJ_NATIVE
         i32.eq
         br_if $case3|0
         br $case4|0
        end
        global.get $~lib/memory/__stack_pointer
        local.get $callee
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        call $assembly/object/AS_BOUND_METHOD
        local.tee $bound
        i32.store $0 offset=4
        global.get $assembly/vm/vm
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=8
        local.get $9
        call $assembly/vm/VM#get:stack
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        global.get $assembly/vm/vm
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=8
        local.get $9
        call $assembly/vm/VM#get:stackTop
        local.get $argCount
        i32.const 255
        i32.and
        i32.sub
        i32.const 1
        i32.sub
        local.get $bound
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=8
        local.get $9
        call $assembly/object/ObjBoundMethod#get:receiver
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=8
        local.get $9
        call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
        local.get $bound
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        call $assembly/object/ObjBoundMethod#get:method
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        local.get $argCount
        call $assembly/vm/call
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 44
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       end
       global.get $~lib/memory/__stack_pointer
       local.get $callee
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       call $assembly/object/AS_CLASS
       local.tee $klass
       i32.store $0 offset=16
       global.get $assembly/vm/vm
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/vm/VM#get:stack
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       global.get $assembly/vm/vm
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/vm/VM#get:stackTop
       local.get $argCount
       i32.const 255
       i32.and
       i32.sub
       i32.const 1
       i32.sub
       i32.const 0
       local.get $klass
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=20
       local.get $9
       call $assembly/object/ObjInstance#constructor
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/value/OBJ_VAL
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $klass
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/object/ObjClass#get:methods
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       global.get $assembly/vm/vm
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/vm/VM#get:initString
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=12
       local.get $9
       call $assembly/table/tableGet
       local.tee $initializer
       i32.store $0 offset=24
       local.get $initializer
       i32.const 0
       i32.ne
       if
        local.get $initializer
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        call $assembly/object/AS_CLOSURE
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        local.get $argCount
        call $assembly/vm/call
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 44
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       else
        local.get $argCount
        i32.const 255
        i32.and
        i32.const 0
        i32.ne
        if
         global.get $~lib/memory/__stack_pointer
         local.get $argCount
         i32.const 10
         call $~lib/number/U8#toString
         local.tee $6
         i32.store $0 offset=28
         i32.const 21040
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=12
         local.get $9
         i32.const 1
         local.get $6
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=32
         local.get $9
         call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
         i32.const 21040
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=12
         local.get $9
         i32.const 32
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=8
         local.get $9
         call $~lib/staticarray/StaticArray<~lib/string/String>#join
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         call $assembly/vm/runtimeError
         i32.const 0
         local.set $9
         global.get $~lib/memory/__stack_pointer
         i32.const 44
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $9
         return
        end
       end
       i32.const 1
       local.set $9
       global.get $~lib/memory/__stack_pointer
       i32.const 44
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $9
       return
      end
      local.get $callee
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $9
      call $assembly/object/AS_CLOSURE
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      local.get $argCount
      call $assembly/vm/call
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 44
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $callee
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $assembly/object/AS_NATIVE
     local.tee $native
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/vm/vm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $assembly/vm/VM#get:stack
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     global.get $assembly/vm/vm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $assembly/vm/VM#get:stackTop
     local.get $argCount
     i32.const 255
     i32.and
     i32.sub
     global.get $assembly/vm/vm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $assembly/vm/VM#get:stackTop
     i32.const 1
     i32.sub
     call $~lib/staticarray/StaticArray<assembly/value/Value>#slice<~lib/array/Array<assembly/value/Value>>
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     i32.const 1
     global.set $~argumentsLength
     local.get $native
     i32.load $0
     call_indirect $0 (type $i32_=>_i32)
     local.tee $result
     i32.store $0 offset=40
     global.get $assembly/vm/vm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     global.get $assembly/vm/vm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     call $assembly/vm/VM#get:stackTop
     local.get $argCount
     i32.const 1
     i32.add
     i32.const 255
     i32.and
     i32.sub
     call $assembly/vm/VM#set:stackTop
     local.get $result
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $assembly/vm/push
     i32.const 1
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 44
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $9
     return
    end
    br $break|0
   end
  end
  i32.const 21072
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/vm/runtimeError
  i32.const 0
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/vm/invokeFromClass (param $klass i32) (param $name i32) (param $argCount i32) (result i32)
  (local $method i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $klass
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/object/ObjClass#get:methods
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $name
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/table/tableGet
  local.tee $method
  i32.store $0 offset=12
  local.get $method
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $name
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/object/ObjString#get:chars
   local.tee $4
   i32.store $0 offset=16
   i32.const 21248
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 1
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21248
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 32
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/vm/runtimeError
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $method
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/object/AS_CLOSURE
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $argCount
  call $assembly/vm/call
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/vm/invoke (param $name i32) (param $argCount i32) (result i32)
  (local $receiver i32)
  (local $instance i32)
  (local $value i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $argCount
  i32.const 255
  i32.and
  call $assembly/vm/peek
  local.tee $receiver
  i32.store $0
  local.get $receiver
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/object/IS_INSTANCE
  i32.eqz
  if
   i32.const 21168
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/vm/runtimeError
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $receiver
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/object/AS_INSTANCE
  local.tee $instance
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $instance
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/object/ObjInstance#get:fields
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $name
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/table/tableGet
  local.tee $value
  i32.store $0 offset=20
  local.get $value
  i32.const 0
  i32.ne
  if
   global.get $assembly/vm/vm
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/vm/VM#get:stack
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   global.get $assembly/vm/vm
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/vm/VM#get:stackTop
   local.get $argCount
   i32.const 255
   i32.and
   i32.sub
   i32.const 1
   i32.sub
   local.get $value
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
   local.get $value
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   local.get $argCount
   call $assembly/vm/callValue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $instance
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/object/ObjInstance#get:klass
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $name
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  local.get $argCount
  call $assembly/vm/invokeFromClass
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/object/newUpvalue (param $slot i32) (param $vmSlotIndex i32) (result i32)
  (local $2 i32)
  (local $upvalue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/object/ObjType.OBJ_UPVALUE
  call $assembly/object/ALLOCATE_OBJ
  local.tee $2
  i32.store $0
  local.get $2
  call $~instanceof|assembly/object/ObjUpvalue
  if (result i32)
   local.get $2
  else
   i32.const 4352
   i32.const 4416
   i32.const 226
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $upvalue
  i32.store $0 offset=4
  local.get $upvalue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 0
  call $assembly/object/ObjUpvalue#set:closed
  local.get $upvalue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $slot
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/object/ObjUpvalue#set:locationValue
  local.get $upvalue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $vmSlotIndex
  call $assembly/object/ObjUpvalue#set:locationIndex
  local.get $upvalue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/vm/captureUpvalue (param $local i32) (param $vmLocalIndex i32) (result i32)
  (local $prevUpvalue i32)
  (local $upvalue i32)
  (local $createdUpvalue i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 0
  local.set $prevUpvalue
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/vm/VM#get:openUpvalues
  local.tee $upvalue
  i32.store $0 offset=4
  loop $while-continue|0
   local.get $upvalue
   i32.const 0
   i32.ne
   if (result i32)
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/object/ObjUpvalue#get:locationIndex
    local.get $vmLocalIndex
    i32.gt_s
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $upvalue
    local.tee $prevUpvalue
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/object/ObjUpvalue#get:nextUpvalue
    local.tee $upvalue
    i32.store $0 offset=4
    br $while-continue|0
   end
  end
  local.get $upvalue
  i32.const 0
  i32.ne
  if (result i32)
   local.get $upvalue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/object/ObjUpvalue#get:locationIndex
   local.get $vmLocalIndex
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $upvalue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $local
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $vmLocalIndex
  call $assembly/object/newUpvalue
  local.tee $createdUpvalue
  i32.store $0 offset=12
  local.get $createdUpvalue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $upvalue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/object/ObjUpvalue#set:nextUpvalue
  local.get $prevUpvalue
  i32.const 0
  i32.eq
  if
   global.get $assembly/vm/vm
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $createdUpvalue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/vm/VM#set:openUpvalues
  else
   local.get $prevUpvalue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $createdUpvalue
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/object/ObjUpvalue#set:nextUpvalue
  end
  local.get $createdUpvalue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/vm/closeUpvalues (param $last i32)
  (local $1 i32)
  (local $2 i32)
  (local $upvalue i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  loop $while-continue|0
   global.get $assembly/vm/vm
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/vm/VM#get:openUpvalues
   i32.const 0
   i32.ne
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/vm/vm
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/vm/VM#get:openUpvalues
    local.tee $1
    i32.store $0 offset=8
    local.get $1
    if (result i32)
     local.get $1
    else
     i32.const 4160
     i32.const 21280
     i32.const 352
     i32.const 53
     call $~lib/builtins/abort
     unreachable
    end
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/object/ObjUpvalue#get:locationIndex
    local.get $last
    i32.ge_s
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/vm/vm
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/vm/VM#get:openUpvalues
    local.tee $2
    i32.store $0 offset=12
    local.get $2
    if (result i32)
     local.get $2
    else
     i32.const 4160
     i32.const 21280
     i32.const 353
     i32.const 49
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $upvalue
    i32.store $0 offset=16
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $assembly/object/ObjUpvalue#get:locationValue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/object/ObjUpvalue#set:closed
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    global.get $~lib/memory/__stack_pointer
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $assembly/object/ObjUpvalue#get:closed
    local.tee $4
    i32.store $0 offset=24
    local.get $4
    if (result i32)
     local.get $4
    else
     i32.const 4160
     i32.const 21280
     i32.const 365
     i32.const 40
     call $~lib/builtins/abort
     unreachable
    end
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/object/ObjUpvalue#set:locationValue
    global.get $assembly/vm/vm
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $upvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $assembly/object/ObjUpvalue#get:nextUpvalue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/vm/VM#set:openUpvalues
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/object/ObjClass#constructor (param $this i32) (param $name i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 27
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjClass#set:name
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/object/ObjClass#set:methods
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/object/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/object/ObjType.OBJ_CLASS
  call $assembly/object/Obj#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/object/ObjString#get:chars
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjClass#set:name
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/table/initTable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/object/ObjClass#set:methods
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/object/IS_CLASS (param $value i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $assembly/object/ObjType.OBJ_CLASS
  call $assembly/object/isObjectType
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/table/tableAddAll (param $from i32) (param $to i32)
  (local $keys i32)
  (local $i i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $from
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#keys
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<assembly/object/ObjString>#get:length
   i32.lt_s
   if
    local.get $to
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $keys
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=16
    local.get $4
    local.get $i
    call $~lib/array/Array<assembly/object/ObjString>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $from
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=16
    local.get $4
    local.get $keys
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=24
    local.get $4
    local.get $i
    call $~lib/array/Array<assembly/object/ObjString>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    local.get $4
    call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $assembly/table/tableSet
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/defineMethod (param $name i32)
  (local $method i32)
  (local $klass i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/vm/peek
  local.tee $method
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  call $assembly/vm/peek
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/object/AS_CLASS
  local.tee $klass
  i32.store $0 offset=8
  local.get $klass
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/object/ObjClass#get:methods
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  local.get $method
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/table/tableSet
  drop
  call $assembly/vm/pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/run (result i32)
  (local $frame i32)
  (local $showDebug i32)
  (local $stackPrint i32)
  (local $slot i32)
  (local $valStr i32)
  (local $5 i32)
  (local $instruction i32)
  (local $7 i32)
  (local $constant i32)
  (local $slot|9 i32)
  (local $slot|10 i32)
  (local $name i32)
  (local $value i32)
  (local $13 i32)
  (local $name|14 i32)
  (local $name|15 i32)
  (local $16 i32)
  (local $slot|17 i32)
  (local $vmSlotIndex i32)
  (local $myValue i32)
  (local $slot|20 i32)
  (local $vmSlotIndex|21 i32)
  (local $myValue|22 i32)
  (local $slotIndexToChange i32)
  (local $instance i32)
  (local $name|25 i32)
  (local $value|26 i32)
  (local $instance|27 i32)
  (local $value|28 i32)
  (local $b i32)
  (local $a i32)
  (local $name|31 i32)
  (local $superclass i32)
  (local $status i32)
  (local $status|34 i32)
  (local $b|35 f64)
  (local $a|36 f64)
  (local $status|37 i32)
  (local $status|38 i32)
  (local $status|39 i32)
  (local $output i32)
  (local $offset i32)
  (local $offset|42 i32)
  (local $offset|43 i32)
  (local $argCount i32)
  (local $method i32)
  (local $argCount|46 i32)
  (local $method|47 i32)
  (local $argCount|48 i32)
  (local $superclass|49 i32)
  (local $myfunction i32)
  (local $closure i32)
  (local $i i32)
  (local $isLocal i32)
  (local $index i32)
  (local $localIndex i32)
  (local $ourValue i32)
  (local $result i32)
  (local $superclass|58 i32)
  (local $subclass i32)
  (local $60 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 148
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 148
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $60
  global.get $~lib/memory/__stack_pointer
  local.get $60
  i32.store $0 offset=4
  local.get $60
  call $assembly/vm/VM#get:frames
  local.set $60
  global.get $~lib/memory/__stack_pointer
  local.get $60
  i32.store $0
  local.get $60
  global.get $assembly/vm/vm
  local.set $60
  global.get $~lib/memory/__stack_pointer
  local.get $60
  i32.store $0 offset=4
  local.get $60
  call $assembly/vm/VM#get:frameCount
  i32.const 1
  i32.sub
  call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
  local.tee $frame
  i32.store $0 offset=8
  i32.const 32
  local.set $60
  global.get $~lib/memory/__stack_pointer
  local.get $60
  i32.store $0
  local.get $60
  call $assembly/index/debugLog
  i32.const 19648
  local.set $60
  global.get $~lib/memory/__stack_pointer
  local.get $60
  i32.store $0
  local.get $60
  call $assembly/index/debugLog
  call $assembly/index/getDebugFlag
  local.set $showDebug
  loop $while-continue|0
   i32.const 1
   if
    local.get $showDebug
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 19728
     local.tee $stackPrint
     i32.store $0 offset=12
     i32.const 0
     local.set $slot
     loop $for-loop|1
      local.get $slot
      global.get $assembly/vm/vm
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0
      local.get $60
      call $assembly/vm/VM#get:stackTop
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       global.get $assembly/vm/vm
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=16
       local.get $60
       call $assembly/vm/VM#get:stack
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=4
       local.get $60
       local.get $slot
       call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0
       local.get $60
       i32.const 1
       global.set $~argumentsLength
       global.get $assembly/value/printValueToString
       i32.load $0
       call_indirect $0 (type $i32_=>_i32)
       local.tee $valStr
       i32.store $0 offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $stackPrint
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0
       local.get $60
       global.get $~lib/memory/__stack_pointer
       local.get $valStr
       local.tee $5
       i32.store $0 offset=24
       i32.const 19840
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=16
       local.get $60
       i32.const 1
       local.get $5
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=28
       local.get $60
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 19840
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=16
       local.get $60
       i32.const 32
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=32
       local.get $60
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=4
       local.get $60
       call $~lib/string/String.__concat
       local.tee $stackPrint
       i32.store $0 offset=12
       local.get $slot
       i32.const 1
       i32.add
       local.set $slot
       br $for-loop|1
      end
     end
     local.get $stackPrint
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0
     local.get $60
     call $assembly/index/debugLog
     local.get $frame
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0 offset=32
     local.get $60
     call $assembly/vm/CallFrame#get:closure
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0 offset=16
     local.get $60
     call $assembly/object/ObjClosure#get:func
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0 offset=4
     local.get $60
     call $assembly/object/ObjFunction#get:chunk
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0
     local.get $60
     local.get $frame
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0 offset=4
     local.get $60
     call $assembly/vm/CallFrame#get:ip
     i32.const 2
     global.set $~argumentsLength
     global.get $assembly/debug/disassembleInstruction
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     drop
    end
    local.get $frame
    local.set $60
    global.get $~lib/memory/__stack_pointer
    local.get $60
    i32.store $0
    local.get $60
    i32.const 1
    global.set $~argumentsLength
    i32.const 19376
    i32.load $0
    call_indirect $0 (type $i32_=>_i32)
    local.set $instruction
    block $break|2
     block $case36|2
      block $case35|2
       block $case34|2
        block $case33|2
         block $case32|2
          block $case31|2
           block $case30|2
            block $case29|2
             block $case28|2
              block $case27|2
               block $case26|2
                block $case25|2
                 block $case24|2
                  block $case23|2
                   block $case22|2
                    block $case21|2
                     block $case20|2
                      block $case19|2
                       block $case18|2
                        block $case17|2
                         block $case16|2
                          block $case15|2
                           block $case14|2
                            block $case13|2
                             block $case12|2
                              block $case11|2
                               block $case10|2
                                block $case9|2
                                 block $case8|2
                                  block $case7|2
                                   block $case6|2
                                    block $case5|2
                                     block $case4|2
                                      block $case3|2
                                       block $case2|2
                                        block $case1|2
                                         block $case0|2
                                          local.get $instruction
                                          i32.const 255
                                          i32.and
                                          local.set $7
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_CONSTANT
                                          i32.eq
                                          br_if $case0|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_NIL
                                          i32.eq
                                          br_if $case1|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_TRUE
                                          i32.eq
                                          br_if $case2|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_FALSE
                                          i32.eq
                                          br_if $case3|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_POP
                                          i32.eq
                                          br_if $case4|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GET_LOCAL
                                          i32.eq
                                          br_if $case5|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SET_LOCAL
                                          i32.eq
                                          br_if $case6|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GET_GLOBAL
                                          i32.eq
                                          br_if $case7|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_DEFINE_GLOBAL
                                          i32.eq
                                          br_if $case8|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SET_GLOBAL
                                          i32.eq
                                          br_if $case9|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GET_UPVALUE
                                          i32.eq
                                          br_if $case10|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SET_UPVALUE
                                          i32.eq
                                          br_if $case11|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GET_PROPERTY
                                          i32.eq
                                          br_if $case12|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SET_PROPERTY
                                          i32.eq
                                          br_if $case13|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_EQUAL
                                          i32.eq
                                          br_if $case14|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GET_SUPER
                                          i32.eq
                                          br_if $case15|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_GREATER
                                          i32.eq
                                          br_if $case16|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_LESS
                                          i32.eq
                                          br_if $case17|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_ADD
                                          i32.eq
                                          br_if $case18|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SUBTRACT
                                          i32.eq
                                          br_if $case19|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_MULTIPLY
                                          i32.eq
                                          br_if $case20|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_DIVIDE
                                          i32.eq
                                          br_if $case21|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_NOT
                                          i32.eq
                                          br_if $case22|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_NEGATE
                                          i32.eq
                                          br_if $case23|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_PRINT
                                          i32.eq
                                          br_if $case24|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_JUMP
                                          i32.eq
                                          br_if $case25|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_JUMP_IF_FALSE
                                          i32.eq
                                          br_if $case26|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_LOOP
                                          i32.eq
                                          br_if $case27|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_CALL
                                          i32.eq
                                          br_if $case28|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_INVOKE
                                          i32.eq
                                          br_if $case29|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_SUPER_INVOKE
                                          i32.eq
                                          br_if $case30|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_CLOSURE
                                          i32.eq
                                          br_if $case31|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_CLOSE_UPVALUE
                                          i32.eq
                                          br_if $case32|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_RETURN
                                          i32.eq
                                          br_if $case33|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_CLASS
                                          i32.eq
                                          br_if $case34|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_INHERIT
                                          i32.eq
                                          br_if $case35|2
                                          local.get $7
                                          global.get $assembly/chunk/OpCode.OP_METHOD
                                          i32.eq
                                          br_if $case36|2
                                          br $break|2
                                         end
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $frame
                                         local.set $60
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $60
                                         i32.store $0
                                         local.get $60
                                         i32.const 1
                                         global.set $~argumentsLength
                                         i32.const 19408
                                         i32.load $0
                                         call_indirect $0 (type $i32_=>_i32)
                                         local.tee $constant
                                         i32.store $0 offset=36
                                         local.get $constant
                                         local.set $60
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $60
                                         i32.store $0
                                         local.get $60
                                         call $assembly/vm/push
                                         br $break|2
                                        end
                                        call $assembly/value/NIL_VAL
                                        local.set $60
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $60
                                        i32.store $0
                                        local.get $60
                                        call $assembly/vm/push
                                        br $break|2
                                       end
                                       i32.const 1
                                       call $assembly/value/BOOL_VAL
                                       local.set $60
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $60
                                       i32.store $0
                                       local.get $60
                                       call $assembly/vm/push
                                       br $break|2
                                      end
                                      i32.const 0
                                      call $assembly/value/BOOL_VAL
                                      local.set $60
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $60
                                      i32.store $0
                                      local.get $60
                                      call $assembly/vm/push
                                      br $break|2
                                     end
                                     call $assembly/vm/pop
                                     drop
                                     br $break|2
                                    end
                                    local.get $frame
                                    local.set $60
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $60
                                    i32.store $0
                                    local.get $60
                                    i32.const 1
                                    global.set $~argumentsLength
                                    i32.const 19376
                                    i32.load $0
                                    call_indirect $0 (type $i32_=>_i32)
                                    local.set $slot|9
                                    global.get $assembly/vm/vm
                                    local.set $60
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $60
                                    i32.store $0 offset=16
                                    local.get $60
                                    call $assembly/vm/VM#get:stack
                                    local.set $60
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $60
                                    i32.store $0 offset=4
                                    local.get $60
                                    local.get $frame
                                    local.set $60
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $60
                                    i32.store $0 offset=16
                                    local.get $60
                                    call $assembly/vm/CallFrame#get:slotsIndex
                                    local.get $slot|9
                                    i32.const 255
                                    i32.and
                                    i32.add
                                    call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
                                    local.set $60
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $60
                                    i32.store $0
                                    local.get $60
                                    call $assembly/vm/push
                                    br $break|2
                                   end
                                   local.get $frame
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0
                                   local.get $60
                                   i32.const 1
                                   global.set $~argumentsLength
                                   i32.const 19376
                                   i32.load $0
                                   call_indirect $0 (type $i32_=>_i32)
                                   local.set $slot|10
                                   global.get $assembly/vm/vm
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=16
                                   local.get $60
                                   call $assembly/vm/VM#get:stack
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0
                                   local.get $60
                                   local.get $frame
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=16
                                   local.get $60
                                   call $assembly/vm/CallFrame#get:slotsIndex
                                   local.get $slot|10
                                   i32.const 255
                                   i32.and
                                   i32.add
                                   i32.const 0
                                   call $assembly/vm/peek
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=16
                                   local.get $60
                                   call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
                                   br $break|2
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $frame
                                  local.set $60
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $60
                                  i32.store $0
                                  local.get $60
                                  i32.const 1
                                  global.set $~argumentsLength
                                  i32.const 19472
                                  i32.load $0
                                  call_indirect $0 (type $i32_=>_i32)
                                  local.tee $name
                                  i32.store $0 offset=40
                                  global.get $~lib/memory/__stack_pointer
                                  global.get $assembly/vm/vm
                                  local.set $60
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $60
                                  i32.store $0 offset=16
                                  local.get $60
                                  call $assembly/vm/VM#get:globals
                                  local.set $60
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $60
                                  i32.store $0
                                  local.get $60
                                  local.get $name
                                  local.set $60
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $60
                                  i32.store $0 offset=4
                                  local.get $60
                                  call $assembly/table/tableGet
                                  local.tee $value
                                  i32.store $0 offset=44
                                  local.get $value
                                  i32.const 0
                                  i32.eq
                                  if
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $name
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=4
                                   local.get $60
                                   call $assembly/object/ObjString#get:chars
                                   local.tee $13
                                   i32.store $0 offset=48
                                   i32.const 20064
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=4
                                   local.get $60
                                   i32.const 1
                                   local.get $13
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=32
                                   local.get $60
                                   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
                                   i32.const 20064
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=4
                                   local.get $60
                                   i32.const 32
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0 offset=16
                                   local.get $60
                                   call $~lib/staticarray/StaticArray<~lib/string/String>#join
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $60
                                   i32.store $0
                                   local.get $60
                                   call $assembly/vm/runtimeError
                                   global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                                   local.set $60
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 148
                                   i32.add
                                   global.set $~lib/memory/__stack_pointer
                                   local.get $60
                                   return
                                  end
                                  local.get $value
                                  local.set $60
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $60
                                  i32.store $0
                                  local.get $60
                                  call $assembly/vm/push
                                  br $break|2
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $frame
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0
                                 local.get $60
                                 i32.const 1
                                 global.set $~argumentsLength
                                 i32.const 19472
                                 i32.load $0
                                 call_indirect $0 (type $i32_=>_i32)
                                 local.tee $name|14
                                 i32.store $0 offset=52
                                 global.get $assembly/vm/vm
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=32
                                 local.get $60
                                 call $assembly/vm/VM#get:globals
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0
                                 local.get $60
                                 local.get $name|14
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=4
                                 local.get $60
                                 i32.const 0
                                 call $assembly/vm/peek
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=16
                                 local.get $60
                                 call $assembly/table/tableSet
                                 drop
                                 call $assembly/vm/pop
                                 drop
                                 br $break|2
                                end
                                global.get $~lib/memory/__stack_pointer
                                local.get $frame
                                local.set $60
                                global.get $~lib/memory/__stack_pointer
                                local.get $60
                                i32.store $0
                                local.get $60
                                i32.const 1
                                global.set $~argumentsLength
                                i32.const 19472
                                i32.load $0
                                call_indirect $0 (type $i32_=>_i32)
                                local.tee $name|15
                                i32.store $0 offset=56
                                global.get $assembly/vm/vm
                                local.set $60
                                global.get $~lib/memory/__stack_pointer
                                local.get $60
                                i32.store $0 offset=32
                                local.get $60
                                call $assembly/vm/VM#get:globals
                                local.set $60
                                global.get $~lib/memory/__stack_pointer
                                local.get $60
                                i32.store $0
                                local.get $60
                                local.get $name|15
                                local.set $60
                                global.get $~lib/memory/__stack_pointer
                                local.get $60
                                i32.store $0 offset=4
                                local.get $60
                                i32.const 0
                                call $assembly/vm/peek
                                local.set $60
                                global.get $~lib/memory/__stack_pointer
                                local.get $60
                                i32.store $0 offset=16
                                local.get $60
                                call $assembly/table/tableSet
                                if
                                 global.get $assembly/vm/vm
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=16
                                 local.get $60
                                 call $assembly/vm/VM#get:globals
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0
                                 local.get $60
                                 local.get $name|15
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=4
                                 local.get $60
                                 call $assembly/table/tableDelete
                                 drop
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $name|15
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=4
                                 local.get $60
                                 call $assembly/object/ObjString#get:chars
                                 local.tee $16
                                 i32.store $0 offset=60
                                 i32.const 20176
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=4
                                 local.get $60
                                 i32.const 1
                                 local.get $16
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=32
                                 local.get $60
                                 call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
                                 i32.const 20176
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=4
                                 local.get $60
                                 i32.const 32
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0 offset=16
                                 local.get $60
                                 call $~lib/staticarray/StaticArray<~lib/string/String>#join
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $60
                                 i32.store $0
                                 local.get $60
                                 call $assembly/vm/runtimeError
                                 global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                                 local.set $60
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 148
                                 i32.add
                                 global.set $~lib/memory/__stack_pointer
                                 local.get $60
                                 return
                                end
                                br $break|2
                               end
                               local.get $frame
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0
                               local.get $60
                               i32.const 1
                               global.set $~argumentsLength
                               i32.const 19376
                               i32.load $0
                               call_indirect $0 (type $i32_=>_i32)
                               local.set $slot|17
                               local.get $frame
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0
                               local.get $60
                               call $assembly/vm/CallFrame#get:slotsIndex
                               local.get $slot|17
                               i32.const 255
                               i32.and
                               i32.add
                               local.set $vmSlotIndex
                               global.get $~lib/memory/__stack_pointer
                               local.get $frame
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0 offset=32
                               local.get $60
                               call $assembly/vm/CallFrame#get:closure
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0 offset=16
                               local.get $60
                               call $assembly/object/ObjClosure#get:upvalues
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0 offset=4
                               local.get $60
                               local.get $slot|17
                               i32.const 255
                               i32.and
                               call $~lib/array/Array<assembly/object/ObjUpvalue>#__get
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0
                               local.get $60
                               call $assembly/object/ObjUpvalue#get:locationValue
                               local.tee $myValue
                               i32.store $0 offset=64
                               local.get $myValue
                               local.set $60
                               global.get $~lib/memory/__stack_pointer
                               local.get $60
                               i32.store $0
                               local.get $60
                               call $assembly/vm/push
                               br $break|2
                              end
                              local.get $frame
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              i32.const 1
                              global.set $~argumentsLength
                              i32.const 19376
                              i32.load $0
                              call_indirect $0 (type $i32_=>_i32)
                              local.set $slot|20
                              local.get $frame
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              call $assembly/vm/CallFrame#get:slotsIndex
                              local.get $slot|20
                              i32.const 255
                              i32.and
                              i32.add
                              local.set $vmSlotIndex|21
                              global.get $~lib/memory/__stack_pointer
                              i32.const 0
                              call $assembly/vm/peek
                              local.tee $myValue|22
                              i32.store $0 offset=68
                              local.get $frame
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=32
                              local.get $60
                              call $assembly/vm/CallFrame#get:closure
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=16
                              local.get $60
                              call $assembly/object/ObjClosure#get:upvalues
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=4
                              local.get $60
                              local.get $slot|20
                              i32.const 255
                              i32.and
                              call $~lib/array/Array<assembly/object/ObjUpvalue>#__get
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              call $assembly/object/ObjUpvalue#get:locationIndex
                              local.set $slotIndexToChange
                              local.get $frame
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=28
                              local.get $60
                              call $assembly/vm/CallFrame#get:closure
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=32
                              local.get $60
                              call $assembly/object/ObjClosure#get:upvalues
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=16
                              local.get $60
                              local.get $slot|20
                              i32.const 255
                              i32.and
                              call $~lib/array/Array<assembly/object/ObjUpvalue>#__get
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              local.get $myValue|22
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=4
                              local.get $60
                              call $assembly/object/ObjUpvalue#set:locationValue
                              global.get $assembly/vm/vm
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=16
                              local.get $60
                              call $assembly/vm/VM#get:stack
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              local.get $slotIndexToChange
                              local.get $myValue|22
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0 offset=16
                              local.get $60
                              call $~lib/staticarray/StaticArray<assembly/value/Value>#__set
                              br $break|2
                             end
                             i32.const 0
                             call $assembly/vm/peek
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             call $assembly/object/IS_INSTANCE
                             i32.eqz
                             if
                              i32.const 20208
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              call $assembly/vm/runtimeError
                              global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              i32.const 148
                              i32.add
                              global.set $~lib/memory/__stack_pointer
                              local.get $60
                              return
                             end
                             global.get $~lib/memory/__stack_pointer
                             i32.const 0
                             call $assembly/vm/peek
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             call $assembly/object/AS_INSTANCE
                             local.tee $instance
                             i32.store $0 offset=72
                             global.get $~lib/memory/__stack_pointer
                             local.get $frame
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             i32.const 1
                             global.set $~argumentsLength
                             i32.const 19472
                             i32.load $0
                             call_indirect $0 (type $i32_=>_i32)
                             local.tee $name|25
                             i32.store $0 offset=76
                             global.get $~lib/memory/__stack_pointer
                             local.get $instance
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0 offset=16
                             local.get $60
                             call $assembly/object/ObjInstance#get:fields
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             local.get $name|25
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0 offset=4
                             local.get $60
                             call $assembly/table/tableGet
                             local.tee $value|26
                             i32.store $0 offset=80
                             local.get $value|26
                             i32.const 0
                             i32.ne
                             if
                              call $assembly/vm/pop
                              drop
                              local.get $value|26
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              local.get $60
                              i32.store $0
                              local.get $60
                              call $assembly/vm/push
                              br $break|2
                             end
                             local.get $instance
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0 offset=16
                             local.get $60
                             call $assembly/object/ObjInstance#get:klass
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             local.get $name|25
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0 offset=4
                             local.get $60
                             call $assembly/vm/bindMethod
                             i32.eqz
                             if
                              global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                              local.set $60
                              global.get $~lib/memory/__stack_pointer
                              i32.const 148
                              i32.add
                              global.set $~lib/memory/__stack_pointer
                              local.get $60
                              return
                             end
                             br $break|2
                            end
                            i32.const 1
                            call $assembly/vm/peek
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0
                            local.get $60
                            call $assembly/object/IS_INSTANCE
                            i32.eqz
                            if
                             i32.const 20432
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             local.get $60
                             i32.store $0
                             local.get $60
                             call $assembly/vm/runtimeError
                             global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                             local.set $60
                             global.get $~lib/memory/__stack_pointer
                             i32.const 148
                             i32.add
                             global.set $~lib/memory/__stack_pointer
                             local.get $60
                             return
                            end
                            global.get $~lib/memory/__stack_pointer
                            i32.const 1
                            call $assembly/vm/peek
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0
                            local.get $60
                            call $assembly/object/AS_INSTANCE
                            local.tee $instance|27
                            i32.store $0 offset=84
                            local.get $instance|27
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0 offset=32
                            local.get $60
                            call $assembly/object/ObjInstance#get:fields
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0
                            local.get $60
                            local.get $frame
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0 offset=32
                            local.get $60
                            i32.const 1
                            global.set $~argumentsLength
                            i32.const 19472
                            i32.load $0
                            call_indirect $0 (type $i32_=>_i32)
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0 offset=4
                            local.get $60
                            i32.const 0
                            call $assembly/vm/peek
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0 offset=16
                            local.get $60
                            call $assembly/table/tableSet
                            drop
                            global.get $~lib/memory/__stack_pointer
                            call $assembly/vm/pop
                            local.tee $value|28
                            i32.store $0 offset=88
                            call $assembly/vm/pop
                            drop
                            local.get $value|28
                            local.set $60
                            global.get $~lib/memory/__stack_pointer
                            local.get $60
                            i32.store $0
                            local.get $60
                            call $assembly/vm/push
                            br $break|2
                           end
                           global.get $~lib/memory/__stack_pointer
                           call $assembly/vm/pop
                           local.tee $b
                           i32.store $0 offset=92
                           global.get $~lib/memory/__stack_pointer
                           call $assembly/vm/pop
                           local.tee $a
                           i32.store $0 offset=96
                           local.get $a
                           local.set $60
                           global.get $~lib/memory/__stack_pointer
                           local.get $60
                           i32.store $0 offset=4
                           local.get $60
                           local.get $b
                           local.set $60
                           global.get $~lib/memory/__stack_pointer
                           local.get $60
                           i32.store $0 offset=16
                           local.get $60
                           call $assembly/value/valuesEqual
                           call $assembly/value/BOOL_VAL
                           local.set $60
                           global.get $~lib/memory/__stack_pointer
                           local.get $60
                           i32.store $0
                           local.get $60
                           call $assembly/vm/push
                           br $break|2
                          end
                          global.get $~lib/memory/__stack_pointer
                          local.get $frame
                          local.set $60
                          global.get $~lib/memory/__stack_pointer
                          local.get $60
                          i32.store $0
                          local.get $60
                          i32.const 1
                          global.set $~argumentsLength
                          i32.const 19472
                          i32.load $0
                          call_indirect $0 (type $i32_=>_i32)
                          local.tee $name|31
                          i32.store $0 offset=100
                          global.get $~lib/memory/__stack_pointer
                          call $assembly/vm/pop
                          local.set $60
                          global.get $~lib/memory/__stack_pointer
                          local.get $60
                          i32.store $0
                          local.get $60
                          call $assembly/object/AS_CLASS
                          local.tee $superclass
                          i32.store $0 offset=104
                          local.get $superclass
                          local.set $60
                          global.get $~lib/memory/__stack_pointer
                          local.get $60
                          i32.store $0
                          local.get $60
                          local.get $name|31
                          local.set $60
                          global.get $~lib/memory/__stack_pointer
                          local.get $60
                          i32.store $0 offset=4
                          local.get $60
                          call $assembly/vm/bindMethod
                          i32.eqz
                          if
                           global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                           local.set $60
                           global.get $~lib/memory/__stack_pointer
                           i32.const 148
                           i32.add
                           global.set $~lib/memory/__stack_pointer
                           local.get $60
                           return
                          end
                          br $break|2
                         end
                         i32.const 20512
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         i32.const 1
                         global.set $~argumentsLength
                         i32.const 19584
                         i32.load $0
                         call_indirect $0 (type $i32_=>_i32)
                         local.set $status
                         local.get $status
                         global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
                         i32.eq
                         if
                          local.get $status
                          local.set $60
                          global.get $~lib/memory/__stack_pointer
                          i32.const 148
                          i32.add
                          global.set $~lib/memory/__stack_pointer
                          local.get $60
                          return
                         end
                         br $break|2
                        end
                        i32.const 20544
                        local.set $60
                        global.get $~lib/memory/__stack_pointer
                        local.get $60
                        i32.store $0
                        local.get $60
                        i32.const 1
                        global.set $~argumentsLength
                        i32.const 19584
                        i32.load $0
                        call_indirect $0 (type $i32_=>_i32)
                        local.set $status|34
                        local.get $status|34
                        global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
                        i32.eq
                        if
                         local.get $status|34
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         i32.const 148
                         i32.add
                         global.set $~lib/memory/__stack_pointer
                         local.get $60
                         return
                        end
                        br $break|2
                       end
                       i32.const 0
                       call $assembly/vm/peek
                       local.set $60
                       global.get $~lib/memory/__stack_pointer
                       local.get $60
                       i32.store $0
                       local.get $60
                       call $assembly/object/IS_STRING
                       if (result i32)
                        i32.const 1
                        call $assembly/vm/peek
                        local.set $60
                        global.get $~lib/memory/__stack_pointer
                        local.get $60
                        i32.store $0
                        local.get $60
                        call $assembly/object/IS_STRING
                       else
                        i32.const 0
                       end
                       if
                        call $assembly/vm/concatenate
                       else
                        i32.const 0
                        call $assembly/vm/peek
                        local.set $60
                        global.get $~lib/memory/__stack_pointer
                        local.get $60
                        i32.store $0
                        local.get $60
                        call $assembly/value/IS_NUMBER
                        if (result i32)
                         i32.const 1
                         call $assembly/vm/peek
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         call $assembly/value/IS_NUMBER
                        else
                         i32.const 0
                        end
                        if
                         call $assembly/vm/pop
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         call $assembly/value/AS_NUMBER
                         local.set $b|35
                         call $assembly/vm/pop
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         call $assembly/value/AS_NUMBER
                         local.set $a|36
                         local.get $a|36
                         local.get $b|35
                         f64.add
                         call $assembly/value/NUMBER_VAL
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         call $assembly/vm/push
                        else
                         i32.const 20672
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         local.get $60
                         i32.store $0
                         local.get $60
                         call $assembly/vm/runtimeError
                         global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                         local.set $60
                         global.get $~lib/memory/__stack_pointer
                         i32.const 148
                         i32.add
                         global.set $~lib/memory/__stack_pointer
                         local.get $60
                         return
                        end
                       end
                       br $break|2
                      end
                      i32.const 20784
                      local.set $60
                      global.get $~lib/memory/__stack_pointer
                      local.get $60
                      i32.store $0
                      local.get $60
                      i32.const 1
                      global.set $~argumentsLength
                      i32.const 19616
                      i32.load $0
                      call_indirect $0 (type $i32_=>_i32)
                      local.set $status|37
                      local.get $status|37
                      global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
                      i32.eq
                      if
                       local.get $status|37
                       local.set $60
                       global.get $~lib/memory/__stack_pointer
                       i32.const 148
                       i32.add
                       global.set $~lib/memory/__stack_pointer
                       local.get $60
                       return
                      end
                      br $break|2
                     end
                     i32.const 20816
                     local.set $60
                     global.get $~lib/memory/__stack_pointer
                     local.get $60
                     i32.store $0
                     local.get $60
                     i32.const 1
                     global.set $~argumentsLength
                     i32.const 19616
                     i32.load $0
                     call_indirect $0 (type $i32_=>_i32)
                     local.set $status|38
                     local.get $status|38
                     global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
                     i32.eq
                     if
                      local.get $status|38
                      local.set $60
                      global.get $~lib/memory/__stack_pointer
                      i32.const 148
                      i32.add
                      global.set $~lib/memory/__stack_pointer
                      local.get $60
                      return
                     end
                     br $break|2
                    end
                    i32.const 20848
                    local.set $60
                    global.get $~lib/memory/__stack_pointer
                    local.get $60
                    i32.store $0
                    local.get $60
                    i32.const 1
                    global.set $~argumentsLength
                    i32.const 19616
                    i32.load $0
                    call_indirect $0 (type $i32_=>_i32)
                    local.set $status|39
                    local.get $status|39
                    global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
                    i32.eq
                    if
                     local.get $status|39
                     local.set $60
                     global.get $~lib/memory/__stack_pointer
                     i32.const 148
                     i32.add
                     global.set $~lib/memory/__stack_pointer
                     local.get $60
                     return
                    end
                    br $break|2
                   end
                   call $assembly/vm/pop
                   local.set $60
                   global.get $~lib/memory/__stack_pointer
                   local.get $60
                   i32.store $0 offset=4
                   local.get $60
                   call $assembly/vm/isFalsey
                   call $assembly/value/BOOL_VAL
                   local.set $60
                   global.get $~lib/memory/__stack_pointer
                   local.get $60
                   i32.store $0
                   local.get $60
                   call $assembly/vm/push
                   br $break|2
                  end
                  i32.const 0
                  call $assembly/vm/peek
                  local.set $60
                  global.get $~lib/memory/__stack_pointer
                  local.get $60
                  i32.store $0
                  local.get $60
                  call $assembly/value/IS_NUMBER
                  i32.eqz
                  if
                   i32.const 20880
                   local.set $60
                   global.get $~lib/memory/__stack_pointer
                   local.get $60
                   i32.store $0
                   local.get $60
                   call $assembly/vm/runtimeError
                   global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
                   local.set $60
                   global.get $~lib/memory/__stack_pointer
                   i32.const 148
                   i32.add
                   global.set $~lib/memory/__stack_pointer
                   local.get $60
                   return
                  end
                  call $assembly/vm/pop
                  local.set $60
                  global.get $~lib/memory/__stack_pointer
                  local.get $60
                  i32.store $0 offset=4
                  local.get $60
                  call $assembly/value/AS_NUMBER
                  f64.neg
                  call $assembly/value/NUMBER_VAL
                  local.set $60
                  global.get $~lib/memory/__stack_pointer
                  local.get $60
                  i32.store $0
                  local.get $60
                  call $assembly/vm/push
                  br $break|2
                 end
                 global.get $~lib/memory/__stack_pointer
                 call $assembly/vm/pop
                 local.set $60
                 global.get $~lib/memory/__stack_pointer
                 local.get $60
                 i32.store $0
                 local.get $60
                 i32.const 1
                 global.set $~argumentsLength
                 global.get $assembly/value/printValueToString
                 i32.load $0
                 call_indirect $0 (type $i32_=>_i32)
                 local.tee $output
                 i32.store $0 offset=108
                 local.get $output
                 local.set $60
                 global.get $~lib/memory/__stack_pointer
                 local.get $60
                 i32.store $0
                 local.get $60
                 call $assembly/index/printout
                 local.get $output
                 local.set $60
                 global.get $~lib/memory/__stack_pointer
                 local.get $60
                 i32.store $0
                 local.get $60
                 call $assembly/index/debugLog
                 br $break|2
                end
                local.get $frame
                local.set $60
                global.get $~lib/memory/__stack_pointer
                local.get $60
                i32.store $0
                local.get $60
                i32.const 1
                global.set $~argumentsLength
                i32.const 19440
                i32.load $0
                call_indirect $0 (type $i32_=>_i32)
                local.set $offset
                local.get $frame
                local.set $60
                global.get $~lib/memory/__stack_pointer
                local.get $60
                i32.store $0
                local.get $60
                local.get $frame
                local.set $60
                global.get $~lib/memory/__stack_pointer
                local.get $60
                i32.store $0 offset=4
                local.get $60
                call $assembly/vm/CallFrame#get:ip
                local.get $offset
                i32.const 255
                i32.and
                i32.add
                call $assembly/vm/CallFrame#set:ip
                br $break|2
               end
               local.get $frame
               local.set $60
               global.get $~lib/memory/__stack_pointer
               local.get $60
               i32.store $0
               local.get $60
               i32.const 1
               global.set $~argumentsLength
               i32.const 19440
               i32.load $0
               call_indirect $0 (type $i32_=>_i32)
               local.set $offset|42
               i32.const 0
               call $assembly/vm/peek
               local.set $60
               global.get $~lib/memory/__stack_pointer
               local.get $60
               i32.store $0
               local.get $60
               call $assembly/vm/isFalsey
               if
                local.get $frame
                local.set $60
                global.get $~lib/memory/__stack_pointer
                local.get $60
                i32.store $0
                local.get $60
                local.get $frame
                local.set $60
                global.get $~lib/memory/__stack_pointer
                local.get $60
                i32.store $0 offset=4
                local.get $60
                call $assembly/vm/CallFrame#get:ip
                local.get $offset|42
                i32.const 65535
                i32.and
                i32.add
                call $assembly/vm/CallFrame#set:ip
               end
               br $break|2
              end
              local.get $frame
              local.set $60
              global.get $~lib/memory/__stack_pointer
              local.get $60
              i32.store $0
              local.get $60
              i32.const 1
              global.set $~argumentsLength
              i32.const 19440
              i32.load $0
              call_indirect $0 (type $i32_=>_i32)
              local.set $offset|43
              local.get $frame
              local.set $60
              global.get $~lib/memory/__stack_pointer
              local.get $60
              i32.store $0
              local.get $60
              local.get $frame
              local.set $60
              global.get $~lib/memory/__stack_pointer
              local.get $60
              i32.store $0 offset=4
              local.get $60
              call $assembly/vm/CallFrame#get:ip
              local.get $offset|43
              i32.const 65535
              i32.and
              i32.sub
              call $assembly/vm/CallFrame#set:ip
              br $break|2
             end
             local.get $frame
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             i32.const 1
             global.set $~argumentsLength
             i32.const 19376
             i32.load $0
             call_indirect $0 (type $i32_=>_i32)
             local.set $argCount
             local.get $argCount
             i32.const 255
             i32.and
             call $assembly/vm/peek
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             local.get $argCount
             call $assembly/vm/callValue
             i32.eqz
             if
              global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
              local.set $60
              global.get $~lib/memory/__stack_pointer
              i32.const 148
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $60
              return
             end
             global.get $~lib/memory/__stack_pointer
             global.get $assembly/vm/vm
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=4
             local.get $60
             call $assembly/vm/VM#get:frames
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             global.get $assembly/vm/vm
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=4
             local.get $60
             call $assembly/vm/VM#get:frameCount
             i32.const 1
             i32.sub
             call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
             local.tee $frame
             i32.store $0 offset=8
             br $break|2
            end
            global.get $~lib/memory/__stack_pointer
            local.get $frame
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            i32.const 1
            global.set $~argumentsLength
            i32.const 19472
            i32.load $0
            call_indirect $0 (type $i32_=>_i32)
            local.tee $method
            i32.store $0 offset=112
            local.get $frame
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            i32.const 1
            global.set $~argumentsLength
            i32.const 19376
            i32.load $0
            call_indirect $0 (type $i32_=>_i32)
            local.set $argCount|46
            local.get $method
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            local.get $argCount|46
            call $assembly/vm/invoke
            i32.eqz
            if
             global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
             local.set $60
             global.get $~lib/memory/__stack_pointer
             i32.const 148
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $60
             return
            end
            global.get $~lib/memory/__stack_pointer
            global.get $assembly/vm/vm
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0 offset=4
            local.get $60
            call $assembly/vm/VM#get:frames
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            global.get $assembly/vm/vm
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0 offset=4
            local.get $60
            call $assembly/vm/VM#get:frameCount
            i32.const 1
            i32.sub
            call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
            local.tee $frame
            i32.store $0 offset=8
            br $break|2
           end
           global.get $~lib/memory/__stack_pointer
           local.get $frame
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           i32.const 1
           global.set $~argumentsLength
           i32.const 19472
           i32.load $0
           call_indirect $0 (type $i32_=>_i32)
           local.tee $method|47
           i32.store $0 offset=116
           local.get $frame
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           i32.const 1
           global.set $~argumentsLength
           i32.const 19376
           i32.load $0
           call_indirect $0 (type $i32_=>_i32)
           local.set $argCount|48
           global.get $~lib/memory/__stack_pointer
           call $assembly/vm/pop
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           call $assembly/object/AS_CLASS
           local.tee $superclass|49
           i32.store $0 offset=120
           local.get $superclass|49
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           local.get $method|47
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0 offset=4
           local.get $60
           local.get $argCount|48
           call $assembly/vm/invokeFromClass
           i32.eqz
           if
            global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
            local.set $60
            global.get $~lib/memory/__stack_pointer
            i32.const 148
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $60
            return
           end
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/vm/vm
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0 offset=4
           local.get $60
           call $assembly/vm/VM#get:frames
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           global.get $assembly/vm/vm
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0 offset=4
           local.get $60
           call $assembly/vm/VM#get:frameCount
           i32.const 1
           i32.sub
           call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
           local.tee $frame
           i32.store $0 offset=8
           br $break|2
          end
          global.get $~lib/memory/__stack_pointer
          local.get $frame
          local.set $60
          global.get $~lib/memory/__stack_pointer
          local.get $60
          i32.store $0 offset=4
          local.get $60
          i32.const 1
          global.set $~argumentsLength
          i32.const 19408
          i32.load $0
          call_indirect $0 (type $i32_=>_i32)
          local.set $60
          global.get $~lib/memory/__stack_pointer
          local.get $60
          i32.store $0
          local.get $60
          call $assembly/object/AS_FUNCTION
          local.tee $myfunction
          i32.store $0 offset=124
          global.get $~lib/memory/__stack_pointer
          i32.const 0
          local.get $myfunction
          local.set $60
          global.get $~lib/memory/__stack_pointer
          local.get $60
          i32.store $0 offset=4
          local.get $60
          call $assembly/object/ObjClosure#constructor
          local.tee $closure
          i32.store $0 offset=128
          local.get $closure
          local.set $60
          global.get $~lib/memory/__stack_pointer
          local.get $60
          i32.store $0 offset=4
          local.get $60
          call $assembly/value/OBJ_VAL
          local.set $60
          global.get $~lib/memory/__stack_pointer
          local.get $60
          i32.store $0
          local.get $60
          call $assembly/vm/push
          i32.const 0
          local.set $i
          loop $for-loop|3
           local.get $i
           local.get $closure
           local.set $60
           global.get $~lib/memory/__stack_pointer
           local.get $60
           i32.store $0
           local.get $60
           call $assembly/object/ObjClosure#get:upvalueCount
           i32.lt_u
           if
            local.get $frame
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            i32.const 1
            global.set $~argumentsLength
            i32.const 19376
            i32.load $0
            call_indirect $0 (type $i32_=>_i32)
            local.set $isLocal
            local.get $frame
            local.set $60
            global.get $~lib/memory/__stack_pointer
            local.get $60
            i32.store $0
            local.get $60
            i32.const 1
            global.set $~argumentsLength
            i32.const 19376
            i32.load $0
            call_indirect $0 (type $i32_=>_i32)
            local.set $index
            local.get $isLocal
            i32.const 255
            i32.and
            i32.const 1
            i32.eq
            if
             local.get $frame
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             call $assembly/vm/CallFrame#get:slotsIndex
             local.get $index
             i32.const 255
             i32.and
             i32.add
             local.set $localIndex
             global.get $~lib/memory/__stack_pointer
             global.get $assembly/vm/vm
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=4
             local.get $60
             call $assembly/vm/VM#get:stack
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             local.get $localIndex
             call $~lib/staticarray/StaticArray<assembly/value/Value>#__get
             local.tee $ourValue
             i32.store $0 offset=132
             local.get $closure
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             call $assembly/object/ObjClosure#get:upvalues
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             local.get $i
             local.get $ourValue
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             local.get $localIndex
             call $assembly/vm/captureUpvalue
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
            else
             local.get $closure
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             call $assembly/object/ObjClosure#get:upvalues
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0
             local.get $60
             local.get $i
             local.get $frame
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=28
             local.get $60
             call $assembly/vm/CallFrame#get:closure
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=32
             local.get $60
             call $assembly/object/ObjClosure#get:upvalues
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             local.get $index
             i32.const 255
             i32.and
             call $~lib/array/Array<assembly/object/ObjUpvalue>#__get
             local.set $60
             global.get $~lib/memory/__stack_pointer
             local.get $60
             i32.store $0 offset=16
             local.get $60
             call $~lib/array/Array<assembly/object/ObjUpvalue>#__set
            end
            local.get $i
            i32.const 1
            i32.add
            local.set $i
            br $for-loop|3
           end
          end
          br $break|2
         end
         global.get $assembly/vm/vm
         local.set $60
         global.get $~lib/memory/__stack_pointer
         local.get $60
         i32.store $0
         local.get $60
         call $assembly/vm/VM#get:stackTop
         i32.const 1
         i32.sub
         call $assembly/vm/closeUpvalues
         call $assembly/vm/pop
         drop
         br $break|2
        end
        global.get $~lib/memory/__stack_pointer
        call $assembly/vm/pop
        local.tee $result
        i32.store $0 offset=136
        local.get $frame
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        call $assembly/vm/CallFrame#get:slotsIndex
        call $assembly/vm/closeUpvalues
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0 offset=4
        local.get $60
        call $assembly/vm/VM#get:frameCount
        i32.const 1
        i32.sub
        call $assembly/vm/VM#set:frameCount
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        call $assembly/vm/VM#get:frameCount
        i32.const 0
        i32.eq
        if
         call $assembly/vm/pop
         drop
         global.get $assembly/vm/InterpretResult.INTERPRET_OK
         local.set $60
         global.get $~lib/memory/__stack_pointer
         i32.const 148
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $60
         return
        end
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        local.get $frame
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0 offset=4
        local.get $60
        call $assembly/vm/CallFrame#get:slotsIndex
        call $assembly/vm/VM#set:stackTop
        local.get $result
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        call $assembly/vm/push
        global.get $~lib/memory/__stack_pointer
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0 offset=4
        local.get $60
        call $assembly/vm/VM#get:frames
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0
        local.get $60
        global.get $assembly/vm/vm
        local.set $60
        global.get $~lib/memory/__stack_pointer
        local.get $60
        i32.store $0 offset=4
        local.get $60
        call $assembly/vm/VM#get:frameCount
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#__get
        local.tee $frame
        i32.store $0 offset=8
        br $break|2
       end
       i32.const 0
       local.get $frame
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=32
       local.get $60
       i32.const 1
       global.set $~argumentsLength
       i32.const 19472
       i32.load $0
       call_indirect $0 (type $i32_=>_i32)
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=32
       local.get $60
       call $assembly/object/ObjClass#constructor
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0 offset=4
       local.get $60
       call $assembly/value/OBJ_VAL
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0
       local.get $60
       call $assembly/vm/push
       br $break|2
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 1
      call $assembly/vm/peek
      local.tee $superclass|58
      i32.store $0 offset=140
      local.get $superclass|58
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0
      local.get $60
      call $assembly/object/IS_CLASS
      i32.eqz
      if
       i32.const 21328
       local.set $60
       global.get $~lib/memory/__stack_pointer
       local.get $60
       i32.store $0
       local.get $60
       call $assembly/vm/runtimeError
       global.get $assembly/vm/InterpretResult.INTERPRET_RUNTIME_ERROR
       local.set $60
       global.get $~lib/memory/__stack_pointer
       i32.const 148
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $60
       return
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      call $assembly/vm/peek
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0
      local.get $60
      call $assembly/object/AS_CLASS
      local.tee $subclass
      i32.store $0 offset=144
      local.get $superclass|58
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0 offset=32
      local.get $60
      call $assembly/object/AS_CLASS
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0 offset=16
      local.get $60
      call $assembly/object/ObjClass#get:methods
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0
      local.get $60
      local.get $subclass
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0 offset=16
      local.get $60
      call $assembly/object/ObjClass#get:methods
      local.set $60
      global.get $~lib/memory/__stack_pointer
      local.get $60
      i32.store $0 offset=4
      local.get $60
      call $assembly/table/tableAddAll
      call $assembly/vm/pop
      drop
      br $break|2
     end
     local.get $frame
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0 offset=4
     local.get $60
     i32.const 1
     global.set $~argumentsLength
     i32.const 19472
     i32.load $0
     call_indirect $0 (type $i32_=>_i32)
     local.set $60
     global.get $~lib/memory/__stack_pointer
     local.get $60
     i32.store $0
     local.get $60
     call $assembly/vm/defineMethod
     br $break|2
    end
    br $while-continue|0
   end
  end
  unreachable
 )
 (func $assembly/vm/interpret (param $source i32) (result i32)
  (local $myfunction i32)
  (local $closure i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $source
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/printTokens
  global.get $~lib/memory/__stack_pointer
  local.get $source
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/compiler/compile
  local.tee $myfunction
  i32.store $0 offset=4
  local.get $myfunction
  i32.const 0
  i32.eq
  if
   global.get $assembly/vm/InterpretResult.INTERPRET_COMPILE_ERROR
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $myfunction
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/value/OBJ_VAL
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/vm/push
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $myfunction
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/object/ObjClosure#constructor
  local.tee $closure
  i32.store $0 offset=12
  call $assembly/vm/pop
  drop
  local.get $closure
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/value/OBJ_VAL
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/vm/push
  local.get $closure
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $assembly/vm/call
  drop
  call $assembly/vm/run
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/memory/freeObjects
  (local $object i32)
  (local $next i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/vm/vm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/vm/VM#get:objects
  local.tee $object
  i32.store $0 offset=4
  loop $while-continue|0
   local.get $object
   i32.const 0
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    local.get $object
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    call $assembly/object/Obj#get:nextObj
    local.tee $next
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $next
    local.tee $object
    i32.store $0 offset=4
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/vm/freeVM
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/table/freeTable
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#set:strings
  global.get $assembly/vm/vm
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/table/freeTable
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/vm/VM#set:strings
  call $assembly/memory/freeObjects
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/main (param $code i32) (result i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/debugLog
  i32.const 32
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/debugLog
  i32.const 15072
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/debugLog
  local.get $code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/debugLog
  i32.const 32
  global.set $assembly/index/outputstring
  call $assembly/vm/initVM
  local.get $code
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/vm/interpret
  local.set $result
  call $assembly/vm/freeVM
  global.get $assembly/index/outputstring
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/object/ObjUpvalue>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjUpvalue>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<assembly/object/ObjString,assembly/value/Value>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<assembly/object/ObjString,assembly/value/Value>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<assembly/object/ObjString,assembly/value/Value>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28i32%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28i32%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/staticarray/StaticArray<u8>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<u8>>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/staticarray/StaticArray<assembly/value/Value>%2Ci32%2Ci32%29=>~lib/staticarray/StaticArray<assembly/value/Value>>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/typedarray/Uint16Array%2Ci32%2Ci32%29=>~lib/typedarray/Uint16Array>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/value/Value%29=>~lib/string/String>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2Cu32%29=>u32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2Ci32%2Cassembly/chunk/Chunk%2Cu32%29=>u32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/chunk/Chunk%2Cu32%29=>u32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/chunk/Chunk%2C~lib/string/String%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/Local>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Local>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Local>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Local>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/Upvalue>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/Upvalue>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/compiler/ParseRule>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/compiler/ParseRule>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28bool%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28bool%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/object/ObjString>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjString>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjString>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/object/ObjString>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/value/Value>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/value/Value>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/value/Value>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/value/Value>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/array/Array<assembly/value/Value>%29=>assembly/value/Value>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u8>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/value/Value>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>u16>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/vm/CallFrame%29=>assembly/object/ObjString>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28%28f64%2Cf64%29=>bool%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28%28f64%2Cf64%29=>f64%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>bool>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28f64%2Cf64%29=>bool>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>f64>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28f64%2Cf64%29=>f64>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/object/Object#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<u8>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.const 0
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 544
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 0
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/value/Value>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 544
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 14
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/util/number/utoa32 (param $value i32) (param $radix i32) (result i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|7 i32)
  (local $buffer|8 i32)
  (local $num|9 i32)
  (local $offset|10 i32)
  (local $decimals|11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 1120
   i32.const 1248
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 1312
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|7
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|7
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $buffer|8
    local.get $value
    local.set $num|9
    local.get $decimals|7
    local.set $offset|10
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|8
    local.get $num|9
    i64.extend_i32_u
    local.get $offset|10
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|11
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|11
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $value
    i64.extend_i32_u
    local.get $decimals|11
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/util/number/dtoa (param $value f64) (result i32)
  (local $size i32)
  (local $result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  f64.const 0
  f64.eq
  if
   i32.const 3024
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $value
   local.get $value
   f64.ne
   if
    i32.const 3056
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 3088
   i32.const 3136
   local.get $value
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 3168
  local.get $value
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  local.get $result
  i32.const 3168
  local.get $size
  memory.copy $0 $0
  local.get $result
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/vm/CallFrame>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 496
   i32.const 544
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 18
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 496
   i32.const 800
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/number/itoa32 (param $value i32) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|8 i32)
  (local $buffer|9 i32)
  (local $num|10 i32)
  (local $offset|11 i32)
  (local $val32 i32)
  (local $decimals|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 1120
   i32.const 1248
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 1312
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $value
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   local.get $sign
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.get $sign
   i32.add
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|8
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|8
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|9
    local.get $value
    local.set $num|10
    local.get $decimals|8
    local.set $offset|11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|9
    local.get $num|10
    i64.extend_i32_u
    local.get $offset|11
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.set $val32
    local.get $val32
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.get $val32
    i64.extend_i32_u
    local.get $decimals|13
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16 $0
  end
  local.get $out
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $export:assembly/index/printout (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/printout
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/debugLog (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/debugLog
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/main (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/main
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
)
